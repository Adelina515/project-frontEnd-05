{"version":3,"file":"static/js/91.cb531290.chunk.js","mappings":"sKACA,MAA4B,8B,SCK5B,EALiB,SAADA,GAAgB,IAAbC,EAAQD,EAARC,SACnB,OACIC,EAAAA,EAAAA,KAAA,MAAIC,UAAWC,EAAcH,SAAEA,GAEnC,C,yHCJA,EAA4B,yBAA5B,EAA+D,uBAA/D,EAAgG,uBAAhG,EAA8H,oBAA9H,EAA0J,qB,SCE7II,EAAQ,SAAHL,GAAwC,IAAlCM,EAAKN,EAALM,MAAOC,EAAMP,EAANO,OAAQC,EAAIR,EAAJQ,KAAMC,EAAKT,EAALS,MAC3C,OACEC,EAAAA,EAAAA,MAAA,OAAKP,UAAWC,EAAgBO,MAAO,CAAEC,gBAAiBN,GAAQL,SAAA,EAChES,EAAAA,EAAAA,MAAA,OAAKP,UAAWC,EAAYH,SAAA,EAC1BC,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAYH,UAC1BC,EAAAA,EAAAA,KAAA,OAAKW,KAAI,GAAAC,OAAKC,EAAAA,EAAM,KAAAD,OAAIP,QAE1BL,EAAAA,EAAAA,KAAA,KAAGC,UAAWC,EAASH,SAAEO,QAE3BN,EAAAA,EAAAA,KAAA,KAAGC,UAAWC,EAAUH,SAAEQ,MAGhC,E,8BCdA,EAAsI,8BAAtI,EAA6K,yBAA7K,EAA8M,wBAA9M,EAA+O,yBAA/O,EAAoW,4BAApW,EAA2Y,2BCA9XO,EAAoB,SAAAC,GAAK,OAAIA,EAAMC,QAAQC,SAAU,E,UCMrDC,EAAc,SAAHpB,GAA0B,IAApBqB,EAAIrB,EAAJqB,KAAMC,EAAMtB,EAANsB,OAC5BC,GAAWC,EAAAA,EAAAA,MACXC,GAAaC,EAAAA,EAAAA,IAAYV,GAC/BW,GAAkCC,EAAAA,EAAAA,YAAUC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAArCR,EAASU,EAAA,GAAEE,EAAYF,EAAA,IAE9BG,EAAAA,EAAAA,YAAU,WAERD,EAAaT,EACf,GAAG,CAACA,IAEJ,IAAMW,GACJ/B,EAAAA,EAAAA,KAAA,OACEgC,IAAKf,GAAaM,EAClBtB,UAAWC,EACX+B,MAAM,OACNC,IAAI,WAGFC,GACJnC,EAAAA,EAAAA,KAAA,OAAKoC,KAAK,OAAOH,MAAM,KAAKI,OAAO,KAAItC,UACrCC,EAAAA,EAAAA,KAAA,OAAKW,KAAI,GAAAC,OAAKC,EAAAA,EAAM,kBAexB,OACEL,EAAAA,EAAAA,MAAA,OAAKP,UAAWC,EAAiBO,MAAO,CAAEC,gBAAiB,WAAYX,SAAA,EACrEC,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAWH,SACxBkB,EAAYc,EAAaI,KAE5B3B,EAAAA,EAAAA,MAAA,QAAM8B,GAAG,cAAavC,SAAA,EACpBC,EAAAA,EAAAA,KAAA,SACEuC,KAAK,OACLD,GAAG,aACHnB,KAAK,OACLV,MAAO,CAAE+B,QAAS,QAClBC,SAtBmB,SAAAC,GACzB,IAAMC,EAAOD,EAAME,OAAOC,MAAM,GAChC,GAAIF,EAAM,CACR,IAAMG,EAAO,IAAIC,KAAK,CAACJ,IACjBK,EAAYC,IAAIC,gBAAgBJ,GACtCjB,EAAamB,GAEb3B,GAAS8B,EAAAA,EAAAA,IAAsBR,GACjC,CACF,KAeM3C,EAAAA,EAAAA,KAAA,SAAOoD,QAAQ,aAAYrD,UACzBC,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAWH,UACzBC,EAAAA,EAAAA,KAAA,OAAKiC,MAAM,KAAKI,OAAO,KAAKgB,QAAQ,YAAWtD,UAC7CC,EAAAA,EAAAA,KAAA,OAAKsD,UAAS,GAAA1C,OAAKC,EAAAA,EAAM,0BAKjCb,EAAAA,EAAAA,KAAA,KAAGC,UAAWC,EAAcH,SAAEoB,KAC9BnB,EAAAA,EAAAA,KAAA,KAAGC,UAAWC,EAAaH,SAAC,WAGlC,E,oBC7BO,SAASwD,EAASC,EAAUC,GAAS,IAAAC,EAItCC,EAHEC,EAA4C,QAA5BF,EAAU,OAAPD,QAAO,IAAPA,OAAO,EAAPA,EAASG,wBAAgB,IAAAF,EAAAA,EAAI,EAChDG,EAiER,SAAyBC,GACvB,IAEIC,EAFEF,EAAc,CAAC,EACfG,EAAQF,EAAWG,MAAMC,EAASC,mBAKxC,GAAIH,EAAMI,OAAS,EACjB,OAAOP,EAGL,IAAIQ,KAAKL,EAAM,IACjBD,EAAaC,EAAM,IAEnBH,EAAYF,KAAOK,EAAM,GACzBD,EAAaC,EAAM,GACfE,EAASI,kBAAkBD,KAAKR,EAAYF,QAC9CE,EAAYF,KAAOG,EAAWG,MAAMC,EAASI,mBAAmB,GAChEP,EAAaD,EAAWS,OACtBV,EAAYF,KAAKS,OACjBN,EAAWM,UAKjB,GAAIL,EAAY,CACd,IAAMS,EAAQN,EAASO,SAASC,KAAKX,GACjCS,GACFX,EAAYc,KAAOZ,EAAWa,QAAQJ,EAAM,GAAI,IAChDX,EAAYY,SAAWD,EAAM,IAE7BX,EAAYc,KAAOZ,CAEvB,CAEA,OAAOF,CACT,CArGsBgB,CAAgBrB,GAGpC,GAAIK,EAAYF,KAAM,CACpB,IAAMmB,EAmGV,SAAmBhB,EAAYF,GAC7B,IAAMmB,EAAQ,IAAIC,OAChB,wBACG,EAAIpB,GACL,uBACC,EAAIA,GACL,QAGEqB,EAAWnB,EAAWoB,MAAMH,GAElC,IAAKE,EAAU,MAAO,CAAEE,KAAMC,IAAKC,eAAgB,IAEnD,IAAMF,EAAOF,EAAS,GAAKK,SAASL,EAAS,IAAM,KAC7CM,EAAUN,EAAS,GAAKK,SAASL,EAAS,IAAM,KAGtD,MAAO,CACLE,KAAkB,OAAZI,EAAmBJ,EAAiB,IAAVI,EAChCF,eAAgBvB,EAAW0B,OAAOP,EAAS,IAAMA,EAAS,IAAIb,QAElE,CAxH4BqB,CAAU5B,EAAYF,KAAMC,GACpDD,EAyHJ,SAAmBG,EAAYqB,GAE7B,GAAa,OAATA,EAAe,OAAO,IAAIO,KAAKN,KAEnC,IAAMH,EAAWnB,EAAWoB,MAAMS,GAElC,IAAKV,EAAU,OAAO,IAAIS,KAAKN,KAE/B,IAAMQ,IAAeX,EAAS,GACxBY,EAAYC,EAAcb,EAAS,IACnCc,EAAQD,EAAcb,EAAS,IAAM,EACrCe,EAAMF,EAAcb,EAAS,IAC7BgB,EAAOH,EAAcb,EAAS,IAC9BiB,EAAYJ,EAAcb,EAAS,IAAM,EAE/C,GAAIW,EACF,OA0FJ,SAA0BO,EAAOF,EAAMD,GACrC,OAAOC,GAAQ,GAAKA,GAAQ,IAAMD,GAAO,GAAKA,GAAO,CACvD,CA5FSI,CAAiBjB,EAAMc,EAAMC,GA2DtC,SAA0BG,EAAaJ,EAAMD,GAC3C,IAAMrC,EAAO,IAAI+B,KAAK,GACtB/B,EAAK2C,eAAeD,EAAa,EAAG,GACpC,IAAME,EAAqB5C,EAAK6C,aAAe,EACzCC,EAAoB,GAAZR,EAAO,GAASD,EAAM,EAAIO,EAExC,OADA5C,EAAK+C,WAAW/C,EAAKgD,aAAeF,GAC7B9C,CACT,CA/DWiD,CAAiBzB,EAAMc,EAAMC,GAF3B,IAAIR,KAAKN,KAIlB,IAAMzB,EAAO,IAAI+B,KAAK,GACtB,OAuEJ,SAAsBP,EAAMY,EAAOpC,GACjC,OACEoC,GAAS,GACTA,GAAS,IACTpC,GAAQ,GACRA,IAASkD,EAAad,KAAWe,EAAgB3B,GAAQ,GAAK,IAElE,CA7EO4B,CAAa5B,EAAMY,EAAOC,IA+EjC,SAA+Bb,EAAMU,GACnC,OAAOA,GAAa,GAAKA,IAAciB,EAAgB3B,GAAQ,IAAM,IACvE,CAhFO6B,CAAsB7B,EAAMU,IAI/BlC,EAAK2C,eAAenB,EAAMY,EAAOkB,KAAKC,IAAIrB,EAAWG,IAC9CrC,GAHE,IAAI+B,KAAKN,IAKtB,CAxJW+B,CAAUrC,EAAgBO,eAAgBP,EAAgBK,KACnE,CAEA,IAAKxB,GAAQyD,MAAMzD,EAAK0D,WACtB,OAAO,IAAI3B,KAAKN,KAGlB,IAEIkC,EAFEC,EAAY5D,EAAK0D,UACnB1C,EAAO,EAGX,GAAId,EAAYc,OACdA,EAkJJ,SAAmBZ,GACjB,IAAMkB,EAAWlB,EAAWmB,MAAMsC,GAClC,IAAKvC,EAAU,OAAOG,IAEtB,IAAMqC,EAAQC,EAAczC,EAAS,IAC/B0C,EAAUD,EAAczC,EAAS,IACjC2C,EAAUF,EAAczC,EAAS,IAEvC,IAiEF,SAAsBwC,EAAOE,EAASC,GACpC,GAAc,KAAVH,EACF,OAAmB,IAAZE,GAA6B,IAAZC,EAG1B,OACEA,GAAW,GACXA,EAAU,IACVD,GAAW,GACXA,EAAU,IACVF,GAAS,GACTA,EAAQ,EAEZ,CA9EOI,CAAaJ,EAAOE,EAASC,GAChC,OAAOxC,IAGT,OACEqC,EAAQK,EAAAA,GAAqBH,EAAUI,EAAAA,GAAiC,IAAVH,CAElE,CAjKWI,CAAUnE,EAAYc,MACzByC,MAAMzC,IACR,OAAO,IAAIe,KAAKN,KAIpB,IAAIvB,EAAYY,SAKT,CACL,IAAMwD,EAAY,IAAIvC,KAAK6B,EAAY5C,GAMjCuD,EAAS,IAAIxC,KAAK,GAYxB,OAXAwC,EAAOC,YACLF,EAAUG,iBACVH,EAAUI,cACVJ,EAAUtB,cAEZuB,EAAOI,SACLL,EAAUM,cACVN,EAAUO,gBACVP,EAAUQ,gBACVR,EAAUS,sBAELR,CACT,CAvBE,OADAZ,EAgKJ,SAAuBqB,GACrB,GAAuB,MAAnBA,EAAwB,OAAO,EAEnC,IAAM1D,EAAW0D,EAAezD,MAAM0D,GACtC,IAAK3D,EAAU,OAAO,EAEtB,IAAM4D,EAAuB,MAAhB5D,EAAS,IAAc,EAAI,EAClCwC,EAAQnC,SAASL,EAAS,IAC1B0C,EAAW1C,EAAS,IAAMK,SAASL,EAAS,KAAQ,EAE1D,IAyDF,SAA0B6D,EAAQnB,GAChC,OAAOA,GAAW,GAAKA,GAAW,EACpC,CA3DOoB,CAAiBtB,EAAOE,GAC3B,OAAOvC,IAGT,OAAOyD,GAAQpB,EAAQK,EAAAA,GAAqBH,EAAUI,EAAAA,GACxD,CA/KaiB,CAAcnF,EAAYY,UAC/B2C,MAAME,GACD,IAAI5B,KAAKN,KAwBb,IAAIM,KAAK6B,EAAY5C,EAAO2C,EACrC,CAEA,IAAMpD,EAAW,CACfC,kBAAmB,OACnBG,kBAAmB,QACnBG,SAAU,cAGNkB,EACJ,gEACI6B,EACJ,4EACIoB,EAAgB,gCAgGtB,SAAS9C,EAAcvF,GACrB,OAAOA,EAAQ+E,SAAS/E,GAAS,CACnC,CAmBA,SAASmH,EAAcnH,GACrB,OAAQA,GAAS0I,WAAW1I,EAAMqE,QAAQ,IAAK,OAAU,CAC3D,CA+BA,IAAMiC,EAAe,CAAC,GAAI,KAAM,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAEpE,SAASC,EAAgB3B,GACvB,OAAOA,EAAO,MAAQ,GAAMA,EAAO,IAAM,GAAKA,EAAO,MAAQ,CAC/D,CAuCA,I,oBCvSA,GAAgB,WAAa,gCAAgC,WAAa,iCCC7D+D,EAAc,SAAHpJ,GAAA,IAAMwC,EAAExC,EAAFwC,GAAInB,EAAIrB,EAAJqB,KAAMZ,EAAKT,EAALS,MAAO4I,EAAOrJ,EAAPqJ,QAASC,EAAKtJ,EAALsJ,MAAO3G,EAAQ3C,EAAR2C,SAAQ,OACrEjC,EAAAA,EAAAA,MAAA,OAAKP,UAAWC,EAAAA,MAAUH,SAAA,EACxBC,EAAAA,EAAAA,KAAA,SACEC,UAAWC,EAAAA,WACXqC,KAAK,QACLD,GAAIA,EACJnB,KAAMA,EACNZ,MAAOA,EACP4I,QAASA,EACT1G,SAAUA,KAEZzC,EAAAA,EAAAA,KAAA,SAAOC,UAAWC,EAAAA,WAAgBkD,QAASd,EAAGvC,SAC3CqJ,MAEC,ECfR,EAAgC,gCAAhC,EAA+E,+BAA/E,EAAsH,wBAAtH,EAAkK,oCAAlK,EAAgN,0BAAhN,EAAuP,6BAAvP,EAAmU,+BAAnU,EAA+d,yBAA/d,EAAugB,+BAAvgB,EAAmjB,6BCQtiBC,EAAW,SAAHvJ,GAUd,IATLqB,EAAIrB,EAAJqB,KACAkB,EAAMvC,EAANuC,OACAiH,EAAaxJ,EAAbwJ,cACAC,EAAazJ,EAAbyJ,cACAC,EAAQ1J,EAAR0J,SACAC,EAAK3J,EAAL2J,MACAC,EAAG5J,EAAH4J,IACAC,EAAa7J,EAAb6J,cACAC,EAAK9J,EAAL8J,MAEMvI,GAAWC,EAAAA,EAAAA,MAEXuI,EAAe,CACnB,CAAEvH,GAAI,IAAK/B,MAAO,EAAG6I,MAAO,KAC5B,CAAE9G,GAAI,IAAK/B,MAAO,EAAG6I,MAAO,KAC5B,CAAE9G,GAAI,IAAK/B,MAAO,EAAG6I,MAAO,KAC5B,CAAE9G,GAAI,IAAK/B,MAAO,EAAG6I,MAAO,MAGxBU,EAAa,CACjB,CAAExH,GAAI,OAAQ/B,MAAO,OAAQ6I,MAAO,QACpC,CAAE9G,GAAI,SAAU/B,MAAO,SAAU6I,MAAO,WAGpCW,EAAe,CACnB,CACEzH,GAAI,UACJ/B,MAAO,EACP6I,MAAO,wDAET,CACE9G,GAAI,UACJ/B,MAAO,EACP6I,MAAO,6DAET,CACE9G,GAAI,UACJ/B,MAAO,EACP6I,MAAO,mEAET,CACE9G,GAAI,UACJ/B,MAAO,EACP6I,MAAO,4DAET,CACE9G,GAAI,UACJ/B,MAAO,EACP6I,MACE,yEAYN,IAAKjI,EACH,OAAOnB,EAAAA,EAAAA,KAAA,OAAAD,SAAK,eAEd,IAAMiK,EAAgBzG,EAASiG,GAEzBS,EAAgB,CACpB9I,KAAMA,EACNkB,OAAQA,EACRiH,cAAeA,EACfC,cAAeA,EACfC,SAAUQ,EACVP,MAAOA,GAAS,EAChBC,IAAKA,GAAO,OACZC,cAAeA,GAAiB,KAG5BO,EAAmBC,EAAAA,GAAW,CAClChJ,KAAMgJ,EAAAA,KAAaC,SAAS,oBAC5B/H,OAAQ8H,EAAAA,KACLE,SAAS,2BACTD,SAAS,sBACZd,cAAea,EAAAA,KACZE,SAAS,2BACTD,SAAS,8BACZb,cAAeY,EAAAA,KACZE,SAAS,2BACTD,SAAS,8BACZZ,SAAUW,EAAAA,KAAWC,SAAS,wBAC9BX,MAAOU,EAAAA,OAGT,OACEnK,EAAAA,EAAAA,KAACsK,EAAAA,GAAM,CACLL,cAAeA,EACfC,iBAAkBA,EAClBK,SA3CiB,SAAAC,GACnB,IAAMC,GAAQC,EAAAA,EAAAA,GAAA,GACTF,GAGLnJ,GAASsJ,EAAAA,EAAAA,IAAsBF,GACjC,EAqC2B1K,SAEtB,SAAA6K,GAAM,OACLpK,EAAAA,EAAAA,MAACqK,EAAAA,GAAI,CAAA9K,SAAA,EACHS,EAAAA,EAAAA,MAAA,OAAKP,UAAWC,EAAkBH,SAAA,EAChCS,EAAAA,EAAAA,MAAA,OAAAT,SAAA,EACEC,EAAAA,EAAAA,KAAA,KAAGC,UAAWC,EAAiBH,SAAC,gBAChCC,EAAAA,EAAAA,KAAA,SACEmB,KAAK,OACLoB,KAAK,OACLtC,UAAWC,EACX4K,aAAc3J,EACd4J,UAAQ,EACRC,UAAQ,QAGZhL,EAAAA,EAAAA,KAAA,OAAAD,UACEC,EAAAA,EAAAA,KAAA,SACEuC,KAAK,OACLpB,KAAK,QACL2J,aAAclB,EACd3J,UAAWC,EACX6K,UAAQ,EACRC,UAAQ,UAKdxK,EAAAA,EAAAA,MAAA,OAAKP,UAAWC,EAAsBH,SAAA,EACpCC,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAYH,UAC1BS,EAAAA,EAAAA,MAAA,OAAKP,UAAWC,EAAeH,SAAA,EAC7BC,EAAAA,EAAAA,KAACiL,EAAAA,GAAK,CACJ1I,KAAK,SACLpB,KAAK,SACLmB,GAAG,SACH4I,YAAY,GACZjL,UAAWC,KAEbF,EAAAA,EAAAA,KAAA,SAAOoD,QAAQ,SAAQrD,SAAC,iBAG5BS,EAAAA,EAAAA,MAAA,OAAKP,UAAWC,EAAeH,SAAA,EAC7BC,EAAAA,EAAAA,KAACiL,EAAAA,GAAK,CACJ1I,KAAK,SACLpB,KAAK,gBACLmB,GAAG,gBACH4I,YAAY,GACZjL,UAAWC,KAEbF,EAAAA,EAAAA,KAAA,SAAOoD,QAAQ,gBAAerD,SAAC,0BAInCS,EAAAA,EAAAA,MAAA,OAAKP,UAAWC,EAAsBH,SAAA,EACpCS,EAAAA,EAAAA,MAAA,OAAKP,UAAWC,EAAeH,SAAA,EAC7BC,EAAAA,EAAAA,KAACiL,EAAAA,GAAK,CACJ1I,KAAK,SACLpB,KAAK,gBACLmB,GAAG,gBACH4I,YAAY,GACZjL,UAAWC,KAEbF,EAAAA,EAAAA,KAAA,SAAOoD,QAAQ,gBAAerD,SAAC,uBAEjCS,EAAAA,EAAAA,MAAA,OAAKP,UAAWC,EAAeH,SAAA,EAC7BC,EAAAA,EAAAA,KAAA,SACEuC,KAAK,OACLpB,KAAK,WACLmB,GAAG,WACH/B,MAAOqK,EAAOJ,OAAOhB,SACrB/G,SAAUmI,EAAOO,aACjBlL,UAAWC,KAEbF,EAAAA,EAAAA,KAAA,SAAOoD,QAAQ,WAAUrD,SAAC,4BAI9BS,EAAAA,EAAAA,MAAA,OAAKP,UAAWC,EAAiBH,SAAA,EAC/BS,EAAAA,EAAAA,MAAA,OAAKC,MAAO,CAAE+B,QAAS,OAAQ4I,YAAa,QAASrL,SAAA,EACnDC,EAAAA,EAAAA,KAAA,OAAKS,MAAO,CAAE+B,QAAS,OAAQ4I,YAAa,QAASrL,SAClD8J,EAAawB,KAAI,SAAAC,GAAM,OACtBtL,EAAAA,EAAAA,KAACkJ,EAAW,CAEV5G,GAAIgJ,EAAOhJ,GACXnB,KAAK,QACLZ,MAAO+K,EAAO/K,MACd4I,QAASyB,EAAOJ,OAAOf,QAAU6B,EAAO/K,MACxC6I,MAAOkC,EAAOlC,MACd3G,SAAU,kBAAMmI,EAAOW,cAAc,QAASD,EAAO/K,MAAM,GANtD+K,EAAOhJ,GAOZ,OAINtC,EAAAA,EAAAA,KAAA,OAAKS,MAAO,CAAE+B,QAAS,QAASzC,SAC7B+J,EAAWuB,KAAI,SAAAC,GAAM,OACpBtL,EAAAA,EAAAA,KAACkJ,EAAW,CAEV5G,GAAIgJ,EAAOhJ,GACXnB,KAAK,MACLZ,MAAO+K,EAAO/K,MACd4I,QAASyB,EAAOJ,OAAOd,MAAQ4B,EAAO/K,MACtC6I,MAAOkC,EAAOlC,MACd3G,SAAU,kBAAMmI,EAAOW,cAAc,MAAOD,EAAO/K,MAAM,GANpD+K,EAAOhJ,GAOZ,UAKRtC,EAAAA,EAAAA,KAAA,OAAAD,SACGgK,EAAasB,KAAI,SAAAC,GAAM,OACtBtL,EAAAA,EAAAA,KAACkJ,EAAW,CACVjJ,UAAWC,EAEXoC,GAAIgJ,EAAOhJ,GACXnB,KAAK,gBACLZ,MAAO+K,EAAO/K,MACd4I,QAASyB,EAAOJ,OAAOb,gBAAkB2B,EAAO/K,MAChD6I,MAAOkC,EAAOlC,MACd3G,SAAU,kBACRmI,EAAOW,cAAc,gBAAiBD,EAAO/K,MAAM,GAPhD+K,EAAOhJ,GASZ,UAKRtC,EAAAA,EAAAA,KAAA,UAAQuC,KAAK,SAAStC,UAAWC,EAAWH,SAAC,WAGxC,GAIf,ECvOe,SAASyL,IACtB,IAAMnK,GAAWC,EAAAA,EAAAA,MACXP,GAAQS,EAAAA,EAAAA,KAAY,SAAAT,GAAK,OAAIA,EAAMC,OAAO,IAmBhD,OAjBAc,EAAAA,EAAAA,YAAU,WACR,IAAM2J,EAAS,eAAA3L,GAAA4L,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,IAAA,OAAAD,IAAAA,MAAA,SAAAE,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAER1K,GAAS2K,EAAAA,EAAAA,OAAwB,KAAD,EAAAH,EAAAE,KAAA,eAAAF,EAAAC,KAAA,EAAAD,EAAAI,GAAAJ,EAAA,SAKtCK,QAAQC,MAAM,gOAA2CN,EAAAI,IACzD,wBAAAJ,EAAAO,OAAA,GAAAR,EAAA,kBAEH,kBAVc,OAAA9L,EAAAuM,MAAA,KAAAC,UAAA,KAYfb,GACF,GAAG,CAACpK,IAGCN,GAKHP,EAAAA,EAAAA,MAAA,OAAAT,SAAA,EACEC,EAAAA,EAAAA,KAAA,KAAAD,SAAG,aACHC,EAAAA,EAAAA,KAACuM,EAAAA,EAAS,CAACxM,SAAU,sBACrBC,EAAAA,EAAAA,KAACkB,EAAW,CAACC,KAAW,OAALJ,QAAK,IAALA,OAAK,EAALA,EAAOI,KAAMC,OAAa,OAALL,QAAK,IAALA,OAAK,EAALA,EAAOE,aAC/CT,EAAAA,EAAAA,MAAA,OAAKC,MAAO,CAAE+B,QAAS,OAAQgK,OAAQ,OAAQC,IAAK,QAAS1M,SAAA,EAC3DC,EAAAA,EAAAA,KAACG,EAAK,CACJC,MAAM,UACNC,OAAQ,mBACRC,KAAM,uBACNC,MAAY,OAALQ,QAAK,IAALA,OAAK,EAALA,EAAO2L,OAEhB1M,EAAAA,EAAAA,KAACG,EAAK,CACJC,MAAM,UACNC,OAAQ,mBACRC,KAAM,0BACNC,MAAO,gBAGXP,EAAAA,EAAAA,KAACqJ,EAAQ,CACPlI,KAAMJ,EAAMI,KACZkB,OAAQtB,EAAMsB,OACdiH,cAAevI,EAAMuI,cACrBC,cAAexI,EAAMwI,cACrBC,SAAUzI,EAAMyI,SAChBC,MAAO1I,EAAM0I,MACbC,IAAK3I,EAAM2I,IACXC,cAAe5I,EAAM4I,cACrBC,MAAO7I,EAAM6I,YA/BV5J,EAAAA,EAAAA,KAAA,OAAAD,SAAK,cAmChB,C,gICZuBkH,KAAK0F,IAAI,GAAI,GA/B7B,IAsDMC,EAAqB,OAOrBC,EAAoB,MAOpB9E,EAAuB,IAOvBD,EAAqB,I","sources":["webpack://react-homework-template/./src/components/TitlePage/title-page.module.css?6643","components/TitlePage/TitlePage.jsx","webpack://react-homework-template/./src/components/daily/Daily.module.css?5940","components/daily/Daily.jsx","webpack://react-homework-template/./src/components/userCard/UserCard.module.css?313b","redux/UserPageCntrls/selectors.jsx","components/userCard/UserCard.js","../node_modules/date-fns/parseISO.mjs","webpack://react-homework-template/./src/components/radioButton/RadioButton.module.css?6146","components/radioButton/RadioButton.jsx","webpack://react-homework-template/./src/components/userForm/UserForm.module.css?2194","components/userForm/UserForm.js","pages/Profile.js","../node_modules/date-fns/constants.mjs"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"titlePage\":\"title-page_titlePage__ZBar5\"};","import css from \"./title-page.module.css\";\n const TitlePage=({children})=>{\nreturn(\n    <h2 className={css.titlePage}>{children}</h2>\n)\n}\nexport default TitlePage;","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Daily_container__sYlbh\",\"wrapper\":\"Daily_wrapper__-4E8J\",\"svgIcon\":\"Daily_svgIcon__N1fMy\",\"text\":\"Daily_text__b53vF\",\"value\":\"Daily_value__XkUNS\"};","import sprite from '../../img/sprite/symbol-defs.svg';\nimport css from './Daily.module.css'\n\nexport const Daily = ({ color, iconId, text, value }) => {\n  return (\n    <div className={css.container}  style={{ backgroundColor: color }}>\n      <div className={css.wrapper}>\n        <svg className={css.svgIcon}>\n          <use href={`${sprite}#${iconId}`} />\n        </svg>\n        <p className={css.text}>{text}</p>\n      </div>\n      <p className={css.value}>{value}</p>\n    </div>\n  );\n};","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"UserCard_wrapper__tGVzv\",\"svg-icon\":\"UserCard_svg-icon__kD8J3\",\"text\":\"UserCard_text__fr15B\",\"wrapperPage\":\"UserCard_wrapperPage__d3Ri+\",\"avatar\":\"UserCard_avatar__qx8Iu\",\"photo\":\"UserCard_photo__fOfN5\",\"button\":\"UserCard_button__qZY0U\",\"svgLogoUser\":\"UserCard_svgLogoUser__n2Pd7\",\"iconBtn\":\"UserCard_iconBtn__HMhCT\",\"titleName\":\"UserCard_titleName__vBdoI\",\"subtitle\":\"UserCard_subtitle__iw3sg\"};","export const selectUser = state => state.profile.userData;\nexport const selectUsersAvatar = state => state.profile.avatarURL;\n\n// export const selectIsUpdating = state => state.auth.isUpdateUserData;","import { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport css from './UserCard.module.css';\nimport { selectUsersAvatar } from '../../redux/UserPageCntrls/selectors.jsx';\nimport sprite from '../../img/sprite/symbol-defs.svg';\nimport { updateProfileAvatarTh } from '../../redux/UserPageCntrls/UserPageOperations';\n\nexport const UserProfile = ({ name, avatar }) => {\n  const dispatch = useDispatch();\n  const userAvatar = useSelector(selectUsersAvatar);\n  const [avatarURL, setAvatarURL] = useState();\n\n  useEffect(() => {\n    // При изменении avatar присваиваем новый URL в avatarURL\n    setAvatarURL(avatar);\n  }, [avatar]);\n\n  const avatarUser = (\n    <img\n      src={avatarURL || userAvatar}\n      className={css.photo}\n      width=\"100%\"\n      alt=\"Avatar\"\n    />\n  );\n  const avatarStandart = (\n    <svg fill=\"#000\" width=\"62\" height=\"62\">\n      <use href={`${sprite}#icon-user`}></use>\n    </svg>\n  );\n\n  const handleAvatarChange = event => {\n    const file = event.target.files[0];\n    if (file) {\n      const blob = new Blob([file]);\n      const objectURL = URL.createObjectURL(blob);\n      setAvatarURL(objectURL);\n      // Вызываем экшн для обновления аватара в Redux\n      dispatch(updateProfileAvatarTh(file));\n    }\n  };\n\n  return (\n    <div className={css.wrapperPage} style={{ backgroundColor: '#040404' }}>\n      <div className={css.avatar}>\n        {avatarURL ? avatarUser : avatarStandart}\n      </div>\n      <form id=\"upload-form\">\n        <input\n          type=\"file\"\n          id=\"file-input\"\n          name=\"file\"\n          style={{ display: 'none' }}\n          onChange={handleAvatarChange}\n        />\n        <label htmlFor=\"file-input\">\n          <div className={css.button}>\n            <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n              <use xlinkHref={`${sprite}#icon-plus`}></use>\n            </svg>\n          </div>\n        </label>\n      </form>\n      <p className={css.titleName}>{name}</p>\n      <p className={css.subtitle}>User</p>\n    </div>\n  );\n};\n","import { millisecondsInHour, millisecondsInMinute } from \"./constants.mjs\";\n\n/**\n * The {@link parseISO} function options.\n */\n\n/**\n * @name parseISO\n * @category Common Helpers\n * @summary Parse ISO string\n *\n * @description\n * Parse the given string in ISO 8601 format and return an instance of Date.\n *\n * Function accepts complete ISO 8601 formats as well as partial implementations.\n * ISO 8601: http://en.wikipedia.org/wiki/ISO_8601\n *\n * If the argument isn't a string, the function cannot parse the string or\n * the values are invalid, it returns Invalid Date.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param argument - The value to convert\n * @param options - An object with options\n *\n * @returns The parsed date in the local time zone\n *\n * @example\n * // Convert string '2014-02-11T11:30:30' to date:\n * const result = parseISO('2014-02-11T11:30:30')\n * //=> Tue Feb 11 2014 11:30:30\n *\n * @example\n * // Convert string '+02014101' to date,\n * // if the additional number of digits in the extended year format is 1:\n * const result = parseISO('+02014101', { additionalDigits: 1 })\n * //=> Fri Apr 11 2014 00:00:00\n */\nexport function parseISO(argument, options) {\n  const additionalDigits = options?.additionalDigits ?? 2;\n  const dateStrings = splitDateString(argument);\n\n  let date;\n  if (dateStrings.date) {\n    const parseYearResult = parseYear(dateStrings.date, additionalDigits);\n    date = parseDate(parseYearResult.restDateString, parseYearResult.year);\n  }\n\n  if (!date || isNaN(date.getTime())) {\n    return new Date(NaN);\n  }\n\n  const timestamp = date.getTime();\n  let time = 0;\n  let offset;\n\n  if (dateStrings.time) {\n    time = parseTime(dateStrings.time);\n    if (isNaN(time)) {\n      return new Date(NaN);\n    }\n  }\n\n  if (dateStrings.timezone) {\n    offset = parseTimezone(dateStrings.timezone);\n    if (isNaN(offset)) {\n      return new Date(NaN);\n    }\n  } else {\n    const dirtyDate = new Date(timestamp + time);\n    // JS parsed string assuming it's in UTC timezone\n    // but we need it to be parsed in our timezone\n    // so we use utc values to build date in our timezone.\n    // Year values from 0 to 99 map to the years 1900 to 1999\n    // so set year explicitly with setFullYear.\n    const result = new Date(0);\n    result.setFullYear(\n      dirtyDate.getUTCFullYear(),\n      dirtyDate.getUTCMonth(),\n      dirtyDate.getUTCDate(),\n    );\n    result.setHours(\n      dirtyDate.getUTCHours(),\n      dirtyDate.getUTCMinutes(),\n      dirtyDate.getUTCSeconds(),\n      dirtyDate.getUTCMilliseconds(),\n    );\n    return result;\n  }\n\n  return new Date(timestamp + time + offset);\n}\n\nconst patterns = {\n  dateTimeDelimiter: /[T ]/,\n  timeZoneDelimiter: /[Z ]/i,\n  timezone: /([Z+-].*)$/,\n};\n\nconst dateRegex =\n  /^-?(?:(\\d{3})|(\\d{2})(?:-?(\\d{2}))?|W(\\d{2})(?:-?(\\d{1}))?|)$/;\nconst timeRegex =\n  /^(\\d{2}(?:[.,]\\d*)?)(?::?(\\d{2}(?:[.,]\\d*)?))?(?::?(\\d{2}(?:[.,]\\d*)?))?$/;\nconst timezoneRegex = /^([+-])(\\d{2})(?::?(\\d{2}))?$/;\n\nfunction splitDateString(dateString) {\n  const dateStrings = {};\n  const array = dateString.split(patterns.dateTimeDelimiter);\n  let timeString;\n\n  // The regex match should only return at maximum two array elements.\n  // [date], [time], or [date, time].\n  if (array.length > 2) {\n    return dateStrings;\n  }\n\n  if (/:/.test(array[0])) {\n    timeString = array[0];\n  } else {\n    dateStrings.date = array[0];\n    timeString = array[1];\n    if (patterns.timeZoneDelimiter.test(dateStrings.date)) {\n      dateStrings.date = dateString.split(patterns.timeZoneDelimiter)[0];\n      timeString = dateString.substr(\n        dateStrings.date.length,\n        dateString.length,\n      );\n    }\n  }\n\n  if (timeString) {\n    const token = patterns.timezone.exec(timeString);\n    if (token) {\n      dateStrings.time = timeString.replace(token[1], \"\");\n      dateStrings.timezone = token[1];\n    } else {\n      dateStrings.time = timeString;\n    }\n  }\n\n  return dateStrings;\n}\n\nfunction parseYear(dateString, additionalDigits) {\n  const regex = new RegExp(\n    \"^(?:(\\\\d{4}|[+-]\\\\d{\" +\n      (4 + additionalDigits) +\n      \"})|(\\\\d{2}|[+-]\\\\d{\" +\n      (2 + additionalDigits) +\n      \"})$)\",\n  );\n\n  const captures = dateString.match(regex);\n  // Invalid ISO-formatted year\n  if (!captures) return { year: NaN, restDateString: \"\" };\n\n  const year = captures[1] ? parseInt(captures[1]) : null;\n  const century = captures[2] ? parseInt(captures[2]) : null;\n\n  // either year or century is null, not both\n  return {\n    year: century === null ? year : century * 100,\n    restDateString: dateString.slice((captures[1] || captures[2]).length),\n  };\n}\n\nfunction parseDate(dateString, year) {\n  // Invalid ISO-formatted year\n  if (year === null) return new Date(NaN);\n\n  const captures = dateString.match(dateRegex);\n  // Invalid ISO-formatted string\n  if (!captures) return new Date(NaN);\n\n  const isWeekDate = !!captures[4];\n  const dayOfYear = parseDateUnit(captures[1]);\n  const month = parseDateUnit(captures[2]) - 1;\n  const day = parseDateUnit(captures[3]);\n  const week = parseDateUnit(captures[4]);\n  const dayOfWeek = parseDateUnit(captures[5]) - 1;\n\n  if (isWeekDate) {\n    if (!validateWeekDate(year, week, dayOfWeek)) {\n      return new Date(NaN);\n    }\n    return dayOfISOWeekYear(year, week, dayOfWeek);\n  } else {\n    const date = new Date(0);\n    if (\n      !validateDate(year, month, day) ||\n      !validateDayOfYearDate(year, dayOfYear)\n    ) {\n      return new Date(NaN);\n    }\n    date.setUTCFullYear(year, month, Math.max(dayOfYear, day));\n    return date;\n  }\n}\n\nfunction parseDateUnit(value) {\n  return value ? parseInt(value) : 1;\n}\n\nfunction parseTime(timeString) {\n  const captures = timeString.match(timeRegex);\n  if (!captures) return NaN; // Invalid ISO-formatted time\n\n  const hours = parseTimeUnit(captures[1]);\n  const minutes = parseTimeUnit(captures[2]);\n  const seconds = parseTimeUnit(captures[3]);\n\n  if (!validateTime(hours, minutes, seconds)) {\n    return NaN;\n  }\n\n  return (\n    hours * millisecondsInHour + minutes * millisecondsInMinute + seconds * 1000\n  );\n}\n\nfunction parseTimeUnit(value) {\n  return (value && parseFloat(value.replace(\",\", \".\"))) || 0;\n}\n\nfunction parseTimezone(timezoneString) {\n  if (timezoneString === \"Z\") return 0;\n\n  const captures = timezoneString.match(timezoneRegex);\n  if (!captures) return 0;\n\n  const sign = captures[1] === \"+\" ? -1 : 1;\n  const hours = parseInt(captures[2]);\n  const minutes = (captures[3] && parseInt(captures[3])) || 0;\n\n  if (!validateTimezone(hours, minutes)) {\n    return NaN;\n  }\n\n  return sign * (hours * millisecondsInHour + minutes * millisecondsInMinute);\n}\n\nfunction dayOfISOWeekYear(isoWeekYear, week, day) {\n  const date = new Date(0);\n  date.setUTCFullYear(isoWeekYear, 0, 4);\n  const fourthOfJanuaryDay = date.getUTCDay() || 7;\n  const diff = (week - 1) * 7 + day + 1 - fourthOfJanuaryDay;\n  date.setUTCDate(date.getUTCDate() + diff);\n  return date;\n}\n\n// Validation functions\n\n// February is null to handle the leap year (using ||)\nconst daysInMonths = [31, null, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n\nfunction isLeapYearIndex(year) {\n  return year % 400 === 0 || (year % 4 === 0 && year % 100 !== 0);\n}\n\nfunction validateDate(year, month, date) {\n  return (\n    month >= 0 &&\n    month <= 11 &&\n    date >= 1 &&\n    date <= (daysInMonths[month] || (isLeapYearIndex(year) ? 29 : 28))\n  );\n}\n\nfunction validateDayOfYearDate(year, dayOfYear) {\n  return dayOfYear >= 1 && dayOfYear <= (isLeapYearIndex(year) ? 366 : 365);\n}\n\nfunction validateWeekDate(_year, week, day) {\n  return week >= 1 && week <= 53 && day >= 0 && day <= 6;\n}\n\nfunction validateTime(hours, minutes, seconds) {\n  if (hours === 24) {\n    return minutes === 0 && seconds === 0;\n  }\n\n  return (\n    seconds >= 0 &&\n    seconds < 60 &&\n    minutes >= 0 &&\n    minutes < 60 &&\n    hours >= 0 &&\n    hours < 25\n  );\n}\n\nfunction validateTimezone(_hours, minutes) {\n  return minutes >= 0 && minutes <= 59;\n}\n\n// Fallback for modularized imports:\nexport default parseISO;\n","// extracted by mini-css-extract-plugin\nexport default {\"radioLabel\":\"RadioButton_radioLabel__tLXtN\",\"radioInput\":\"RadioButton_radioInput__CQEnN\"};","import css from \"./RadioButton.module.css\";\n\nexport const RadioButton = ({ id, name, value, checked, label, onChange }) => (\n  <div className={css.radio}>\n    <input\n      className={css.radioInput}\n      type=\"radio\"\n      id={id}\n      name={name}\n      value={value}\n      checked={checked}\n      onChange={onChange}\n    />\n    <label className={css.radioLabel} htmlFor={id}>\n      {label}\n    </label>\n  </div>\n);\n","// extracted by mini-css-extract-plugin\nexport default {\"formContainer\":\"UserForm_formContainer__UR0Yw\",\"sectionTitle\":\"UserForm_sectionTitle__UD9P1\",\"input\":\"UserForm_input__krz-3\",\"wrapperInputField\":\"UserForm_wrapperInputField__8+JwJ\",\"wrapper\":\"UserForm_wrapper__t2OoJ\",\"inputField\":\"UserForm_inputField__oR+hK\",\"label\":\"UserForm_label__panU-\",\"wrapperRadio\":\"UserForm_wrapperRadio__vfL8d\",\"radio\":\"UserForm_radio__rszED\",\"radioInput\":\"UserForm_radioInput__RjaF7\",\"radioLabel\":\"UserForm_radioLabel__jGBtx\",\"button\":\"UserForm_button__v70Qd\",\"wrapperLevel\":\"UserForm_wrapperLevel__OZHYS\",\"wrappInput\":\"UserForm_wrappInput__1juhL\"};","import { parseISO } from 'date-fns';\nimport { useDispatch } from 'react-redux'; ///useSelector\nimport { Formik, Field, Form } from 'formik'; /// ErrorMessage\nimport * as Yup from 'yup';\nimport { updateProfileParamsTh } from '../../redux/UserPageCntrls/UserPageOperations';\n\nimport { RadioButton } from 'components/radioButton/RadioButton';\nimport css from './UserForm.module.css';\n\nexport const UserForm = ({\n  name,\n  height,\n  currentWeight,\n  desiredWeight,\n  birthday,\n  blood,\n  sex,\n  levelActivity,\n  email,\n}) => {\n  const dispatch = useDispatch();\n\n  const bloodOptions = [\n    { id: '1', value: 1, label: '1' },\n    { id: '2', value: 2, label: '2' },\n    { id: '3', value: 3, label: '3' },\n    { id: '4', value: 4, label: '4' },\n  ];\n\n  const sexOptions = [\n    { id: 'Male', value: 'male', label: 'Male' },\n    { id: 'Female', value: 'female', label: 'Female' },\n  ];\n\n  const levelOptions = [\n    {\n      id: 'level-1',\n      value: 1,\n      label: 'Sedentary lifestyle (little or no physical activity)',\n    },\n    {\n      id: 'level-2',\n      value: 2,\n      label: 'Light activity (light exercises/sports 1-3 days per week)',\n    },\n    {\n      id: 'level-3',\n      value: 3,\n      label: 'Moderately active (moderate exercises/sports 3-5 days per week)',\n    },\n    {\n      id: 'level-4',\n      value: 4,\n      label: 'Very active (intense exercises/sports 6-7 days per week)',\n    },\n    {\n      id: 'level-5',\n      value: 5,\n      label:\n        'Extremely active (very strenuous exercises/sports and physical work)',\n    },\n  ];\n\n  const handleSubmit = values => {\n    const sendData = {\n      ...values,\n    };\n   // console.log(sendData);\n    dispatch(updateProfileParamsTh(sendData)); ////////////////////////////////\n  };\n\n  if (!name) {\n    return <div>Loading...</div>;\n  }\n  const formattedDate = parseISO(birthday);\n\n  const initialValues = {\n    name: name,\n    height: height,\n    currentWeight: currentWeight,\n    desiredWeight: desiredWeight,\n    birthday: formattedDate,\n    blood: blood || 1,\n    sex: sex || 'male',\n    levelActivity: levelActivity || '1',\n  };\n\n  const validationSchema = Yup.object({\n    name: Yup.string().required('Name is required'),\n    height: Yup.number()\n      .positive('Height must be positive')\n      .required('Height is required'),\n    currentWeight: Yup.number()\n      .positive('Weight must be positive')\n      .required('Current weight is required'),\n    desiredWeight: Yup.number()\n      .positive('Weight must be positive')\n      .required('Desired weight is required'),\n    birthday: Yup.date().required('Birthday is required'),\n    blood: Yup.number(),\n  });\n\n  return (\n    <Formik\n      initialValues={initialValues}\n      validationSchema={validationSchema}\n      onSubmit={handleSubmit}\n    >\n      {formik => (\n        <Form>\n          <div className={css.formContainer}>\n            <div>\n              <p className={css.sectionTitle}>Basic info</p>\n              <input\n                name=\"name\"\n                type=\"text\"\n                className={css.input}\n                defaultValue={name}\n                readOnly\n                disabled\n              />\n            </div>\n            <div>\n              <input\n                type=\"text\"\n                name=\"email\"\n                defaultValue={email}\n                className={css.input}\n                readOnly\n                disabled\n              />\n            </div>\n          </div>\n\n          <div className={css.wrapperInputField}>\n            <div className={css.wrapper}>\n              <div className={css.wrappInput}>\n                <Field\n                  type=\"number\"\n                  name=\"height\"\n                  id=\"height\"\n                  placeholder=\"\"\n                  className={css.inputField}\n                />\n                <label htmlFor=\"height\">Height</label>\n              </div>\n            </div>\n            <div className={css.wrappInput}>\n              <Field\n                type=\"number\"\n                name=\"currentWeight\"\n                id=\"currentWeight\"\n                placeholder=\"\"\n                className={css.inputField}\n              />\n              <label htmlFor=\"currentWeight\">Current Weight</label>\n            </div>\n          </div>\n\n          <div className={css.wrapperInputField}>\n            <div className={css.wrappInput}>\n              <Field\n                type=\"number\"\n                name=\"desiredWeight\"\n                id=\"desiredWeight\"\n                placeholder=\"\"\n                className={css.inputField}\n              />\n              <label htmlFor=\"desiredWeight\">Desired Weight</label>\n            </div>\n            <div className={css.wrappInput}>\n              <input\n                type=\"date\"\n                name=\"birthday\"\n                id=\"birthday\"\n                value={formik.values.birthday}\n                onChange={formik.handleChange}\n                className={css.inputField}\n              />\n              <label htmlFor=\"birthday\">Date of birthday</label>\n            </div>\n          </div>\n\n          <div className={css.wrapperRadio}>\n            <div style={{ display: 'flex', marginRight: '20px' }}>\n              <div style={{ display: 'flex', marginRight: '20px' }}>\n                {bloodOptions.map(option => (\n                  <RadioButton\n                    key={option.id}\n                    id={option.id}\n                    name=\"blood\"\n                    value={option.value}\n                    checked={formik.values.blood === option.value}\n                    label={option.label}\n                    onChange={() => formik.setFieldValue('blood', option.value)}\n                  />\n                ))}\n              </div>\n\n              <div style={{ display: 'flex' }}>\n                {sexOptions.map(option => (\n                  <RadioButton\n                    key={option.id}\n                    id={option.id}\n                    name=\"sex\"\n                    value={option.value}\n                    checked={formik.values.sex === option.value}\n                    label={option.label}\n                    onChange={() => formik.setFieldValue('sex', option.value)}\n                  />\n                ))}\n              </div>\n            </div>\n\n            <div>\n              {levelOptions.map(option => (\n                <RadioButton\n                  className={css.wrapperLevel}\n                  key={option.id}\n                  id={option.id}\n                  name=\"levelActivity\"\n                  value={option.value}\n                  checked={formik.values.levelActivity === option.value}\n                  label={option.label}\n                  onChange={() =>\n                    formik.setFieldValue('levelActivity', option.value)\n                  }\n                />\n              ))}\n            </div>\n          </div>\n\n          <button type=\"submit\" className={css.button}>\n            Save\n          </button>\n        </Form>\n      )}\n    </Formik>\n  );\n};\n","import TitlePage from 'components/TitlePage/TitlePage';\nimport { Daily } from 'components/daily/Daily';\nimport { UserProfile } from 'components/userCard/UserCard';\nimport { UserForm } from 'components/userForm/UserForm';\nimport { useEffect } from 'react';\nimport { getCurrentUserDataTh } from '../redux/UserPageCntrls/UserPageOperations';\nimport { useDispatch, useSelector } from 'react-redux';\n\nexport default function Profile() {\n  const dispatch = useDispatch();\n  const state = useSelector(state => state.profile);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        await dispatch(getCurrentUserDataTh());\n    //    console.log(currentUserData, 'currentUserData');\n        // Обновляем состояние после получения данных\n        // handleProfileUpdate(currentUserData);\n      } catch (error) {\n        console.error('Ошибка при получении данных пользователя:', error);\n        // Добавьте обработку ошибки, например, отображение сообщения об ошибке или перенаправление на страницу входа\n      }\n    };\n\n    fetchData();\n  }, [dispatch]);\n\n  // Показывать заглушку или другой контент, если данных нет\n  if (!state) {\n    return <div>Loading...</div>;\n  }\n\n  return (\n    <div>\n      <p>profile</p>\n      <TitlePage children={'Profile Settings'} />\n      <UserProfile name={state?.name} avatar={state?.avatarURL} />\n      <div style={{ display: 'flex', margin: 'auto', gap: '20px' }}>\n        <Daily\n          color=\"#E6533C\"\n          iconId={'icon-fork-filled'}\n          text={'Daily calorie intake'}\n          value={state?.bmr}\n        />\n        <Daily\n          color=\"#E6533C\"\n          iconId={'icon-fork-filled'}\n          text={'Daily physical activity'}\n          value={'110 min'}\n        />\n      </div>\n      <UserForm\n        name={state.name}\n        height={state.height}\n        currentWeight={state.currentWeight}\n        desiredWeight={state.desiredWeight}\n        birthday={state.birthday}\n        blood={state.blood}\n        sex={state.sex}\n        levelActivity={state.levelActivity}\n        email={state.email}\n      />\n    </div>\n  );\n}\n","/**\n * @module constants\n * @summary Useful constants\n * @description\n * Collection of useful date constants.\n *\n * The constants could be imported from `date-fns/constants`:\n *\n * ```ts\n * import { maxTime, minTime } from \"./constants/date-fns/constants\";\n *\n * function isAllowedTime(time) {\n *   return time <= maxTime && time >= minTime;\n * }\n * ```\n */\n\n/**\n * @constant\n * @name daysInWeek\n * @summary Days in 1 week.\n */\nexport const daysInWeek = 7;\n\n/**\n * @constant\n * @name daysInYear\n * @summary Days in 1 year.\n *\n * @description\n * How many days in a year.\n *\n * One years equals 365.2425 days according to the formula:\n *\n * > Leap year occures every 4 years, except for years that are divisable by 100 and not divisable by 400.\n * > 1 mean year = (365+1/4-1/100+1/400) days = 365.2425 days\n */\nexport const daysInYear = 365.2425;\n\n/**\n * @constant\n * @name maxTime\n * @summary Maximum allowed time.\n *\n * @example\n * import { maxTime } from \"./constants/date-fns/constants\";\n *\n * const isValid = 8640000000000001 <= maxTime;\n * //=> false\n *\n * new Date(8640000000000001);\n * //=> Invalid Date\n */\nexport const maxTime = Math.pow(10, 8) * 24 * 60 * 60 * 1000;\n\n/**\n * @constant\n * @name minTime\n * @summary Minimum allowed time.\n *\n * @example\n * import { minTime } from \"./constants/date-fns/constants\";\n *\n * const isValid = -8640000000000001 >= minTime;\n * //=> false\n *\n * new Date(-8640000000000001)\n * //=> Invalid Date\n */\nexport const minTime = -maxTime;\n\n/**\n * @constant\n * @name millisecondsInWeek\n * @summary Milliseconds in 1 week.\n */\nexport const millisecondsInWeek = 604800000;\n\n/**\n * @constant\n * @name millisecondsInDay\n * @summary Milliseconds in 1 day.\n */\nexport const millisecondsInDay = 86400000;\n\n/**\n * @constant\n * @name millisecondsInMinute\n * @summary Milliseconds in 1 minute\n */\nexport const millisecondsInMinute = 60000;\n\n/**\n * @constant\n * @name millisecondsInHour\n * @summary Milliseconds in 1 hour\n */\nexport const millisecondsInHour = 3600000;\n\n/**\n * @constant\n * @name millisecondsInSecond\n * @summary Milliseconds in 1 second\n */\nexport const millisecondsInSecond = 1000;\n\n/**\n * @constant\n * @name minutesInYear\n * @summary Minutes in 1 year.\n */\nexport const minutesInYear = 525600;\n\n/**\n * @constant\n * @name minutesInMonth\n * @summary Minutes in 1 month.\n */\nexport const minutesInMonth = 43200;\n\n/**\n * @constant\n * @name minutesInDay\n * @summary Minutes in 1 day.\n */\nexport const minutesInDay = 1440;\n\n/**\n * @constant\n * @name minutesInHour\n * @summary Minutes in 1 hour.\n */\nexport const minutesInHour = 60;\n\n/**\n * @constant\n * @name monthsInQuarter\n * @summary Months in 1 quarter.\n */\nexport const monthsInQuarter = 3;\n\n/**\n * @constant\n * @name monthsInYear\n * @summary Months in 1 year.\n */\nexport const monthsInYear = 12;\n\n/**\n * @constant\n * @name quartersInYear\n * @summary Quarters in 1 year\n */\nexport const quartersInYear = 4;\n\n/**\n * @constant\n * @name secondsInHour\n * @summary Seconds in 1 hour.\n */\nexport const secondsInHour = 3600;\n\n/**\n * @constant\n * @name secondsInMinute\n * @summary Seconds in 1 minute.\n */\nexport const secondsInMinute = 60;\n\n/**\n * @constant\n * @name secondsInDay\n * @summary Seconds in 1 day.\n */\nexport const secondsInDay = secondsInHour * 24;\n\n/**\n * @constant\n * @name secondsInWeek\n * @summary Seconds in 1 week.\n */\nexport const secondsInWeek = secondsInDay * 7;\n\n/**\n * @constant\n * @name secondsInYear\n * @summary Seconds in 1 year.\n */\nexport const secondsInYear = secondsInDay * daysInYear;\n\n/**\n * @constant\n * @name secondsInMonth\n * @summary Seconds in 1 month\n */\nexport const secondsInMonth = secondsInYear / 12;\n\n/**\n * @constant\n * @name secondsInQuarter\n * @summary Seconds in 1 quarter.\n */\nexport const secondsInQuarter = secondsInMonth * 3;\n"],"names":["_ref","children","_jsx","className","css","Daily","color","iconId","text","value","_jsxs","style","backgroundColor","href","concat","sprite","selectUsersAvatar","state","profile","avatarURL","UserProfile","name","avatar","dispatch","useDispatch","userAvatar","useSelector","_useState","useState","_useState2","_slicedToArray","setAvatarURL","useEffect","avatarUser","src","width","alt","avatarStandart","fill","height","id","type","display","onChange","event","file","target","files","blob","Blob","objectURL","URL","createObjectURL","updateProfileAvatarTh","htmlFor","viewBox","xlinkHref","parseISO","argument","options","_options$additionalDi","date","additionalDigits","dateStrings","dateString","timeString","array","split","patterns","dateTimeDelimiter","length","test","timeZoneDelimiter","substr","token","timezone","exec","time","replace","splitDateString","parseYearResult","regex","RegExp","captures","match","year","NaN","restDateString","parseInt","century","slice","parseYear","Date","dateRegex","isWeekDate","dayOfYear","parseDateUnit","month","day","week","dayOfWeek","_year","validateWeekDate","isoWeekYear","setUTCFullYear","fourthOfJanuaryDay","getUTCDay","diff","setUTCDate","getUTCDate","dayOfISOWeekYear","daysInMonths","isLeapYearIndex","validateDate","validateDayOfYearDate","Math","max","parseDate","isNaN","getTime","offset","timestamp","timeRegex","hours","parseTimeUnit","minutes","seconds","validateTime","millisecondsInHour","millisecondsInMinute","parseTime","dirtyDate","result","setFullYear","getUTCFullYear","getUTCMonth","setHours","getUTCHours","getUTCMinutes","getUTCSeconds","getUTCMilliseconds","timezoneString","timezoneRegex","sign","_hours","validateTimezone","parseTimezone","parseFloat","RadioButton","checked","label","UserForm","currentWeight","desiredWeight","birthday","blood","sex","levelActivity","email","bloodOptions","sexOptions","levelOptions","formattedDate","initialValues","validationSchema","Yup","required","positive","Formik","onSubmit","values","sendData","_objectSpread","updateProfileParamsTh","formik","Form","defaultValue","readOnly","disabled","Field","placeholder","handleChange","marginRight","map","option","setFieldValue","Profile","fetchData","_asyncToGenerator","_regeneratorRuntime","_callee","_context","prev","next","getCurrentUserDataTh","t0","console","error","stop","apply","arguments","TitlePage","margin","gap","bmr","pow","millisecondsInWeek","millisecondsInDay"],"sourceRoot":""}