{"version":3,"file":"static/js/167.88cb2ba9.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/TitlePage/title-page.module.css?6643","components/TitlePage/TitlePage.jsx","function/formatData.js","webpack://react-homework-template/./src/modal/basicModalWindow/BasicModalWindow.module.css?9441","modal/basicModalWindow/BasicModalWindow.jsx","webpack://react-homework-template/./src/pages/ProductsPage/products.module.css?11cc","webpack://react-homework-template/./src/components/productsFilters/ProductsFilters.module.css?7ae1","redux/products/productsSelectors.js","../node_modules/use-debounce/src/useDebouncedCallback.ts","components/productsFilters/ProductsFilters.jsx","webpack://react-homework-template/./src/components/productsList/ProductsList.module.css?b938","webpack://react-homework-template/./src/components/productsList/productsItem/ProductsItem.module.css?ece2","../node_modules/src/observe.ts","../node_modules/src/InView.tsx","components/productsList/productsItem/ProductsItem.jsx","../node_modules/src/useInView.tsx","webpack://react-homework-template/./src/components/productsList/productsError/ProduxError.module.css?5a53","components/productsList/productsError/ProductsError.jsx","components/productsList/ProductsList.jsx","webpack://react-homework-template/./src/components/addProductForm/AddProductForm.module.css?4a8a","components/addProductForm/AddProductForm.jsx","webpack://react-homework-template/./src/components/addProductSuccess/AddProductSuccess.module.css?6e5b","components/addProductSuccess/AddProductSuccess.jsx","pages/ProductsPage/ProductsPage.jsx","redux/diary/diarySelectors.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"titlePage\":\"title-page_titlePage__ZBar5\"};","import css from \"./title-page.module.css\";\n const TitlePage=({children})=>{\nreturn(\n    <h2 className={css.titlePage}>{children}</h2>\n)\n}\nexport default TitlePage;","const formatDate = (date) => {\n  const day = String(date.getDate()).padStart(2, '0');\n  const month = String(date.getMonth() + 1).padStart(2, '0');\n  const year = date.getFullYear();\n  return `${year}-${month}-${day}`;\n};\n\n\nexport default formatDate;\n  \n\n","// extracted by mini-css-extract-plugin\nexport default {\"backdrop\":\"BasicModalWindow_backdrop__S-RX6\",\"modal\":\"BasicModalWindow_modal__bxnFf\",\"modalCloseBtn\":\"BasicModalWindow_modalCloseBtn__PzRfu\",\"svgclose\":\"BasicModalWindow_svgclose__hfpF1\"};","import svg from '../../img/sprite/symbol-defs.svg';\nimport css from './BasicModalWindow.module.css';\nexport const BasicModalWindow = ({ isOpen, onClose, children }) => {\n  if (!isOpen) return null;\n  const handleEscapeKey = event => {\n    if (event.code === 'Escape') {\n      console.log('Escape');\n      onClose();\n      return document.removeEventListener('keydown', handleEscapeKey);\n    }\n  };\n  isOpen && document.addEventListener('keydown', handleEscapeKey);\n  const handleClose = e => {\n    if (\n      e.target.dataset.type === 'backdrop' ||\n      e.target.dataset.type === 'close-modal'\n    ) {\n      onClose();\n    }\n  };\n  return (\n    <div className={css.backdrop} onClick={handleClose} data-type=\"backdrop\">\n      <div className={css.modal}>\n        <button\n          className={css.modalCloseBtn}\n          type=\"button\"\n          onClick={handleClose}\n          data-type=\"close-modal\"\n        >\n          <svg className={css.svgclose}>\n            <use href={`${svg}#icon-close-modal`}></use>\n          </svg>\n        </button>\n        {children}\n      </div>\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"productsPage\":\"products_productsPage__NqW3z\",\"wrapper\":\"products_wrapper__dIgK4\"};","// extracted by mini-css-extract-plugin\nexport default {\"filters\":\"ProductsFilters_filters__z4dz4\",\"text\":\"ProductsFilters_text__ZAjtR\",\"search\":\"ProductsFilters_search__woo7r\",\"input\":\"ProductsFilters_input__fjAQm\",\"svgSearchClose\":\"ProductsFilters_svgSearchClose__1z2l4\",\"svgSearch\":\"ProductsFilters_svgSearch__1owZG\",\"arrowCat\":\"ProductsFilters_arrowCat__4HYoZ\",\"arrowRec\":\"ProductsFilters_arrowRec__C3G7R\",\"categories\":\"ProductsFilters_categories__S10h+\",\"filterListWrapper\":\"ProductsFilters_filterListWrapper__KZ0fq\",\"filterList\":\"ProductsFilters_filterList__WzNBS\",\"recommended\":\"ProductsFilters_recommended__ckk4J\",\"recommendedList\":\"ProductsFilters_recommendedList__sflg6\",\"filterLabel\":\"ProductsFilters_filterLabel__hiLwC\",\"filterItem\":\"ProductsFilters_filterItem__kbeJy\"};","export const selectProducts = state => state.products.products.items;\n// export const selectIsLoading = state => state.products.isLoading;\nexport const selectError = state => state.products.products.error;\nexport const selectFilter = state => state.products.filter;\nexport const selectSuccess = state => state.products.products.success;\n","import { useRef, useEffect, useMemo } from 'react';\n\nexport interface CallOptions {\n  /**\n   * Controls if the function should be invoked on the leading edge of the timeout.\n   */\n  leading?: boolean;\n  /**\n   * Controls if the function should be invoked on the trailing edge of the timeout.\n   */\n  trailing?: boolean;\n}\n\nexport interface Options extends CallOptions {\n  /**\n   * The maximum time the given function is allowed to be delayed before it's invoked.\n   */\n  maxWait?: number;\n  /**\n   * If the setting is set to true, all debouncing and timers will happen on the server side as well\n   */\n  debounceOnServer?: boolean;\n}\n\nexport interface ControlFunctions {\n  /**\n   * Cancel pending function invocations\n   */\n  cancel: () => void;\n  /**\n   * Immediately invoke pending function invocations\n   */\n  flush: () => void;\n  /**\n   * Returns `true` if there are any pending function invocations\n   */\n  isPending: () => boolean;\n}\n\n/**\n * Subsequent calls to the debounced function `debounced.callback` return the result of the last func invocation.\n * Note, that if there are no previous invocations it's mean you will get undefined. You should check it in your code properly.\n */\nexport interface DebouncedState<T extends (...args: any) => ReturnType<T>>\n  extends ControlFunctions {\n  (...args: Parameters<T>): ReturnType<T> | undefined;\n}\n\n/**\n * Creates a debounced function that delays invoking `func` until after `wait`\n * milliseconds have elapsed since the last time the debounced function was\n * invoked, or until the next browser frame is drawn.\n *\n * The debounced function comes with a `cancel` method to cancel delayed `func`\n * invocations and a `flush` method to immediately invoke them.\n *\n * Provide `options` to indicate whether `func` should be invoked on the leading\n * and/or trailing edge of the `wait` timeout. The `func` is invoked with the\n * last arguments provided to the debounced function.\n *\n * Subsequent calls to the debounced function return the result of the last\n * `func` invocation.\n *\n * **Note:** If `leading` and `trailing` options are `true`, `func` is\n * invoked on the trailing edge of the timeout only if the debounced function\n * is invoked more than once during the `wait` timeout.\n *\n * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n * until the next tick, similar to `setTimeout` with a timeout of `0`.\n *\n * If `wait` is omitted in an environment with `requestAnimationFrame`, `func`\n * invocation will be deferred until the next frame is drawn (typically about\n * 16ms).\n *\n * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n * for details over the differences between `debounce` and `throttle`.\n *\n * @category Function\n * @param {Function} func The function to debounce.\n * @param {number} [wait=0]\n *  The number of milliseconds to delay; if omitted, `requestAnimationFrame` is\n *  used (if available, otherwise it will be setTimeout(...,0)).\n * @param {Object} [options={}] The options object.\n *  Controls if `func` should be invoked on the leading edge of the timeout.\n * @param {boolean} [options.leading=false]\n *  The maximum time `func` is allowed to be delayed before it's invoked.\n * @param {number} [options.maxWait]\n *  Controls if `func` should be invoked the trailing edge of the timeout.\n * @param {boolean} [options.trailing=true]\n * @returns {Function} Returns the new debounced function.\n * @example\n *\n * // Avoid costly calculations while the window size is in flux.\n * const resizeHandler = useDebouncedCallback(calculateLayout, 150);\n * window.addEventListener('resize', resizeHandler)\n *\n * // Invoke `sendMail` when clicked, debouncing subsequent calls.\n * const clickHandler = useDebouncedCallback(sendMail, 300, {\n *   leading: true,\n *   trailing: false,\n * })\n * <button onClick={clickHandler}>click me</button>\n *\n * // Ensure `batchLog` is invoked once after 1 second of debounced calls.\n * const debounced = useDebouncedCallback(batchLog, 250, { 'maxWait': 1000 })\n * const source = new EventSource('/stream')\n * source.addEventListener('message', debounced)\n *\n * // Cancel the trailing debounced invocation.\n * window.addEventListener('popstate', debounced.cancel)\n *\n * // Check for pending invocations.\n * const status = debounced.pending() ? \"Pending...\" : \"Ready\"\n */\nexport default function useDebouncedCallback<\n  T extends (...args: any) => ReturnType<T>,\n>(func: T, wait?: number, options?: Options): DebouncedState<T> {\n  const lastCallTime = useRef(null);\n  const lastInvokeTime = useRef(0);\n  const timerId = useRef(null);\n  const lastArgs = useRef<unknown[]>([]);\n  const lastThis = useRef<unknown>();\n  const result = useRef<ReturnType<T>>();\n  const funcRef = useRef(func);\n  const mounted = useRef(true);\n  // Always keep the latest version of debounce callback, with no wait time.\n  funcRef.current = func;\n\n  const isClientSize = typeof window !== 'undefined';\n  // Bypass `requestAnimationFrame` by explicitly setting `wait=0`.\n  const useRAF = !wait && wait !== 0 && isClientSize;\n\n  if (typeof func !== 'function') {\n    throw new TypeError('Expected a function');\n  }\n\n  wait = +wait || 0;\n  options = options || {};\n\n  const leading = !!options.leading;\n  const trailing = 'trailing' in options ? !!options.trailing : true; // `true` by default\n  const maxing = 'maxWait' in options;\n  const debounceOnServer =\n    'debounceOnServer' in options ? !!options.debounceOnServer : false; // `false` by default\n  const maxWait = maxing ? Math.max(+options.maxWait || 0, wait) : null;\n\n  useEffect(() => {\n    mounted.current = true;\n    return () => {\n      mounted.current = false;\n    };\n  }, []);\n\n  // You may have a question, why we have so many code under the useMemo definition.\n  //\n  // This was made as we want to escape from useCallback hell and\n  // not to initialize a number of functions each time useDebouncedCallback is called.\n  //\n  // It means that we have less garbage for our GC calls which improves performance.\n  // Also, it makes this library smaller.\n  //\n  // And the last reason, that the code without lots of useCallback with deps is easier to read.\n  // You have only one place for that.\n  const debounced = useMemo(() => {\n    const invokeFunc = (time: number) => {\n      const args = lastArgs.current;\n      const thisArg = lastThis.current;\n\n      lastArgs.current = lastThis.current = null;\n      lastInvokeTime.current = time;\n      return (result.current = funcRef.current.apply(thisArg, args));\n    };\n\n    const startTimer = (pendingFunc: () => void, wait: number) => {\n      if (useRAF) cancelAnimationFrame(timerId.current);\n      timerId.current = useRAF\n        ? requestAnimationFrame(pendingFunc)\n        : setTimeout(pendingFunc, wait);\n    };\n\n    const shouldInvoke = (time: number) => {\n      if (!mounted.current) return false;\n\n      const timeSinceLastCall = time - lastCallTime.current;\n      const timeSinceLastInvoke = time - lastInvokeTime.current;\n\n      // Either this is the first call, activity has stopped and we're at the\n      // trailing edge, the system time has gone backwards and we're treating\n      // it as the trailing edge, or we've hit the `maxWait` limit.\n      return (\n        !lastCallTime.current ||\n        timeSinceLastCall >= wait ||\n        timeSinceLastCall < 0 ||\n        (maxing && timeSinceLastInvoke >= maxWait)\n      );\n    };\n\n    const trailingEdge = (time: number) => {\n      timerId.current = null;\n\n      // Only invoke if we have `lastArgs` which means `func` has been\n      // debounced at least once.\n      if (trailing && lastArgs.current) {\n        return invokeFunc(time);\n      }\n      lastArgs.current = lastThis.current = null;\n      return result.current;\n    };\n\n    const timerExpired = () => {\n      const time = Date.now();\n      if (shouldInvoke(time)) {\n        return trailingEdge(time);\n      }\n      // https://github.com/xnimorz/use-debounce/issues/97\n      if (!mounted.current) {\n        return;\n      }\n      // Remaining wait calculation\n      const timeSinceLastCall = time - lastCallTime.current;\n      const timeSinceLastInvoke = time - lastInvokeTime.current;\n      const timeWaiting = wait - timeSinceLastCall;\n      const remainingWait = maxing\n        ? Math.min(timeWaiting, maxWait - timeSinceLastInvoke)\n        : timeWaiting;\n\n      // Restart the timer\n      startTimer(timerExpired, remainingWait);\n    };\n\n    const func: DebouncedState<T> = (...args: Parameters<T>): ReturnType<T> => {\n      if (!isClientSize && !debounceOnServer) {\n        return;\n      }\n      const time = Date.now();\n      const isInvoking = shouldInvoke(time);\n\n      lastArgs.current = args;\n      lastThis.current = this;\n      lastCallTime.current = time;\n\n      if (isInvoking) {\n        if (!timerId.current && mounted.current) {\n          // Reset any `maxWait` timer.\n          lastInvokeTime.current = lastCallTime.current;\n          // Start the timer for the trailing edge.\n          startTimer(timerExpired, wait);\n          // Invoke the leading edge.\n          return leading ? invokeFunc(lastCallTime.current) : result.current;\n        }\n        if (maxing) {\n          // Handle invocations in a tight loop.\n          startTimer(timerExpired, wait);\n          return invokeFunc(lastCallTime.current);\n        }\n      }\n      if (!timerId.current) {\n        startTimer(timerExpired, wait);\n      }\n      return result.current;\n    };\n\n    func.cancel = () => {\n      if (timerId.current) {\n        useRAF\n          ? cancelAnimationFrame(timerId.current)\n          : clearTimeout(timerId.current);\n      }\n      lastInvokeTime.current = 0;\n      lastArgs.current =\n        lastCallTime.current =\n        lastThis.current =\n        timerId.current =\n          null;\n    };\n\n    func.isPending = () => {\n      return !!timerId.current;\n    };\n\n    func.flush = () => {\n      return !timerId.current ? result.current : trailingEdge(Date.now());\n    };\n\n    return func;\n  }, [\n    leading,\n    maxing,\n    wait,\n    maxWait,\n    trailing,\n    useRAF,\n    isClientSize,\n    debounceOnServer,\n  ]);\n\n  return debounced;\n}\n","import css from './ProductsFilters.module.css';\nimport svg from '../../img/sprite/symbol-defs.svg';\nimport { useEffect, useState } from 'react';\nimport {\n  fetchCategories,\n  fetchProducts,\n} from '../../redux/products/productsOperations';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectFilter } from '../../redux/products/productsSelectors';\nimport { interFilter } from '../../redux/products/prFiltersSlice';\nimport { useDebouncedCallback } from 'use-debounce';\n\nconst initOpen = { category: false, allowed: false };\n\nexport const ProductsFilters = () => {\n  const dispatch = useDispatch();\n  const [categories, setCategories] = useState(null);\n  const [query, setQuery] = useState('');\n  const [isOpen, setOpen] = useState(initOpen);\n  const filters = useSelector(selectFilter);\n\n  const handleOpen = e => {\n    const type = e.currentTarget.dataset.type;\n    setOpen(prev => ({ ...initOpen, [type]: !prev[type] }));\n  };\n  const handlePick = e => {\n    if (e.target.nodeName !== 'LI') return;\n    const type = e.currentTarget.dataset.type;\n    let value;\n    if (e.target.textContent === 'Recommended') {\n      value = 'yes';\n    } else if (e.target.textContent === 'Not recommended') {\n      value = 'no';\n    } else {\n      value = e.target.textContent;\n    }\n\n    const addFilter = { ...filters, [type]: value };\n    dispatch(interFilter(addFilter));\n    dispatch(fetchProducts(addFilter));\n    setOpen(initOpen);\n  };\n  const handleQuery = e => {\n    setQuery(e.target.value);\n    debounced(query);\n  };\n  const resetQuery = () => {\n    setQuery('');\n    const addInput = { ...filters, searchQuery: '' };\n    dispatch(interFilter(addInput));\n    dispatch(fetchProducts(addInput));\n  };\n  const debounced = useDebouncedCallback(query => {\n    const addInput = { ...filters, searchQuery: query };\n    dispatch(interFilter(addInput));\n    dispatch(fetchProducts(addInput));\n  }, 300);\n\n  useEffect(() => {\n    const getCategories = async () => {\n      const result = await fetchCategories();\n      setCategories(result);\n    };\n    getCategories();\n  }, []);\n\n  return (\n    <div className={css.filters}>\n      <p className={css.text}>Filters</p>\n      <div className={css.search}>\n        <svg className={css.svgSearch}>\n          <use href={`${svg}#icon-search`}></use>\n        </svg>\n        <input\n          className={css.input}\n          type=\"text\"\n          placeholder=\"Search\"\n          id=\"productsSearch\"\n          onChange={handleQuery}\n          value={query}\n        />\n        <svg className={css.svgSearchClose} onClick={resetQuery}>\n          <use href={`${svg}#icon-close-in-search`}></use>\n        </svg>\n      </div>\n      <div className={css.categories}>\n        <p\n          className={css.filterLabel}\n          onClick={handleOpen}\n          data-type=\"category\"\n        >\n          {filters.category === '' ? 'Categories' : filters.category}\n        </p>\n        <svg\n          className={`${css.svgSearch} ${isOpen.category ? css.arrowCat : ''}`}\n        >\n          <use href={`${svg}#icon-arrow-down`}></use>\n        </svg>\n        {isOpen.category && (\n          <div className={css.filterListWrapper}>\n            <ul\n              className={css.filterList}\n              onClick={handlePick}\n              data-type=\"category\"\n            >\n              {categories.map((item, index) => {\n                return (\n                  <li className={css.filterItem} key={index}>\n                    {item}\n                  </li>\n                );\n              })}\n            </ul>\n          </div>\n        )}\n      </div>\n      <div className={css.recommended}>\n        <p className={css.filterLabel} onClick={handleOpen} data-type=\"allowed\">\n          {filters.allowed === 'All' && 'All'}\n          {filters.allowed === 'yes' && 'Recommended'}\n          {filters.allowed === 'no' && 'Not recommended'}\n        </p>\n        <svg\n          className={`${css.svgSearch} ${isOpen.allowed ? css.arrowRec : ''}`}\n        >\n          <use href={`${svg}#icon-arrow-down`}></use>\n        </svg>\n        {isOpen.allowed && (\n          <ul\n            className={css.recommendedList}\n            onClick={handlePick}\n            data-type=\"allowed\"\n          >\n            <li className={css.filterItem}>All</li>\n            <li className={css.filterItem}>Recommended</li>\n            <li className={css.filterItem}>Not recommended</li>\n          </ul>\n        )}\n      </div>\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"productsList\":\"ProductsList_productsList__3HQgi\"};","// extracted by mini-css-extract-plugin\nexport default {\"card\":\"ProductsItem_card__gjyRG\",\"upperContent\":\"ProductsItem_upperContent__l27qW\",\"dietWrapper\":\"ProductsItem_dietWrapper__Xyk2v\",\"diet\":\"ProductsItem_diet__W066o\",\"cardStatus\":\"ProductsItem_cardStatus__P-act\",\"statusCircle\":\"ProductsItem_statusCircle__hjnsp\",\"statusText\":\"ProductsItem_statusText__i1toM\",\"statusBtn\":\"ProductsItem_statusBtn__MrhqO\",\"svgBtn\":\"ProductsItem_svgBtn__KFoGl\",\"titleWrapper\":\"ProductsItem_titleWrapper__IFVpr\",\"title\":\"ProductsItem_title__1gcfl\",\"svgWrapper\":\"ProductsItem_svgWrapper__kCnB1\",\"lowerConten\":\"ProductsItem_lowerConten__M0k+d\",\"svgTitle\":\"ProductsItem_svgTitle__GGUz7\",\"cardInfo\":\"ProductsItem_cardInfo__7qxc7\",\"infoContent\":\"ProductsItem_infoContent__RQ2VM\",\"amount\":\"ProductsItem_amount__oBuGW\"};","import type { ObserverInstanceCallback } from './index';\n\nconst observerMap = new Map<\n  string,\n  {\n    id: string;\n    observer: IntersectionObserver;\n    elements: Map<Element, Array<ObserverInstanceCallback>>;\n  }\n>();\n\nconst RootIds: WeakMap<Element | Document, string> = new WeakMap();\nlet rootId = 0;\n\nlet unsupportedValue: boolean | undefined = undefined;\n\n/**\n * What should be the default behavior if the IntersectionObserver is unsupported?\n * Ideally the polyfill has been loaded, you can have the following happen:\n * - `undefined`: Throw an error\n * - `true` or `false`: Set the `inView` value to this regardless of intersection state\n * **/\nexport function defaultFallbackInView(inView: boolean | undefined) {\n  unsupportedValue = inView;\n}\n\n/**\n * Generate a unique ID for the root element\n * @param root\n */\nfunction getRootId(root: IntersectionObserverInit['root']) {\n  if (!root) return '0';\n  if (RootIds.has(root)) return RootIds.get(root);\n  rootId += 1;\n  RootIds.set(root, rootId.toString());\n  return RootIds.get(root);\n}\n\n/**\n * Convert the options to a string Id, based on the values.\n * Ensures we can reuse the same observer when observing elements with the same options.\n * @param options\n */\nexport function optionsToId(options: IntersectionObserverInit) {\n  return Object.keys(options)\n    .sort()\n    .filter(\n      (key) => options[key as keyof IntersectionObserverInit] !== undefined,\n    )\n    .map((key) => {\n      return `${key}_${\n        key === 'root'\n          ? getRootId(options.root)\n          : options[key as keyof IntersectionObserverInit]\n      }`;\n    })\n    .toString();\n}\n\nfunction createObserver(options: IntersectionObserverInit) {\n  // Create a unique ID for this observer instance, based on the root, root margin and threshold.\n  let id = optionsToId(options);\n  let instance = observerMap.get(id);\n\n  if (!instance) {\n    // Create a map of elements this observer is going to observe. Each element has a list of callbacks that should be triggered, once it comes into view.\n    const elements = new Map<Element, Array<ObserverInstanceCallback>>();\n    let thresholds: number[] | readonly number[];\n\n    const observer = new IntersectionObserver((entries) => {\n      entries.forEach((entry) => {\n        // While it would be nice if you could just look at isIntersecting to determine if the component is inside the viewport, browsers can't agree on how to use it.\n        // -Firefox ignores `threshold` when considering `isIntersecting`, so it will never be false again if `threshold` is > 0\n        const inView =\n          entry.isIntersecting &&\n          thresholds.some((threshold) => entry.intersectionRatio >= threshold);\n\n        // @ts-ignore support IntersectionObserver v2\n        if (options.trackVisibility && typeof entry.isVisible === 'undefined') {\n          // The browser doesn't support Intersection Observer v2, falling back to v1 behavior.\n          // @ts-ignore\n          entry.isVisible = inView;\n        }\n\n        elements.get(entry.target)?.forEach((callback) => {\n          callback(inView, entry);\n        });\n      });\n    }, options);\n\n    // Ensure we have a valid thresholds array. If not, use the threshold from the options\n    thresholds =\n      observer.thresholds ||\n      (Array.isArray(options.threshold)\n        ? options.threshold\n        : [options.threshold || 0]);\n\n    instance = {\n      id,\n      observer,\n      elements,\n    };\n\n    observerMap.set(id, instance);\n  }\n\n  return instance;\n}\n\n/**\n * @param element - DOM Element to observe\n * @param callback - Callback function to trigger when intersection status changes\n * @param options - Intersection Observer options\n * @param fallbackInView - Fallback inView value.\n * @return Function - Cleanup function that should be triggered to unregister the observer\n */\nexport function observe(\n  element: Element,\n  callback: ObserverInstanceCallback,\n  options: IntersectionObserverInit = {},\n  fallbackInView = unsupportedValue,\n) {\n  if (\n    typeof window.IntersectionObserver === 'undefined' &&\n    fallbackInView !== undefined\n  ) {\n    const bounds = element.getBoundingClientRect();\n    callback(fallbackInView, {\n      isIntersecting: fallbackInView,\n      target: element,\n      intersectionRatio:\n        typeof options.threshold === 'number' ? options.threshold : 0,\n      time: 0,\n      boundingClientRect: bounds,\n      intersectionRect: bounds,\n      rootBounds: bounds,\n    });\n    return () => {\n      // Nothing to cleanup\n    };\n  }\n  // An observer with the same options can be reused, so lets use this fact\n  const { id, observer, elements } = createObserver(options);\n\n  // Register the callback listener for this element\n  let callbacks = elements.get(element) || [];\n  if (!elements.has(element)) {\n    elements.set(element, callbacks);\n  }\n\n  callbacks.push(callback);\n  observer.observe(element);\n\n  return function unobserve() {\n    // Remove the callback from the callback list\n    callbacks.splice(callbacks.indexOf(callback), 1);\n\n    if (callbacks.length === 0) {\n      // No more callback exists for element, so destroy it\n      elements.delete(element);\n      observer.unobserve(element);\n    }\n\n    if (elements.size === 0) {\n      // No more elements are being observer by this instance, so destroy it\n      observer.disconnect();\n      observerMap.delete(id);\n    }\n  };\n}\n","import * as React from 'react';\nimport type { IntersectionObserverProps, PlainChildrenProps } from './index';\nimport { observe } from './observe';\n\ntype State = {\n  inView: boolean;\n  entry?: IntersectionObserverEntry;\n};\n\nfunction isPlainChildren(\n  props: IntersectionObserverProps | PlainChildrenProps,\n): props is PlainChildrenProps {\n  return typeof props.children !== 'function';\n}\n\n/**\n ## Render props\n\n To use the `<InView>` component, you pass it a function. It will be called\n whenever the state changes, with the new value of `inView`. In addition to the\n `inView` prop, children also receive a `ref` that should be set on the\n containing DOM element. This is the element that the IntersectionObserver will\n monitor.\n\n If you need it, you can also access the\n [`IntersectionObserverEntry`](https://developer.mozilla.org/en-US/docs/Web/API/IntersectionObserverEntry)\n on `entry`, giving you access to all the details about the current intersection\n state.\n\n ```jsx\n import { InView } from 'react-intersection-observer';\n\n const Component = () => (\n <InView>\n {({ inView, ref, entry }) => (\n      <div ref={ref}>\n        <h2>{`Header inside viewport ${inView}.`}</h2>\n      </div>\n    )}\n </InView>\n );\n\n export default Component;\n ```\n\n ## Plain children\n\n You can pass any element to the `<InView />`, and it will handle creating the\n wrapping DOM element. Add a handler to the `onChange` method, and control the\n state in your own component. Any extra props you add to `<InView>` will be\n passed to the HTML element, allowing you set the `className`, `style`, etc.\n\n ```jsx\n import { InView } from 'react-intersection-observer';\n\n const Component = () => (\n <InView as=\"div\" onChange={(inView, entry) => console.log('Inview:', inView)}>\n <h2>Plain children are always rendered. Use onChange to monitor state.</h2>\n </InView>\n );\n\n export default Component;\n ```\n */\nexport class InView extends React.Component<\n  IntersectionObserverProps | PlainChildrenProps,\n  State\n> {\n  constructor(props: IntersectionObserverProps | PlainChildrenProps) {\n    super(props);\n    this.state = {\n      inView: !!props.initialInView,\n      entry: undefined,\n    };\n  }\n\n  componentDidMount() {\n    this.unobserve();\n    this.observeNode();\n  }\n\n  componentDidUpdate(prevProps: IntersectionObserverProps) {\n    // If a IntersectionObserver option changed, reinit the observer\n    if (\n      prevProps.rootMargin !== this.props.rootMargin ||\n      prevProps.root !== this.props.root ||\n      prevProps.threshold !== this.props.threshold ||\n      prevProps.skip !== this.props.skip ||\n      prevProps.trackVisibility !== this.props.trackVisibility ||\n      prevProps.delay !== this.props.delay\n    ) {\n      this.unobserve();\n      this.observeNode();\n    }\n  }\n\n  componentWillUnmount() {\n    this.unobserve();\n  }\n\n  node: Element | null = null;\n  _unobserveCb: (() => void) | null = null;\n\n  observeNode() {\n    if (!this.node || this.props.skip) return;\n    const {\n      threshold,\n      root,\n      rootMargin,\n      trackVisibility,\n      delay,\n      fallbackInView,\n    } = this.props;\n\n    this._unobserveCb = observe(\n      this.node,\n      this.handleChange,\n      {\n        threshold,\n        root,\n        rootMargin,\n        // @ts-ignore\n        trackVisibility,\n        // @ts-ignore\n        delay,\n      },\n      fallbackInView,\n    );\n  }\n\n  unobserve() {\n    if (this._unobserveCb) {\n      this._unobserveCb();\n      this._unobserveCb = null;\n    }\n  }\n\n  handleNode = (node?: Element | null) => {\n    if (this.node) {\n      // Clear the old observer, before we start observing a new element\n      this.unobserve();\n\n      if (!node && !this.props.triggerOnce && !this.props.skip) {\n        // Reset the state if we get a new node, and we aren't ignoring updates\n        this.setState({ inView: !!this.props.initialInView, entry: undefined });\n      }\n    }\n\n    this.node = node ? node : null;\n    this.observeNode();\n  };\n\n  handleChange = (inView: boolean, entry: IntersectionObserverEntry) => {\n    if (inView && this.props.triggerOnce) {\n      // If `triggerOnce` is true, we should stop observing the element.\n      this.unobserve();\n    }\n    if (!isPlainChildren(this.props)) {\n      // Store the current State, so we can pass it to the children in the next render update\n      // There's no reason to update the state for plain children, since it's not used in the rendering.\n      this.setState({ inView, entry });\n    }\n    if (this.props.onChange) {\n      // If the user is actively listening for onChange, always trigger it\n      this.props.onChange(inView, entry);\n    }\n  };\n\n  render() {\n    const { children } = this.props;\n    if (typeof children === 'function') {\n      const { inView, entry } = this.state;\n      return children({ inView, entry, ref: this.handleNode });\n    }\n\n    const {\n      as,\n      triggerOnce,\n      threshold,\n      root,\n      rootMargin,\n      onChange,\n      skip,\n      trackVisibility,\n      delay,\n      initialInView,\n      fallbackInView,\n      ...props\n    } = this.props as PlainChildrenProps;\n\n    return React.createElement(\n      as || 'div',\n      { ref: this.handleNode, ...props },\n      children,\n    );\n  }\n}\n","import css from './ProductsItem.module.css';\nimport svg from '../../../img/sprite/symbol-defs.svg';\nimport { useInView } from 'react-intersection-observer';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { handleSuccess } from '../../../redux/products/productsSlice';\n\nexport const ProductsListItem = ({ data, openModal }) => {\n  const dispatch = useDispatch();\n  const userBlood = useSelector(state => state.auth.user.blood);\n  const { calories, category, title, weight, groupBloodNotAllowed } = data;\n  const fixedTitle = title[0].toUpperCase() + title.slice(1).toLowerCase();\n  const { ref, inView } = useInView({\n    threshold: 0.5,\n    triggerOnce: true,\n  });\n  const newData = { ...data, allowed: groupBloodNotAllowed[userBlood] };\n  const handleOpen = () => {\n    openModal(newData);\n    dispatch(handleSuccess(false));\n  };\n  return (\n    <li className={css.card} ref={ref}>\n      {inView && (\n        <>\n          <div className={css.upperContent}>\n            <div className={css.dietWrapper}>\n              <p className={css.diet}>diet</p>\n            </div>\n            <div className={css.cardStatus}>\n              <svg className={css.statusCircle}>\n                {groupBloodNotAllowed[userBlood] ? (\n                  <use href={`${svg}#icon-circle-green`}></use>\n                ) : (\n                  <use href={`${svg}#icon-circle-red`}></use>\n                )}\n              </svg>\n              <p className={css.statusText}>\n                {/* Recommended */}\n                {groupBloodNotAllowed[userBlood]\n                  ? 'Recommended'\n                  : 'Not recommended'}\n              </p>\n              <button\n                type=\"button\"\n                className={css.statusBtn}\n                onClick={handleOpen}\n              >\n                Add\n                <svg className={css.svgBtn}>\n                  <use href={`${svg}#icon-next-arrow`}></use>\n                </svg>\n              </button>\n            </div>\n          </div>\n          <div className={css.lowerContent}>\n            <div className={css.titleWrapper}>\n              <div className={css.svgWrapper}>\n                <svg className={css.svgTitle}>\n                  <use href={`${svg}#icon-runningMan`}></use>\n                </svg>\n              </div>\n              <h3 className={css.title}>{fixedTitle}</h3>\n            </div>\n            <div className={css.cardInfo}>\n              <div className={css.infoContent}>\n                Calories: <span className={css.amount}>{calories}</span>\n              </div>\n              <div className={css.infoContent}>\n                Category: <span className={css.amount}>{category}</span>\n              </div>\n              <div className={css.infoContent}>\n                Weight: <span className={css.amount}>{weight}</span>\n              </div>\n            </div>\n          </div>\n        </>\n      )}\n    </li>\n  );\n};\n","import * as React from 'react';\nimport type { InViewHookResponse, IntersectionOptions } from './index';\nimport { observe } from './observe';\n\ntype State = {\n  inView: boolean;\n  entry?: IntersectionObserverEntry;\n};\n\n/**\n * React Hooks make it easy to monitor the `inView` state of your components. Call\n * the `useInView` hook with the (optional) [options](#options) you need. It will\n * return an array containing a `ref`, the `inView` status and the current\n * [`entry`](https://developer.mozilla.org/en-US/docs/Web/API/IntersectionObserverEntry).\n * Assign the `ref` to the DOM element you want to monitor, and the hook will\n * report the status.\n *\n * @example\n * ```jsx\n * import React from 'react';\n * import { useInView } from 'react-intersection-observer';\n *\n * const Component = () => {\n *   const { ref, inView, entry } = useInView({\n *       threshold: 0,\n *   });\n *\n *   return (\n *     <div ref={ref}>\n *       <h2>{`Header inside viewport ${inView}.`}</h2>\n *     </div>\n *   );\n * };\n * ```\n */\nexport function useInView({\n  threshold,\n  delay,\n  trackVisibility,\n  rootMargin,\n  root,\n  triggerOnce,\n  skip,\n  initialInView,\n  fallbackInView,\n  onChange,\n}: IntersectionOptions = {}): InViewHookResponse {\n  const [ref, setRef] = React.useState<Element | null>(null);\n  const callback = React.useRef<IntersectionOptions['onChange']>();\n  const [state, setState] = React.useState<State>({\n    inView: !!initialInView,\n    entry: undefined,\n  });\n\n  // Store the onChange callback in a `ref`, so we can access the latest instance\n  // inside the `useEffect`, but without triggering a rerender.\n  callback.current = onChange;\n\n  React.useEffect(\n    () => {\n      // Ensure we have node ref, and that we shouldn't skip observing\n      if (skip || !ref) return;\n\n      let unobserve: (() => void) | undefined;\n      unobserve = observe(\n        ref,\n        (inView, entry) => {\n          setState({\n            inView,\n            entry,\n          });\n          if (callback.current) callback.current(inView, entry);\n\n          if (entry.isIntersecting && triggerOnce && unobserve) {\n            // If it should only trigger once, unobserve the element after it's inView\n            unobserve();\n            unobserve = undefined;\n          }\n        },\n        {\n          root,\n          rootMargin,\n          threshold,\n          // @ts-ignore\n          trackVisibility,\n          // @ts-ignore\n          delay,\n        },\n        fallbackInView,\n      );\n\n      return () => {\n        if (unobserve) {\n          unobserve();\n        }\n      };\n    },\n    // We break the rule here, because we aren't including the actual `threshold` variable\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [\n      // If the threshold is an array, convert it to a string, so it won't change between renders.\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      Array.isArray(threshold) ? threshold.toString() : threshold,\n      ref,\n      root,\n      rootMargin,\n      triggerOnce,\n      skip,\n      trackVisibility,\n      fallbackInView,\n      delay,\n    ],\n  );\n\n  const entryTarget = state.entry?.target;\n  const previousEntryTarget = React.useRef<Element>();\n  if (\n    !ref &&\n    entryTarget &&\n    !triggerOnce &&\n    !skip &&\n    previousEntryTarget.current !== entryTarget\n  ) {\n    // If we don't have a node ref, then reset the state (unless the hook is set to only `triggerOnce` or `skip`)\n    // This ensures we correctly reflect the current state - If you aren't observing anything, then nothing is inView\n    previousEntryTarget.current = entryTarget;\n    setState({\n      inView: !!initialInView,\n      entry: undefined,\n    });\n  }\n\n  const result = [setRef, state.inView, state.entry] as InViewHookResponse;\n\n  // Support object destructuring, by adding the specific values.\n  result.ref = result[0];\n  result.inView = result[1];\n  result.entry = result[2];\n\n  return result;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"errorWrapper\":\"ProduxError_errorWrapper__pgxZp\",\"errorText\":\"ProduxError_errorText__jdsbz\",\"textAccent\":\"ProduxError_textAccent__fjY4Z\"};","import css from './ProduxError.module.css';\nexport const ProductsError = () => {\n  return (\n    <div className={css.errorWrapper}>\n      <p className={css.errorText}>\n        <span className={css.textAccent}>Sorry, no results were found</span> for\n        the product filters you selected. You may want to consider other search\n        options to find the product you want. Our range is wide and you have the\n        opportunity to find more options that suit your needs.\n      </p>\n      <p className={`${css.errorText} ${css.textAccent}`}>\n        Try changing the search parameters.\n      </p>\n    </div>\n  );\n};\n","import { useDispatch, useSelector } from 'react-redux';\nimport css from './ProductsList.module.css';\nimport { ProductsListItem } from './productsItem/ProductsItem';\nimport { useEffect } from 'react';\nimport { fetchProducts } from '../../redux/products/productsOperations';\nimport {\n  selectError,\n  selectProducts,\n} from '../../redux/products/productsSelectors';\nimport { ProductsError } from './productsError/ProductsError';\nimport { fetchAllDiary } from '../../redux/diary/diaryOperations';\nexport const ProductsList = ({ openModal }) => {\n  const dispatch = useDispatch();\n  const data = useSelector(selectProducts);\n  const error = useSelector(selectError);\n\n  useEffect(() => {\n    dispatch(fetchAllDiary('2024-01-18'));\n    dispatch(fetchProducts());\n  }, [dispatch]);\n  return (\n    <>\n      {error ? (\n        <ProductsError />\n      ) : (\n        <ul className={css.productsList}>\n          {data &&\n            data.map(card => {\n              return (\n                <ProductsListItem\n                  key={card._id}\n                  data={card}\n                  openModal={openModal}\n                />\n              );\n            })}\n        </ul>\n      )}\n    </>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"AddProductForm_form__fgIYO\",\"input\":\"AddProductForm_input__2UVf4\",\"inputWrapper\":\"AddProductForm_inputWrapper__oYjIF\",\"grams\":\"AddProductForm_grams__vl4F6\",\"count\":\"AddProductForm_count__3dYxF\",\"calories\":\"AddProductForm_calories__Z5sww\",\"btnWrapper\":\"AddProductForm_btnWrapper__P5TXq\",\"btnAdd\":\"AddProductForm_btnAdd__aEYNT\",\"btnCansel\":\"AddProductForm_btnCansel__JEaU9\"};","import { useState } from 'react';\nimport css from './AddProductForm.module.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addProductDiary } from '../../redux/diary/diaryOperations';\nimport { selectDiaryError } from '../../redux/diary/diarySelectors';\nimport { handleSuccess } from '../../redux/products/productsSlice';\nimport toast from 'react-hot-toast';\n\nexport const AddProductForm = ({ data, count, date }) => {\n  const [inputCals, setInputCals] = useState(0);\n  const dispatch = useDispatch();\n  const addError = useSelector(selectDiaryError);\n  const { calories, title, _id, allowed } = data;\n  const countCalories = (inputCals * calories) / 100;\n  // console.log(allowed);\n  const handleChange = e => {\n    setInputCals(e.target.value);\n  };\n  // console.log(date);\n  const addToDiary = e => {\n    e.preventDefault();\n    const add = {\n      allowed,\n      productId: _id,\n      date,\n      grams: Number(e.target.elements.amount.value),\n      calories: Math.floor(countCalories),\n    };\n    dispatch(addProductDiary({ data: add, product: data }));\n    addError\n      ? toast.error('Oops... Something went wrong! Try again!', {\n          position: 'top-right',\n        })\n      : dispatch(handleSuccess(true));\n    count(Math.floor(countCalories));\n  };\n  return (\n    <form className={css.form} onSubmit={addToDiary}>\n      <input\n        type=\"text\"\n        className={css.input}\n        value={title}\n        name=\"title\"\n        disabled\n      />\n      <div className={css.inputWrapper}>\n        <input\n          type=\"number\"\n          className={`${css.input} ${css.count}`}\n          onChange={handleChange}\n          name=\"amount\"\n          required\n        />\n        <p className={css.grams}>grams</p>\n      </div>\n      <p className={css.calories}>\n        Calories: <span className={css.count}>{Math.floor(countCalories)}</span>\n      </p>\n      <div className={css.btnWrapper}>\n        <button type=\"submit\" className={css.btnAdd}>\n          Add to diary\n        </button>\n        <button type=\"button\" className={css.btnCansel} data-type=\"close-modal\">\n          Cancel\n        </button>\n      </div>\n    </form>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"AddProductSuccess_wrapper__KlMYU\",\"image\":\"AddProductSuccess_image__quAjn\",\"title\":\"AddProductSuccess_title__zLUB2\",\"text\":\"AddProductSuccess_text__tgLBJ\",\"count\":\"AddProductSuccess_count__kdIPi\",\"btnNext\":\"AddProductSuccess_btnNext__EIX-p\",\"btnToDiary\":\"AddProductSuccess_btnToDiary__8LD2W\",\"svgBtn\":\"AddProductSuccess_svgBtn__zquNT\"};","import css from './AddProductSuccess.module.css';\nimport img from '../../img/productSuccessFruit.png';\nimport svg from '../../img/sprite/symbol-defs.svg';\nimport { useDispatch } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { fetchAllDiary } from '../../redux/diary/diaryOperations';\nimport { useEffect } from 'react';\nexport const AddProductSuccess = ({ calories }) => {\n  const dispatch = useDispatch();\n\n  // const diary = useSelector(state => state.diary);\n  // console.log(diary);\n  useEffect(() => {\n    dispatch(fetchAllDiary('2024-01-18'));\n  }, [dispatch]);\n  return (\n    <div className={css.wrapper}>\n      <img src={img} alt=\"avokado\" className={css.image} />\n      <h3 className={css.title}>Well done</h3>\n      <p className={css.text}>\n        Calories: <span className={css.count}>{calories}</span>\n      </p>\n      <button className={css.btnNext} data-type=\"close-modal\">\n        Next product\n      </button>\n      <Link to={'/diary'} className={css.btnToDiary}>\n        To the diary\n        <svg className={css.svgBtn}>\n          <use href={`${svg}#icon-next-arrow-gray`}></use>\n        </svg>\n      </Link>\n    </div>\n  );\n};\n","import css from './products.module.css';\nimport TitlePage from 'components/TitlePage/TitlePage';\nimport { ProductsFilters } from 'components/productsFilters/ProductsFilters';\nimport { ProductsList } from 'components/productsList/ProductsList';\nimport { useState } from 'react';\nimport { Container } from '../../components/Container/Container';\nimport { AddProductForm } from 'components/addProductForm/AddProductForm';\nimport { BasicModalWindow } from '../../modal/basicModalWindow/BasicModalWindow';\nimport { useSelector } from 'react-redux';\nimport { AddProductSuccess } from 'components/addProductSuccess/AddProductSuccess';\nimport { selectSuccess } from '../../redux/products/productsSelectors';\nimport { useLocation } from 'react-router-dom';\nimport formatDate from 'function/formatData';\nconst ProductsPage = () => {\n  const [open, setOpen] = useState(false);\n  const [modal, setModal] = useState(null);\n  const [calories, setCalories] = useState(0);\n  const location = useLocation();\n  const dateDiary = location.state ? location.state : formatDate(new Date());\n  const isSuccess = useSelector(selectSuccess);\n\n  const handleClose = e => {\n    setOpen(false);\n  };\n  const handleOpen = data => {\n    setOpen(true);\n    setModal(data);\n  };\n  const handleCalories = count => {\n    // console.log(count);\n    setCalories(count);\n  };\n  const date = dateDiary;\n  // console.log('finalDate', date);\n  return (\n    <div className={css.productsPage}>\n      <Container>\n        <div className={css.wrapper}>\n          <TitlePage children=\"Products\" className={css.wrapper} />\n          <ProductsFilters />\n          <ProductsList openModal={handleOpen} />\n        </div>\n      </Container>\n      <BasicModalWindow isOpen={open} onClose={handleClose}>\n        {!isSuccess ? (\n          <AddProductForm data={modal} count={handleCalories} date={date} />\n        ) : (\n          <AddProductSuccess calories={calories} />\n        )}\n      </BasicModalWindow>\n    </div>\n  );\n};\nexport default ProductsPage;\n","export const selectDiaryProducts = state => state.diary.productsInDiary;\nexport const selectDiaryExercises = state => state.diary.exercisesInDiary;\n\nexport const selectBurnedCaloriesByDate = state => state.diary.burnedCaloriesByDate;\nexport const selectConsumedCaloriesByDate = state => state.diary.consumedCaloriesByDate;\nexport const selectSportsRemaining = state => state.diary.sportsRemaining;\n\n\nexport const selectDiaryIsLoading = state => state.diary.IsLoading;\nexport const selectDiaryError = state => state.diary.error;\n\n"],"names":["_ref","children","_jsx","className","css","date","day","String","getDate","padStart","month","getMonth","year","getFullYear","concat","BasicModalWindow","isOpen","onClose","document","addEventListener","handleEscapeKey","event","code","console","log","removeEventListener","handleClose","e","target","dataset","type","onClick","_jsxs","href","svg","selectProducts","state","products","items","selectError","error","selectFilter","filter","selectSuccess","success","func","wait","options","lastCallTime","useRef","lastInvokeTime","timerId","lastArgs","lastThis","result","funcRef","mounted","current","isClientSize","window","useRAF","TypeError","leading","trailing","maxing","debounceOnServer","maxWait","Math","max","useEffect","debounced","useMemo","invokeFunc","time","args","thisArg","apply","startTimer","pendingFunc","cancelAnimationFrame","requestAnimationFrame","setTimeout","shouldInvoke","timeSinceLastCall","trailingEdge","timerExpired","Date","now","timeWaiting","remainingWait","min","isInvoking","_this","cancel","clearTimeout","isPending","flush","initOpen","category","allowed","ProductsFilters","dispatch","useDispatch","_useState","useState","_useState2","_slicedToArray","categories","setCategories","_useState3","_useState4","query","setQuery","_useState5","_useState6","setOpen","filters","useSelector","handleOpen","currentTarget","prev","_objectSpread","_defineProperty","handlePick","nodeName","value","textContent","addFilter","interFilter","fetchProducts","useDebouncedCallback","addInput","searchQuery","getCategories","_asyncToGenerator","_regeneratorRuntime","_callee","_context","next","fetchCategories","sent","stop","arguments","placeholder","id","onChange","map","item","index","observerMap","Map","RootIds","WeakMap","rootId","unsupportedValue","optionsToId","Object","keys","sort","key","root","has","set","toString","get","createObserver","instance","thresholds","elements","observer","IntersectionObserver","entries","forEach","entry","inView","isIntersecting","some","threshold","intersectionRatio","trackVisibility","isVisible","callback","Array","isArray","observe","element","fallbackInView","bounds","getBoundingClientRect","boundingClientRect","intersectionRect","rootBounds","callbacks","push","splice","indexOf","length","delete","unobserve","size","disconnect","React","ProductsListItem","data","openModal","userBlood","auth","user","blood","calories","title","weight","groupBloodNotAllowed","fixedTitle","toUpperCase","slice","toLowerCase","_useInView","delay","rootMargin","triggerOnce","skip","initialInView","React2","_React2$useState2","ref","setRef","_React2$useState4","setState","entryTarget","_a","previousEntryTarget","useInView","newData","_Fragment","handleSuccess","ProductsError","ProductsList","fetchAllDiary","card","_id","AddProductForm","count","inputCals","setInputCals","addError","selectDiaryError","countCalories","onSubmit","preventDefault","add","productId","grams","Number","amount","floor","addProductDiary","product","toast","position","name","disabled","required","AddProductSuccess","src","img","alt","Link","to","open","modal","setModal","setCalories","location","useLocation","dateDiary","formatDate","isSuccess","Container","TitlePage","selectDiaryProducts","diary","productsInDiary","selectDiaryExercises","exercisesInDiary","selectBurnedCaloriesByDate","burnedCaloriesByDate","selectConsumedCaloriesByDate","consumedCaloriesByDate","selectSportsRemaining","sportsRemaining"],"sourceRoot":""}