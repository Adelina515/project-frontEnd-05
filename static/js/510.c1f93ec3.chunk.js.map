{"version":3,"file":"static/js/510.c1f93ec3.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/TitlePage/title-page.module.css?6643","components/TitlePage/TitlePage.jsx","function/formatData.js","webpack://react-homework-template/./src/modal/basicModalWindow/BasicModalWindow.module.css?9441","modal/basicModalWindow/BasicModalWindow.jsx","webpack://react-homework-template/./src/pages/Exercises.module.css?a48d","components/exercise/ExerciseHead.js","components/exercise/ExerciseCategoriesItem.js","components/exercise/ExerciseCategoriesList.js","webpack://react-homework-template/./src/components/exercise/ExerciseList/ExerciseList.module.css?13ad","components/exercise/ExerciseList/ExerciseItem.js","components/exercise/ExerciseList/ExerciseList.js","webpack://react-homework-template/./src/components/exercise/Modal/style.module.css?7b13","components/exercise/Modal/ModalStat.js","components/exercise/Modal/ExerciseModal.js","webpack://react-homework-template/./src/components/exercise/ExerciseList/Pagination/style.module.css?e96c","components/exercise/ExerciseList/Pagination/Pagination.js","pages/Exercises.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"titlePage\":\"title-page_titlePage__ZBar5\"};","import css from \"./title-page.module.css\";\n const TitlePage=({children})=>{\nreturn(\n    <h2 className={css.titlePage}>{children}</h2>\n)\n}\nexport default TitlePage;","const formatDate = (date) => {\n  const day = String(date.getDate()).padStart(2, '0');\n  const month = String(date.getMonth() + 1).padStart(2, '0');\n  const year = date.getFullYear();\n  return `${year}-${month}-${day}`;\n};\n\n\nexport default formatDate;\n  \n\n","// extracted by mini-css-extract-plugin\nexport default {\"backdrop\":\"BasicModalWindow_backdrop__S-RX6\",\"modal\":\"BasicModalWindow_modal__bxnFf\",\"modalCloseBtn\":\"BasicModalWindow_modalCloseBtn__PzRfu\",\"svgclose\":\"BasicModalWindow_svgclose__hfpF1\"};","import svg from '../../img/sprite/symbol-defs.svg';\nimport css from './BasicModalWindow.module.css';\nexport const BasicModalWindow = ({ isOpen, onClose, children }) => {\n  if (!isOpen) return null;\n  const handleEscapeKey = event => {\n    if (event.code === 'Escape') {\n      console.log('Escape');\n      onClose();\n      return document.removeEventListener('keydown', handleEscapeKey);\n    }\n  };\n  isOpen && document.addEventListener('keydown', handleEscapeKey);\n  const handleClose = e => {\n    if (\n      e.target.dataset.type === 'backdrop' ||\n      e.target.dataset.type === 'close-modal'\n    ) {\n      onClose();\n    }\n  };\n  return (\n    <div className={css.backdrop} onClick={handleClose} data-type=\"backdrop\">\n      <div className={css.modal}>\n        <button\n          className={css.modalCloseBtn}\n          type=\"button\"\n          onClick={handleClose}\n          data-type=\"close-modal\"\n        >\n          <svg className={css.svgclose}>\n            <use href={`${svg}#icon-close-modal`}></use>\n          </svg>\n        </button>\n        {children}\n      </div>\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"exerciseCategoryContainer\":\"Exercises_exerciseCategoryContainer__cXTxL\",\"headHolder\":\"Exercises_headHolder__i+Z76\",\"activeCat\":\"Exercises_activeCat__C0nC+\",\"cat\":\"Exercises_cat__15D9M\",\"arrCont\":\"Exercises_arrCont__gAKAe\",\"arrElCont\":\"Exercises_arrElCont__YWwZx\"};","import React from 'react';\nimport TitlePage from 'components/TitlePage/TitlePage';\n\nimport css from '../../pages/Exercises.module.css';\n\nfunction ExerciseHead({ exCat, setExCat }) {\n  const handleChangeCat = e => {\n    setExCat(e.target.innerText.trim());\n  };\n  return (\n    <div>\n      <div className={css.headHolder}>\n        <TitlePage children={'Exercises'} />\n        <div className={css.exerciseCategoryContainer}>\n          <div\n            onClick={handleChangeCat}\n            className={exCat === 'Body parts' ? css.activeCat : css.cat}\n          >\n            Body parts\n          </div>\n          <div\n            onClick={handleChangeCat}\n            className={exCat === 'Muscles' ? css.activeCat : css.cat}\n          >\n            Muscles\n          </div>\n          <div\n            onClick={handleChangeCat}\n            className={exCat === 'Equipment' ? css.activeCat : css.cat}\n          >\n            Equipment\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default ExerciseHead;\n","import React from 'react';\n\nimport css from '../../pages/Exercises.module.css';\n\nfunction ExerciseCategoriesItem({ item, setSpec }) {\n  return (\n    <div\n      className={css.arrElCont}\n      onClick={e => {\n        setSpec(item);\n      }}\n    >\n      <img src={item.imgURL} alt=\"exercise_image\" />\n      <div className={css.arrElContText}>\n        <h2>{item.name.toUpperCase()[0] + item.name.substring(1)}</h2>\n        <br />\n        <p>{item.filter}</p>\n      </div>\n    </div>\n  );\n}\n\nexport default ExerciseCategoriesItem;\n","import React from 'react';\nimport { nanoid } from '@reduxjs/toolkit';\n\nimport css from '../../pages/Exercises.module.css';\nimport ExerciseCategoriesItem from './ExerciseCategoriesItem';\nfunction ExerciseCategoriesList({ data, setSpec }) {\n  try{\n    return (\n      <div className={css.arrCont}>\n        {data.result.map(v => (\n          <ExerciseCategoriesItem item={v} key={nanoid()} setSpec={setSpec}/>\n        ))}\n      </div>\n    );\n  }catch{\n    return <></>\n  }\n\n}\n\nexport default ExerciseCategoriesList;\n","// extracted by mini-css-extract-plugin\nexport default {\"exerciseListContainer\":\"ExerciseList_exerciseListContainer__FqpZ6\",\"exerciseItemContainer\":\"ExerciseList_exerciseItemContainer__UUNG7\",\"startBtn\":\"ExerciseList_startBtn__lc1HN\",\"exerciseStatsContainer\":\"ExerciseList_exerciseStatsContainer__-H-FZ\",\"woman\":\"ExerciseList_woman__8Msnv\",\"exerciseItemContaine\":\"ExerciseList_exerciseItemContaine__GUFMm\"};","import React from 'react';\n\nimport svg from 'img/sprite/symbol-defs.svg';\nimport css from './ExerciseList.module.css';\n\nfunction ExerciseItem({ exercise, setSelected }) {\n  const capitalize = str => (str ? str[0].toUpperCase() + str.slice(1) : '');\n  return (\n    <div className={css.exerciseItemContainer}>\n      <div>\n        <h3>\n          <svg className={css.svgTitle}>\n            <use href={`${svg}#icon-runningMan`}></use>\n          </svg>\n          {capitalize(exercise.name)}\n        </h3>\n        <div className={css.exerciseStatsContainer}>\n          <p>\n            Burned calories: <span>{exercise.burnedCalories}</span>\n          </p>\n          <p>\n            Body part: <span>{capitalize(exercise.bodyPart)}</span>\n          </p>\n          <p>\n            Target: <span>{capitalize(exercise.target)}</span>\n          </p>\n        </div>\n      </div>\n\n      <button className={css.startBtn} onClick={() => setSelected(exercise)}>\n        Start\n        <svg>\n          <use href={`${svg}#icon-next-arrow`}></use>\n        </svg>\n      </button>\n    </div>\n  );\n}\n\nexport default ExerciseItem;\n","import React, { useState } from 'react';\nimport { useEffect } from 'react';\nimport instance from 'instance/instance';\nimport ExerciseItem from './ExerciseItem';\nimport { nanoid } from '@reduxjs/toolkit';\n\nimport css from './ExerciseList.module.css';\n\nfunction ExerciseList({ name, filter, setSelected }) {\n  const [arr, setArr] = useState([]);\n  useEffect(() => {\n    if (filter && name) {\n      instance.get(`exercises/filter?category=${filter}&specific=${name}&page=1$perPage=8`).then(v => {\n        setArr(v.data.result);\n      });\n    }\n  }, [setArr, name, filter]);\n\n  return (\n    <div className={css.exerciseListContainer}>\n      {arr.map(v => (\n        <ExerciseItem key={nanoid()} exercise={v} setSelected={setSelected}/>\n      ))}\n      <div className={css.woman}/>\n    </div>\n  );\n}\n\nexport default ExerciseList;\n","// extracted by mini-css-extract-plugin\nexport default {\"modalContainer\":\"style_modalContainer__yQozi\",\"modalAnimation\":\"style_modalAnimation__VL0eW\",\"modalTime\":\"style_modalTime__seuca\",\"time\":\"style_time__5dkMr\",\"pauseSvg\":\"style_pauseSvg__tsFB1\",\"pauseBtn\":\"style_pauseBtn__URUfM\",\"progressBar\":\"style_progressBar__H8dZJ\",\"dotContainer\":\"style_dotContainer__BFghM\",\"dot\":\"style_dot__eKUiR\",\"exerciseChars\":\"style_exerciseChars__0hZob\",\"modalStat\":\"style_modalStat__Ochir\",\"focus\":\"style_focus__K8-BB\",\"addBtn\":\"style_addBtn__1eZzl\",\"thumb\":\"style_thumb__O-z-Q\",\"finalStats\":\"style_finalStats__NvXFl\",\"toDiary\":\"style_toDiary__BunZ2\"};","import React from 'react';\nimport css from './style.module.css';\n\n\nfunction ModalStat({ name, val }) {\n  return (\n    <div className={css.modalStat}>\n      {name}\n      <p>{(val.toUpperCase()[0]+val.slice(1))}</p>\n    </div>\n  );\n}\n\nexport default ModalStat;\n","import React, { useEffect, useState } from 'react';\nimport css from './style.module.css';\nimport svg from '../../../img/sprite/symbol-defs.svg';\nimport ModalStat from './ModalStat';\nimport { useDispatch } from 'react-redux';\nimport { addExercisesDiary } from '../../../redux/diary/diaryOperations';\nimport { BasicModalWindow } from 'modal/basicModalWindow/BasicModalWindow';\nimport { NavLink } from 'react-router-dom';\n\nfunction ExerciseModal({ ex, setEx, selectedDate }) {\n  const [seconds, setSeconds] = useState(0);\n  const [paused, setPaused] = useState(false);\n  const [open, setOpen] = useState(false);\n  const [finished, setFinished] = useState(false);\n  const dispatch = useDispatch();\n\n  const percentTimeLeft = (1 - seconds / (ex.time * 60)) * 100;\n  const caloriesBurned = ((ex.burnedCalories * percentTimeLeft) / 100).toFixed(\n    2\n  );\n  useEffect(() => {\n    if (ex) {\n      setOpen(true);\n      setSeconds(ex.time * 60);\n      setFinished(false);\n    }\n  }, [ex]);\n  const onClose = () => {\n    if (finished) {\n      setOpen(false);\n      setEx(undefined);\n    } else {\n      const data = {\n        exerciseId: ex._id,\n        duration: (seconds / 60).toFixed(2),\n        burnedCalories: caloriesBurned,\n        date: selectedDate,\n      };\n      dispatch(addExercisesDiary(data));\n      setFinished(true);\n    }\n  };\n  useEffect(() => {\n    if (!paused && !finished && seconds > 0) {\n      setTimeout(() => {\n        if (seconds === 1) {\n          setFinished(true);\n          setSeconds(0);\n        } else {\n          setSeconds(seconds - 1);\n        }\n      }, 1000);\n    }\n  }, [seconds, paused, finished]);\n\n  const convertTime = sec => {\n    const min = Math.floor(sec / 60);\n    sec = sec % 60;\n    if (sec < 10) {\n      sec = '0' + sec;\n    }\n    if (min < 10) {\n      return '0' + min + ':' + sec;\n    }\n    return min + ':' + sec;\n  };\n  if (!finished) {\n    return (\n      <BasicModalWindow isOpen={open} onClose={onClose}>\n        <div className={css.modalContainer}>\n          <div>\n            <img\n              className={css.modalAnimation}\n              alt=\"exercise tutorial\"\n              src={ex.gifUrl}\n            />\n            <div className={css.modalTime}>\n              <p>Time</p>\n              <div\n                className={css.progressBar}\n                style={{\n                  background: `radial-gradient(closest-side, #10100f 90%, transparent 90% 100%), conic-gradient(var( --decorate-color) ${percentTimeLeft}%, transparent ${percentTimeLeft}%)`,\n                }}\n              >\n                <div\n                  className={css.dotContainer}\n                  style={{\n                    transform: `rotate(${(360 * percentTimeLeft) / 100}deg)`,\n                  }}\n                >\n                  <div className={css.dot} />\n                </div>\n                <div className={css.time}>{convertTime(seconds)}</div>\n              </div>\n\n              <button\n                className={css.pauseBtn}\n                onClick={() => setPaused(!paused)}\n              >\n                {' '}\n                <svg className={css.pauseSvg}>\n                  {paused ? (\n                    <use href={`${svg}#icon-play-square`} />\n                  ) : (\n                    <use href={`${svg}#icon-pause-square`} />\n                  )}\n                </svg>\n              </button>\n            </div>\n            <div>\n              <p>\n                Burned calories:{' '}\n                <span className={css.focus}>{caloriesBurned}</span>\n              </p>\n              <div className={css.exerciseChars}>\n                <ModalStat name={'Name'} val={ex.name} />\n                <ModalStat name={'Target'} val={ex.target} />\n                <ModalStat name={'Body Part'} val={ex.bodyPart} />\n                <ModalStat name={'Equipment'} val={ex.equipment} />\n              </div>\n            </div>\n            <button\n              className={css.addBtn}\n              onClick={() => {\n                setFinished(true);\n              }}\n            >\n              Add to diary\n            </button>\n          </div>\n        </div>\n      </BasicModalWindow>\n    );\n  } else {\n    return (\n      <BasicModalWindow isOpen={open} onClose={onClose}>\n        <div className={css.modalContainer}>\n          <div className={css.thumbContainer}>\n            <img\n              className={css.thumb}\n              src=\"https://s3-alpha-sig.figma.com/img/59d5/2b65/a6a2c8aec4a3496c837c9b0a87d5c044?Expires=1707091200&Key-Pair-Id=APKAQ4GOSFWCVNEHN3O4&Signature=HWANRVCWxA5doH3IckHWRjdihxZuoDiPb8gjXjgqC1af~NIWaZ5B62XnAWJMy9EOtTNQQ1-U5K2RT2u5lrO6pX79GxkJdX3vR0PfwNb~tvIJlL4V2z4WJOojCtrZdyP8piYXvDrFAzZ~HOv9oze~1t9CQ9TkQGjxr4DmmkA4j5MI9p2Whqbch-tAaZMNc~RTRPrIMR9wGNtWu7p8tNLOjvbfPX-5hXqt-lr~AqNSd7Uo~o5I7mM0Pa7HFxI~e0yIwZuVUK5NxMWqe162kV8z31b0ZA~sraruDDCslFBhg6sdESXDNN6-9VoAI-H9UAxVCP1rxIGK75rSxwlOBG5etA__\"\n              alt=\"arm\"\n            />\n          </div>\n          <h1>Well done</h1>\n          <div className={css.finalStats}>\n            <p>\n              Your time:{' '}\n              <span className={css.focus}>\n                {(ex.time - seconds / 60).toFixed(2)} minutes\n              </span>\n            </p>\n            <p>\n              Burned calories:{' '}\n              <span className={css.focus}>{caloriesBurned}</span>\n            </p>\n          </div>\n\n          <button\n            onClick={() => {\n              setOpen(false);\n            }}\n          >\n            To next product\n          </button>\n          <br />\n          <NavLink to={'/diary'} onClick={onClose} className={css.toDiary}>\n            To the diary\n          </NavLink>\n        </div>\n      </BasicModalWindow>\n    );\n  }\n}\n\nexport default ExerciseModal;\n","// extracted by mini-css-extract-plugin\nexport default {\"paginationContainer\":\"style_paginationContainer__Orsvs\"};","import React from 'react';\nimport css from \"./style.module.css\"\nimport svg from '../../../../img/sprite/symbol-defs.svg';\nimport { nanoid } from '@reduxjs/toolkit';\n\nfunction Pagination({page, setPage, pagesTotal}) {\n    if(pagesTotal<2){\n        return null;\n    }\n    let arr = [];\n    for(let i=0; i<pagesTotal; i++){\n        arr.push(i+1===page?1:0);\n    }\n    return (\n        <div className={css.paginationContainer}>\n            {arr.map((v, i)=>(<svg key={nanoid()} onClick={()=>setPage(i+1)}>{\n                v===1 ? <use href={`${svg}#icon-radio-button-checked`}/> : <use href={`${svg}#icon-radio-button`}/>\n            }</svg>))}\n        </div>\n    );\n}\n\nexport default Pagination;","import React, { useEffect, useState } from 'react';\nimport ExerciseHead from '../components/exercise/ExerciseHead';\n\nimport instance from 'instance/instance';\nimport ExerciseCategoriesList from '../components/exercise/ExerciseCategoriesList';\nimport ExerciseList from '../components/exercise/ExerciseList/ExerciseList';\nimport ExerciseModal from 'components/exercise/Modal/ExerciseModal';\nimport { useLocation } from 'react-router-dom';\nimport Pagination from 'components/exercise/ExerciseList/Pagination/Pagination';\nimport formatDate from 'function/formatData';\n\nfunction Exercises(props) {\n\n  const isTablet = ()=>{\n    const userAgent = navigator.userAgent.toLowerCase();\n    return /(ipad|tablet|(android(?!.*mobile))|(windows(?!.*phone)(.*touch))|kindle|playbook|silk|(puffin(?!.*(IP|AP|WP))))/.test(userAgent);\n  }\n\n  const [exCat, setExCat] = useState('Body parts');\n  const [arr, setArr] = useState({ totalPages: 1, currentPage: 1, result: [] });\n  const [loading, setLoading] = useState(false);\n  const [selectedEx, setSelectedEx] = useState(undefined);\n  const location = useLocation();\n  const date = location.state ? location.state : formatDate(new Date());\n\n  const [specific, setSpecific] = useState({\n    name: undefined,\n    filter: undefined,\n  });\n  const [page, setPage]=useState(1);\n  useEffect(()=>{\n    setPage(1);\n  }, [exCat])\n  useEffect(() => {\n    setArr([]);\n    setLoading(true);\n    instance\n      .get(`exercises?page=${page}&limit=${isTablet()?9:10}&filter=${exCat}`)\n      .then(v => {\n        setArr(v.data);\n      })\n      .finally(() => setLoading(false));\n    setSpecific({});\n    setSelectedEx(undefined);\n  }, [exCat, page]);\n\n  if (!specific.name || !specific.filter) {\n    return (\n      <div>\n        <ExerciseHead exCat={exCat} setExCat={setExCat} />\n        {loading ? (\n          <div>Loading...</div>\n        ) : (\n          <ExerciseCategoriesList data={arr} setSpec={setSpecific} />\n        )}\n        <Pagination page={page} setPage={setPage} pagesTotal={arr.totalPages}/>\n      </div>\n    );\n  } else {\n    return (\n      <div>\n        <ExerciseHead exCat={exCat} setExCat={setExCat} />\n        <ExerciseList\n          name={specific.name}\n          filter={specific.filter}\n          setSelected={setSelectedEx}\n        />\n        {selectedEx ? <ExerciseModal ex={selectedEx} setEx={setSelectedEx}  selectedDate={date}/> : <></>}\n      </div>\n    );\n  }\n}\n\nexport default Exercises;\n"],"names":["_ref","children","_jsx","className","css","date","day","String","getDate","padStart","month","getMonth","year","getFullYear","concat","BasicModalWindow","isOpen","onClose","document","addEventListener","handleEscapeKey","event","code","console","log","removeEventListener","handleClose","e","target","dataset","type","onClick","_jsxs","href","svg","exCat","setExCat","handleChangeCat","innerText","trim","TitlePage","item","setSpec","src","imgURL","alt","name","toUpperCase","substring","filter","data","result","map","v","ExerciseCategoriesItem","nanoid","_unused","_Fragment","exercise","setSelected","capitalize","str","slice","burnedCalories","bodyPart","_useState","useState","_useState2","_slicedToArray","arr","setArr","useEffect","instance","then","ExerciseItem","val","ex","setEx","selectedDate","seconds","setSeconds","_useState3","_useState4","paused","setPaused","_useState5","_useState6","open","setOpen","_useState7","_useState8","finished","setFinished","dispatch","useDispatch","percentTimeLeft","time","caloriesBurned","toFixed","undefined","exerciseId","_id","duration","addExercisesDiary","setTimeout","NavLink","to","gifUrl","style","background","transform","sec","min","Math","floor","convertTime","ModalStat","equipment","page","setPage","pagesTotal","i","push","props","totalPages","currentPage","loading","setLoading","selectedEx","setSelectedEx","location","useLocation","state","formatDate","Date","_useState9","_useState10","specific","setSpecific","_useState11","_useState12","userAgent","navigator","toLowerCase","test","isTablet","finally","ExerciseHead","ExerciseList","ExerciseModal","ExerciseCategoriesList","Pagination"],"sourceRoot":""}