{"version":3,"file":"static/js/642.6c58f338.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/TitlePage/title-page.module.css?6643","components/TitlePage/TitlePage.jsx","webpack://react-homework-template/./src/pages/Diary.module.css?de53","components/daySwitch/DaySwitch.js","webpack://react-homework-template/./src/components/dayDashboard/DayDashboard.module.css?bc48","webpack://react-homework-template/./src/components/dayDashboard/StatisticsItem/StatisticsItem.module.css?fac9","components/dayDashboard/Icon.jsx","components/dayDashboard/StatisticsItem/StatisticsItem.jsx","components/dayDashboard/DayDashboard.js","webpack://react-homework-template/./src/components/dayProducts/DayProducts.module.css?7af7","webpack://react-homework-template/./src/components/dayProducts/productsTable/ProductsTable.module.css?5674","../node_modules/nanoid/index.browser.js","components/dayProducts/productsTable/ProductsTable.js","components/emList/EmList.jsx","components/dayProducts/DayProducts.js","webpack://react-homework-template/./src/components/dayExercises/DayExercises.module.css?3b92","webpack://react-homework-template/./src/components/dayExercises/exercisesTable/ExercisesTable.module.css?d836","components/dayExercises/exercisesTable/ExercisesTable.js","components/dayExercises/DayExercises.js","redux/diary/diaryOperations.js","function/formatData.js","pages/Diary.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"titlePage\":\"title-page_titlePage__ZBar5\"};","import css from \"./title-page.module.css\";\n const TitlePage=({children})=>{\nreturn(\n    <h2 className={css.titlePage}>{children}</h2>\n)\n}\nexport default TitlePage;","// extracted by mini-css-extract-plugin\nexport default {\"diaryPage\":\"Diary_diaryPage__fAyYC\",\"calendarCont\":\"Diary_calendarCont__6mDiP\",\"calendar\":\"Diary_calendar__ESVay\",\"sectionCont\":\"Diary_sectionCont__+Xm4N\"};","//import css from './DaySwitch.module.css';\n\n\n\n\nconst DaySwitch = () => {\n  \n\n};\n\n\nexport default DaySwitch;\n","// extracted by mini-css-extract-plugin\nexport default {\"dayDashboard\":\"DayDashboard_dayDashboard__h7nLm\",\"statisticList\":\"DayDashboard_statisticList__qUE0W\",\"adviceWrap\":\"DayDashboard_adviceWrap__dIlAc\",\"adviceIconWrap\":\"DayDashboard_adviceIconWrap__a4Yha\",\"exclamationIcon\":\"DayDashboard_exclamationIcon__Mmf+x\",\"adviceText\":\"DayDashboard_adviceText__Z-qD3\"};","// extracted by mini-css-extract-plugin\nexport default {\"statisticItem\":\"StatisticsItem_statisticItem__OTLqf\",\"statisticItemPositive\":\"StatisticsItem_statisticItemPositive__RlkXR\",\"statisticItemNegative\":\"StatisticsItem_statisticItemNegative__BW-f4\",\"primaryStatisticItem\":\"StatisticsItem_primaryStatisticItem__eKkjh\",\"statisticTitleWrap\":\"StatisticsItem_statisticTitleWrap__OwBh-\",\"statisticTitle\":\"StatisticsItem_statisticTitle__ve4XR\",\"statisticPrimaryTitle\":\"StatisticsItem_statisticPrimaryTitle__9TBuz\",\"statisticIcon\":\"StatisticsItem_statisticIcon__04E7e\",\"statisticValue\":\"StatisticsItem_statisticValue__rm2N7\"};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport sprite  from '../../img/sprite/symbol-defs.svg';\n\nfunction Icon({ className, iconId }) {\n  return (\n    <svg className={className} width=\"98px\" height=\"35px\">\n      <use href={`${sprite}#${iconId}`}/>\n    </svg>\n  );\n}\n\nIcon.propTypes = {\n  className: PropTypes.string,\n  iconId: PropTypes.string.isRequired,\n  onClick: PropTypes.func,\n};\n\nexport default Icon;","import css from './StatisticsItem.module.css';\nimport Icon from '../Icon';\nimport PropTypes from 'prop-types';\n\nconst StatisticsItem = ({\n  statisticsName,\n  statisticsIcon,\n  statisticsValue,\n  statisticPrimary,\n  fulfilledNorm = '',\n}) => {\n  return (\n    <>\n      <li  className={`${css.statisticItem} ${\n          statisticPrimary && css.primaryStatisticItem\n        } ${\n          fulfilledNorm !== '' && fulfilledNorm === 'positive'\n            ? css.statisticItemPositive\n            : fulfilledNorm !== '' && fulfilledNorm === 'negative'\n            ? css.statisticItemNegative\n            : ''\n        }`}>\n        <div className={css.statisticTitleWrap}>\n          <Icon className={css.statisticIcon} iconId={statisticsIcon} />\n          <p\n            className={`${css.statisticTitle} ${\n              statisticPrimary && css.statisticPrimaryTitle\n            }`}\n          >\n            {statisticsName}\n          </p>\n        </div>\n        <div className={css.statisticValue}>{statisticsValue}</div>\n      </li>\n    </>\n  );\n};\n\n\n\n\n\nStatisticsItem.propTypes = {\n  statisticsName: PropTypes.string.isRequired,\n  statisticsIcon: PropTypes.string.isRequired,\n  statisticsValue: PropTypes.string.isRequired,\n  statisticPrimary: PropTypes.bool,\n  fulfilledNorm: PropTypes.string,\n};\n\nexport default StatisticsItem;","\nimport React from 'react';\n//import { useSelector } from 'react-redux';\nimport css from './DayDashboard.module.css';\nimport StatisticsItem from './StatisticsItem/StatisticsItem';\n\n\n\nconst DayDashboard = () => {\n\n  return (\n    <div className={css.dayDashboard}>\n      <ul className={css.statisticList}>\n        <StatisticsItem\n          statisticsName={'Daily calorie intake'}\n                  /*statisticsValue={`${}`}*/\n            statisticsIcon={'icon-fork-filled'}\n          statisticPrimary\n        />\n        <StatisticsItem\n          statisticsName={'Daily physical activity'}\n        /*statisticsValue={`${} min`}*/\n            statisticsIcon={'icon-dumbbell-filled'}\n\n          statisticPrimary\n        />\n        <StatisticsItem\n          statisticsName={'Сalories consumed'}\n                  /*statisticsValue={`${}`}*/\n                statisticsIcon={'icon-apple-filled'}\n\n        />\n        <StatisticsItem\n          statisticsName={'Сalories burned'}\n                  /*statisticsValue={`${}`}*/\n                              statisticsIcon={'icon-burn-filled'}\n\n        />\n        <StatisticsItem\n          statisticsName={'Calories remaining'}\n                  /*statisticsValue={`${}`}*/\n            statisticsIcon={'icon-bubble-filled'}\n\n        />\n        <StatisticsItem\n          statisticsName={'Sports remaining'}\n          /*statisticsValue={} */ \n        statisticsIcon={'icon-running-filled'}\n\n        />\n      </ul>\n      <div className={css.adviceWrap}>\n        <div className={css.adviceIconWrap}>\n          {/* Іконка */}\n        </div>\n        <p className={css.adviceText}>\n          Record all your meals in the calorie diary every day. This will help you be aware of your nutrition and make informed choices.\n        </p>\n      </div>\n    </div>\n  );\n};\n\nexport default DayDashboard;","// extracted by mini-css-extract-plugin\nexport default {\"dayProducts\":\"DayProducts_dayProducts__LuDKI\",\"dayScroll\":\"DayProducts_dayScroll__46wb-\",\"diaryMen\":\"DayProducts_diaryMen__zlr12\",\"DiaryZag\":\"DayProducts_DiaryZag__rvcXM\",\"Butt\":\"DayProducts_Butt__NdM-k\",\"iconStrilka\":\"DayProducts_iconStrilka__Ilypr\"};","// extracted by mini-css-extract-plugin\nexport default {\"diaryList\":\"ProductsTable_diaryList__NSGJb\",\"diaryItem\":\"ProductsTable_diaryItem__kGjga\",\"elem\":\"ProductsTable_elem__B1b3i\",\"elementCont\":\"ProductsTable_elementCont__-LBk0\",\"nameCateg\":\"ProductsTable_nameCateg__85BEo\",\"nameValue\":\"ProductsTable_nameValue__k2xLk\",\"element\":\"ProductsTable_element__MVHTf\",\"recommendCont\":\"ProductsTable_recommendCont__kGpWW\",\"productRecommend\":\"ProductsTable_productRecommend__W3G-g\",\"productNotRecommend\":\"ProductsTable_productNotRecommend__6WQMJ\",\"trashValue\":\"ProductsTable_trashValue__0fzSq\",\"iconTresh\":\"ProductsTable_iconTresh__beqBw\",\"nameTrash\":\"ProductsTable_nameTrash__jBGkn\"};","import { urlAlphabet } from './url-alphabet/index.js'\nlet random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nlet customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nlet customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nlet nanoid = (size = 21) => {\n  let id = ''\n  let bytes = crypto.getRandomValues(new Uint8Array(size))\n  while (size--) {\n    let byte = bytes[size] & 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte < 63) {\n      id += '_'\n    } else {\n      id += '-'\n    }\n  }\n  return id\n}\nexport { nanoid, customAlphabet, customRandom, urlAlphabet, random }\n","import css from './ProductsTable.module.css';\nimport { nanoid } from 'nanoid';\nimport PropTypes from 'prop-types';\nimport sprite from '../../../img/sprite/symbol-defs.svg';\n\n\nconst ProductsTable = (props) => {\n      const { products } = props; // Отримуємо products з props\n\n    const capitalizedWord = (word) => {\n  return word.substring(0, 1).toUpperCase() + word.substring(1);\n};\n    return (\n       <ul className={css.diaryList}>\n      {products.map(\n        ({ _id, title, category, calories, amount, recommended }, i) => {\n          return (\n            <li key={nanoid()} className={css.diaryItem}>\n              <table className={css.table}>\n                <tbody className={css.bodyTable}>\n                  <tr className={css.elem}>\n                    <th className={css.nameCateg}>Title</th>\n                    <td className={css.nameValue}>{capitalizedWord(title)}</td>\n                  </tr>\n                  <tr className={css.elem}>\n                    <th className={css.nameCateg}>Category</th>\n                    <td className={css.nameValue}>\n                      {capitalizedWord(category)}\n                    </td>\n                  </tr>\n                </tbody>\n                <tbody className={css.elementCont}>\n                  <tr className={css.elem}>\n                    <th className={css.nameCateg}>Calories</th>\n                    <td className={css.nameValue}>{calories}</td>\n                  </tr>\n                  <tr className={css.elem}>\n                    <th className={css.nameCateg}>Weight</th>\n                    <td className={css.nameValue}>{amount}</td>\n                  </tr>\n                  <tr className={css.elem}>\n                    <th className={css.nameCateg}>Recommend</th>\n                    <td className={css.nameValue}>\n                      <div className={`${css.recommendCont}`}>\n                        <span\n                          className={\n                            recommended\n                              ? `${css.productRecommend}`\n                              : `${css.productNotRecommend}`\n                          }\n                        ></span>\n                        {recommended ? 'Yes' : 'No'}\n                      </div>\n                    </td>\n                  </tr>\n                  <tr className={css.elem}>\n                    <th className={`${css.nameCateg} ${css.nameTrash}`}>\n                      Trash\n                    </th>\n                    <td> \n                      <svg className={css.iconTresh} width=\"98px\" height=\"35px\">\n                        <use href={`${sprite}#icon-trash`}></use>\n                      </svg>\n                    </td>\n                  </tr>\n                </tbody>\n              </table>\n            </li>\n          );\n        }\n      )}\n    </ul>\n  );\n\n}\n\nProductsTable.propTypes = {\n  products: PropTypes.array.isRequired,\n};\n\nexport default ProductsTable;\n","//import css from \"./EmptyList.module.css\";\nimport PropTypes from 'prop-types';\n\nconst EmList = ({ itemName }) => {\n  return (\n    <div>\n      <p>Not found {itemName}</p>\n    </div>\n  );\n};\n\n\nEmList.propTypes = {\n  listName: PropTypes.string.isRequired,\n};\n\nexport default EmList;","import css from './DayProducts.module.css';\nimport ProductsTable from './productsTable/ProductsTable';\nimport sprite from '../../img/sprite/symbol-defs.svg';\nimport { Link } from 'react-router-dom';\n//import { selectDiaryProducts } from '../../redux/diary/diarySelectors';\n\nimport EmList from '../emList/EmList.jsx';\n\nconst DayProducts = () => {\n  //  const diaryProducts = useSelector(selectDiaryProducts);\n      const diaryProducts = [\n    {\n      _id: '1',\n      title: 'Product 1',\n      category: 'Category 1',\n      calories: 100,\n      amount: 200,\n      recommended: true,\n    },]\n    return (\n        <div className = {css.dayProducts}>\n            <div className = {css.dayScroll}>\n                <div className={ css.diaryMen}> \n                    <h3 className = {css.DiaryZag}>Products</h3>\n                    <Link to=\"/products\" className={css.Butt}>\n            Add product\n            <svg className={css.iconStrilka} width=\"98px\" height=\"35px\">\n              <use href={`${sprite}#icon-next-arrow-gray`}></use>\n            </svg>\n          </Link>\n          </div>\n          {diaryProducts.length === 0 ? (\n          <EmList itemName={\"products\"} />\n        ) : (\n            <ProductsTable products={diaryProducts} />\n        )}\n            \n            </div>\n\n        </div> \n)\n}\n\nexport default DayProducts;\n\n\n","// extracted by mini-css-extract-plugin\nexport default {\"DayExercises\":\"DayExercises_DayExercises__d2We8\",\"dayScroll\":\"DayExercises_dayScroll__gcQVi\",\"dayNav\":\"DayExercises_dayNav__+T+Wl\",\"dayZag\":\"DayExercises_dayZag__iZ6rT\",\"Butt\":\"DayExercises_Butt__3osLG\",\"iconStrilka\":\"DayExercises_iconStrilka__4vViE\"};","// extracted by mini-css-extract-plugin\nexport default {\"diaryMainItem\":\"ExercisesTable_diaryMainItem__+QUNa\",\"element\":\"ExercisesTable_element__ciKJY\",\"elementWrap\":\"ExercisesTable_elementWrap__7MPXh\",\"nameCategory\":\"ExercisesTable_nameCategory__5Wc+t\",\"nameValue\":\"ExercisesTable_nameValue__iih7Y\",\"iconTresh\":\"ExercisesTable_iconTresh__DePOM\",\"nameTrash\":\"ExercisesTable_nameTrash__xfZsB\",\"table\":\"ExercisesTable_table__vvyBI\",\"bodyTable\":\"ExercisesTable_bodyTable__EcdoH\",\"diaryMainList\":\"ExercisesTable_diaryMainList__+2ofD\"};","import css from './ExercisesTable.module.css';\nimport PropTypes from 'prop-types';\nimport { nanoid } from 'nanoid';\nimport sprite from '../../../img/sprite/symbol-defs.svg';\n\nconst ExercisesTable = (props) => {\n    const { exercises } = props;\n    const capitalizedWord = (word) => {\n  return word.substring(0, 1).toUpperCase() + word.substring(1);\n};\n    return (\n         <>\n      <ul className={css.diaryMainList}>\n        {exercises.map(\n          ({ _id, bodyPart, equipment, name, target, calories, time }) => (\n            <li key={nanoid()} className={css.diaryMainItem}>\n              <table className={css.table}>\n                <tbody className={css.bodyTable}>\n                  <tr className={css.element}>\n                    <th className={css.nameCategory}>Body Part</th>\n                    <td className={css.nameValue}>\n                      {capitalizedWord(bodyPart)}\n                    </td>\n                  </tr>\n                  <tr className={css.element}>\n                    <th className={css.nameCategory}>Equipment</th>\n                    <td className={css.nameValue}>\n                      {capitalizedWord(equipment)}\n                    </td>\n                  </tr>\n                  <tr className={css.element}>\n                    <th className={css.nameCategory}>Name</th>\n                    <td className={css.nameValue}>{capitalizedWord(name)}</td>\n                  </tr>\n                </tbody>\n                <tbody className={css.elementWrap}>\n                  <tr className={css.element}>\n                    <th className={css.nameCategory}>Target</th>\n                    <td className={css.nameValue}>{capitalizedWord(target)}</td>\n                  </tr>\n                  <tr className={css.element}>\n                    <th className={css.nameCategory}>Burned Calories</th>\n                    <td className={css.nameValue}>{calories}</td>\n                  </tr>\n                  <tr className={css.element}>\n                    <th className={css.nameCategory}>Time</th>\n                    <td className={css.nameValue}>{time}</td>\n                  </tr>\n                  <tr className={css.element}>\n                    <th className={`${css.nameCategory} ${css.nameTrash}`}>\n                      Trash\n                    </th>\n                    <td> \n                      <svg className={css.iconTresh} width=\"98px\" height=\"35px\">\n                        <use href={`${sprite}#icon-trash`}></use>\n                      </svg>\n                  </td>\n                  </tr>\n                </tbody>\n              </table>\n            </li>\n          )\n        )}\n      </ul>\n    </>\n    )\n    \n}\n\nExercisesTable.propTypes = {\n  exercises: PropTypes.array.isRequired,\n};\n\n\n\nexport default ExercisesTable;\n\n\n","import css from \"./DayExercises.module.css\";\nimport { Link } from 'react-router-dom';\n\nimport ExercisesTable from \"./exercisesTable/ExercisesTable\";\nimport EmList from '../emList/EmList.jsx';\n\nimport sprite from '../../img/sprite/symbol-defs.svg';\n//import { selectDiaryExercises } from '../../redux/diary/diarySelectors';\n\n\n\nconst DayExercises = () => {\n  //  const diaryExercises = useSelector(selectDiaryProducts);\n\nconst diaryExercises = [\n  {\n    _id: 1,\n    bodyPart: 'legs',\n    equipment: 'dumbbells',\n    name: 'squats',\n    target: 'strength',\n    calories: 200,\n    time: '15 minutes'\n  },\n];\n  return (\n    <>\n      <div className= {css.DayExercises}>\n        <div className ={css.dayScroll}>\n          <div className={css.dayNav}>\n            <h3 className={css.dayZag}>Execrcises</h3>\n         <Link to=\"/exercises\" className={css.Butt}>\n            Add exercises\n            <svg className={css.iconStrilka} width=\"98px\" height=\"35px\">\n              <use href={`${sprite}#icon-next-arrow-gray`}></use>\n            </svg>\n          </Link>\n          </div>\n {diaryExercises.length === 0 ? (\n            <EmList itemName={\"exercises\"} />\n          ) : (\n            <ExercisesTable exercises={diaryExercises} />\n          )}        </div>\n      </div>\n    </>\n  );\n};\n\nexport default DayExercises;\n\n","\nimport { createAsyncThunk } from '@reduxjs/toolkit';\nimport axios from 'axios';\nimport { toast } from 'react-toastify';\n\n\naxios.defaults.baseURL = 'https://power-pulse-backend.onrender.com/';\n\n\nexport const fetchAllDiary = createAsyncThunk(\n  'fetchAllDiary',\n  async (date, { rejectWithValue }) => {\n    try {\n      const { data } = await axios.get(`/?date=${date}`);\n      return data;\n    } catch (error) {\n      toast.error('Oops... Something went wrong! Try again!');\n      return rejectWithValue('Oops... Something went wrong!');\n    }\n  },\n);\n\nexport const addProductDiary = createAsyncThunk(\n  'addProductDiary',\n  async (productDetails, { rejectWithValue }) => {\n    try {\n      const {\n        productId, //string\n        date, //string yyyy-mm-dd\n        grams, //number\n        category, //string\n        calories,//number\n        \n      } = productDetails;\n      await axios.post('/products', {\n        productId,\n        date,\n        grams,\n        category,\n        calories,\n        \n      });\n      console.log('productDetailsAdd', productDetails);\n\n      toast.success(`Product successfully added to diary!`);\n      return;\n    } catch (error) {\n      toast.error('Oops... Something went wrong! Try again!');\n      return rejectWithValue('Oops... Something went wrong!');\n    }\n  },\n);\n\nexport const deleteProductDiary = createAsyncThunk(\n  'deleteProductDiary',\n  async (productDetails, { rejectWithValue }) => {\n    const { id, date } = productDetails;\n\n    try {\n      await axios.delete(`/products?id=${id}&date=${date}`);\n\n      return id;\n    } catch (error) {\n      toast.error('Oops... Something went wrong! Try again!');\n      return rejectWithValue('Oops... Something went wrong!');\n    }\n  },\n);\n\nexport const addExercisesDiary = createAsyncThunk(\n  'addExercisesDiary',\n  async (exercise, thunkAPI) => {\n    console.log('exercise', exercise);\n    const {\n      exerciseId,//string\n      date, //string yyyy-mm-dd\n      duration,//number\n      burnedCalories,//number\n    } = exercise;\n    try {\n      const response = await axios.post('/exercises', {\n        exerciseId,\n        date,\n        duration,\n        burnedCalories,\n      });\n      return response.data;\n    } catch (e) {\n      return thunkAPI.rejectWithValue(e.message);\n    }\n  },\n);\n\nexport const deleteExercisesDiary = createAsyncThunk(\n  'deleteExercisesDiary',\n  async (exerciseDetails, { rejectWithValue }) => {\n    console.log('exerciseDetailsDELETE', exerciseDetails);\n    try {\n      const { id, date } = exerciseDetails;\n      await axios.delete(`/exercises?date=${date}&id=${id}`);\n      return id;\n    } catch (error) {\n      toast.error('Oops... Something went wrong! Try again!');\n      return rejectWithValue('Oops... Something went wrong!');\n    }\n  },\n);\n","const formatDate = (date) => {\n  const day = String(date.getDate()).padStart(2, '0');\n  const month = String(date.getMonth() + 1).padStart(2, '0');\n  const year = date.getFullYear();\n  return `${year}-${month}-${day}`;\n};\n\n\nexport default formatDate;\n  \n\n","import css from './Diary.module.css';\n\nimport TitlePage from '../components/TitlePage/TitlePage';\nimport DaySwitch from '../components/daySwitch/DaySwitch';\nimport DayDashboard from '../components/dayDashboard/DayDashboard';\nimport DayProducts from '../components/dayProducts/DayProducts';\nimport DayExercises from '../components/dayExercises/DayExercises';\n\nimport { fetchAllDiary } from \"../redux/diary/diaryOperations\";\n\n\nimport { useDispatch } from \"react-redux\";\nimport { useEffect, useState } from \"react\";\n\nimport formatDate from '../function/formatData';\n\nexport default function Diary() {\n\n     const dispatch = useDispatch();\n    const [selectedDate, setSelectedDate] = useState(null);/*початкова дата не обрана*/\n    /*Данні щоденника мають змінюватись при змінні  selectedDate*/\n     useEffect(() => {\n    const fetchDate = () => {\n      if (selectedDate) {\n        const date = {\n          date: selectedDate,\n        };\n        dispatch(fetchAllDiary(date));\n      }\n    };\n    fetchDate();\n  }, [dispatch, selectedDate]);\n\n/*Обробка вибраної дати */\n   const handleDate = async (date) => {\n    const formatedDate = formatDate(date);\n    await setSelectedDate(formatedDate);\n  };\n  \n\n    return (\n        <div className ={css.diaryPage}>\n            <div className={css.calendarCont}>\n                    <TitlePage children = \"Diary\" />\n\n                <div className ={css.calendar}>\n                    <DaySwitch handleDate={handleDate}/>\n                </div>\n            </div>\n            <div className ={css.sectionCont}>\n                <DayDashboard />\n                <div>\n                    <DayProducts />\n                    <DayExercises />\n                </div>\n            </div>\n\n        </div>\n    )\n}\n"],"names":["_ref","children","_jsx","className","css","iconId","width","height","href","concat","sprite","statisticsName","statisticsIcon","statisticsValue","statisticPrimary","_ref$fulfilledNorm","fulfilledNorm","_Fragment","_jsxs","Icon","StatisticsItem","nanoid","size","arguments","length","undefined","id","bytes","crypto","getRandomValues","Uint8Array","byte","toString","toUpperCase","props","products","capitalizedWord","word","substring","map","i","_id","title","category","calories","amount","recommended","itemName","diaryProducts","Link","to","EmList","ProductsTable","exercises","bodyPart","equipment","name","target","time","diaryExercises","ExercisesTable","axios","fetchAllDiary","createAsyncThunk","_ref2","_asyncToGenerator","_regeneratorRuntime","_callee","date","rejectWithValue","_yield$axios$get","data","_context","prev","next","sent","abrupt","t0","toast","stop","_x","_x2","apply","_ref4","_callee2","productDetails","_ref3","productId","grams","_context2","console","log","_x3","_x4","_ref6","_callee3","_ref5","_context3","_x5","_x6","_ref7","_callee4","exercise","thunkAPI","exerciseId","duration","burnedCalories","response","_context4","message","_x7","_x8","_ref9","_callee5","exerciseDetails","_ref8","_context5","_x9","_x10","day","String","getDate","padStart","month","getMonth","year","getFullYear","Diary","dispatch","useDispatch","_useState","useState","_useState2","_slicedToArray","selectedDate","setSelectedDate","useEffect","handleDate","formatedDate","formatDate","TitlePage","DaySwitch","DayDashboard","DayProducts","DayExercises"],"sourceRoot":""}