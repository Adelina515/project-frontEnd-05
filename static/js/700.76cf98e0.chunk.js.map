{"version":3,"file":"static/js/700.76cf98e0.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/TitlePage/title-page.module.css?6643","components/TitlePage/TitlePage.jsx","webpack://react-homework-template/./src/components/daily/Daily.module.css?5940","components/daily/Daily.jsx","webpack://react-homework-template/./src/components/userCard/UserCard.module.css?313b","redux/UserPageCntrls/selectors.jsx","components/userCard/UserCard.js","../node_modules/date-fns/parseISO.mjs","webpack://react-homework-template/./src/components/radioButton/RadioButton.module.css?6146","components/radioButton/RadioButton.jsx","webpack://react-homework-template/./src/components/userForm/UserForm.module.css?2194","components/userForm/UserForm.js","webpack://react-homework-template/./src/pages/ProfilePage/ProfilePage.module.css?2c99","webpack://react-homework-template/./src/components/exclamation/Exclamation.module.css?ea71","components/exclamation/Exclamation.jsx","pages/ProfilePage/Profile.js","../node_modules/date-fns/constants.mjs"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"titlePage\":\"title-page_titlePage__ZBar5\"};","import css from \"./title-page.module.css\";\n const TitlePage=({children})=>{\nreturn(\n    <h2 className={css.titlePage}>{children}</h2>\n)\n}\nexport default TitlePage;","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Daily_container__sYlbh\",\"wrapper\":\"Daily_wrapper__-4E8J\",\"svgIcon\":\"Daily_svgIcon__N1fMy\",\"text\":\"Daily_text__b53vF\",\"value\":\"Daily_value__XkUNS\"};","import sprite from '../../img/sprite/symbol-defs.svg';\nimport css from './Daily.module.css'\n\nexport const Daily = ({ color, iconId, text, value }) => {\n  return (\n    <div className={css.container}  style={{ backgroundColor: color }}>\n      <div className={css.wrapper}>\n        <svg className={css.svgIcon}>\n          <use href={`${sprite}#${iconId}`} />\n        </svg>\n        <p className={css.text}>{text}</p>\n      </div>\n      <p className={css.value}>{value}</p>\n    </div>\n  );\n};","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"UserCard_wrapper__tGVzv\",\"svg-icon\":\"UserCard_svg-icon__kD8J3\",\"text\":\"UserCard_text__fr15B\",\"wrapperPage\":\"UserCard_wrapperPage__d3Ri+\",\"avatar\":\"UserCard_avatar__qx8Iu\",\"photo\":\"UserCard_photo__fOfN5\",\"button\":\"UserCard_button__qZY0U\",\"svgLogoUser\":\"UserCard_svgLogoUser__n2Pd7\",\"iconBtn\":\"UserCard_iconBtn__HMhCT\",\"titleName\":\"UserCard_titleName__vBdoI\",\"subtitle\":\"UserCard_subtitle__iw3sg\"};","export const selectUser = state => state.auth.user;\nexport const selectUsersAvatar = state => state.auth.user.avatarURL;\nexport const selectUserToken= (state)=>state.auth.token\n\n// export const selectIsUpdating = state => state.auth.isUpdateUserData;","import { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport css from './UserCard.module.css';\nimport { selectUsersAvatar } from '../../redux/UserPageCntrls/selectors.jsx';\nimport sprite from '../../img/sprite/symbol-defs.svg';\nimport { updateProfileAvatarTh } from '../../redux/UserPageCntrls/UserPageOperations';\nimport toast from 'react-hot-toast';\n\nexport const UserProfile = ({ name, avatar, userToken }) => {\n  const dispatch = useDispatch();\n  const userAvatar = useSelector(selectUsersAvatar);\n  const [avatarURL, setAvatarURL] = useState();\n\n  useEffect(() => {\n    setAvatarURL(avatar);\n  }, [avatar]);\n\n  const avatarUser = (\n    <img src={avatarURL || userAvatar} className={css.photo} width=\"100%\" alt=\"Avatar\" />\n  );\n\n  const avatarStandart = (\n    <svg fill=\"#000\" width=\"62\" height=\"62\">\n      <use href={`${sprite}#icon-user`}></use>\n    </svg>\n  );\n\n  const handleAvatarChange = async (event) => {\n    const avatar = event.target.files[0];\n\n    if (avatar) {\n      const blob = new Blob([avatar]);\n      const objectURL = URL.createObjectURL(blob);\n      setAvatarURL(objectURL);\n\n      try {\n        await dispatch(updateProfileAvatarTh({ avatar, userToken }));\n        toast.success('Avatar updated successfully!', { duration: 3000 });\n      } catch (error) {\n        toast.error('Error updating avatar. Please try again.', { duration: 3000 });\n        console.error('Error updating avatar:', error);\n      }\n    }\n  };\n\n  return (\n    <div className={css.wrapperPage} style={{ backgroundColor: '#040404' }}>\n      <div className={css.avatar}>{avatarURL ? avatarUser : avatarStandart}</div>\n      <form id=\"upload-form\">\n        <input\n          type=\"file\"\n          id=\"file-input\"\n          name=\"file\"\n          style={{ display: 'none' }}\n          onChange={handleAvatarChange}\n        />\n        <label htmlFor=\"file-input\">\n          <div className={css.button}>\n            <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n              <use xlinkHref={`${sprite}#icon-plus`}></use>\n            </svg>\n          </div>\n        </label>\n      </form>\n      <p className={css.titleName}>{name}</p>\n      <p className={css.subtitle}>User</p>\n    </div>\n  );\n};\n","import { millisecondsInHour, millisecondsInMinute } from \"./constants.mjs\";\n\n/**\n * The {@link parseISO} function options.\n */\n\n/**\n * @name parseISO\n * @category Common Helpers\n * @summary Parse ISO string\n *\n * @description\n * Parse the given string in ISO 8601 format and return an instance of Date.\n *\n * Function accepts complete ISO 8601 formats as well as partial implementations.\n * ISO 8601: http://en.wikipedia.org/wiki/ISO_8601\n *\n * If the argument isn't a string, the function cannot parse the string or\n * the values are invalid, it returns Invalid Date.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param argument - The value to convert\n * @param options - An object with options\n *\n * @returns The parsed date in the local time zone\n *\n * @example\n * // Convert string '2014-02-11T11:30:30' to date:\n * const result = parseISO('2014-02-11T11:30:30')\n * //=> Tue Feb 11 2014 11:30:30\n *\n * @example\n * // Convert string '+02014101' to date,\n * // if the additional number of digits in the extended year format is 1:\n * const result = parseISO('+02014101', { additionalDigits: 1 })\n * //=> Fri Apr 11 2014 00:00:00\n */\nexport function parseISO(argument, options) {\n  const additionalDigits = options?.additionalDigits ?? 2;\n  const dateStrings = splitDateString(argument);\n\n  let date;\n  if (dateStrings.date) {\n    const parseYearResult = parseYear(dateStrings.date, additionalDigits);\n    date = parseDate(parseYearResult.restDateString, parseYearResult.year);\n  }\n\n  if (!date || isNaN(date.getTime())) {\n    return new Date(NaN);\n  }\n\n  const timestamp = date.getTime();\n  let time = 0;\n  let offset;\n\n  if (dateStrings.time) {\n    time = parseTime(dateStrings.time);\n    if (isNaN(time)) {\n      return new Date(NaN);\n    }\n  }\n\n  if (dateStrings.timezone) {\n    offset = parseTimezone(dateStrings.timezone);\n    if (isNaN(offset)) {\n      return new Date(NaN);\n    }\n  } else {\n    const dirtyDate = new Date(timestamp + time);\n    // JS parsed string assuming it's in UTC timezone\n    // but we need it to be parsed in our timezone\n    // so we use utc values to build date in our timezone.\n    // Year values from 0 to 99 map to the years 1900 to 1999\n    // so set year explicitly with setFullYear.\n    const result = new Date(0);\n    result.setFullYear(\n      dirtyDate.getUTCFullYear(),\n      dirtyDate.getUTCMonth(),\n      dirtyDate.getUTCDate(),\n    );\n    result.setHours(\n      dirtyDate.getUTCHours(),\n      dirtyDate.getUTCMinutes(),\n      dirtyDate.getUTCSeconds(),\n      dirtyDate.getUTCMilliseconds(),\n    );\n    return result;\n  }\n\n  return new Date(timestamp + time + offset);\n}\n\nconst patterns = {\n  dateTimeDelimiter: /[T ]/,\n  timeZoneDelimiter: /[Z ]/i,\n  timezone: /([Z+-].*)$/,\n};\n\nconst dateRegex =\n  /^-?(?:(\\d{3})|(\\d{2})(?:-?(\\d{2}))?|W(\\d{2})(?:-?(\\d{1}))?|)$/;\nconst timeRegex =\n  /^(\\d{2}(?:[.,]\\d*)?)(?::?(\\d{2}(?:[.,]\\d*)?))?(?::?(\\d{2}(?:[.,]\\d*)?))?$/;\nconst timezoneRegex = /^([+-])(\\d{2})(?::?(\\d{2}))?$/;\n\nfunction splitDateString(dateString) {\n  const dateStrings = {};\n  const array = dateString.split(patterns.dateTimeDelimiter);\n  let timeString;\n\n  // The regex match should only return at maximum two array elements.\n  // [date], [time], or [date, time].\n  if (array.length > 2) {\n    return dateStrings;\n  }\n\n  if (/:/.test(array[0])) {\n    timeString = array[0];\n  } else {\n    dateStrings.date = array[0];\n    timeString = array[1];\n    if (patterns.timeZoneDelimiter.test(dateStrings.date)) {\n      dateStrings.date = dateString.split(patterns.timeZoneDelimiter)[0];\n      timeString = dateString.substr(\n        dateStrings.date.length,\n        dateString.length,\n      );\n    }\n  }\n\n  if (timeString) {\n    const token = patterns.timezone.exec(timeString);\n    if (token) {\n      dateStrings.time = timeString.replace(token[1], \"\");\n      dateStrings.timezone = token[1];\n    } else {\n      dateStrings.time = timeString;\n    }\n  }\n\n  return dateStrings;\n}\n\nfunction parseYear(dateString, additionalDigits) {\n  const regex = new RegExp(\n    \"^(?:(\\\\d{4}|[+-]\\\\d{\" +\n      (4 + additionalDigits) +\n      \"})|(\\\\d{2}|[+-]\\\\d{\" +\n      (2 + additionalDigits) +\n      \"})$)\",\n  );\n\n  const captures = dateString.match(regex);\n  // Invalid ISO-formatted year\n  if (!captures) return { year: NaN, restDateString: \"\" };\n\n  const year = captures[1] ? parseInt(captures[1]) : null;\n  const century = captures[2] ? parseInt(captures[2]) : null;\n\n  // either year or century is null, not both\n  return {\n    year: century === null ? year : century * 100,\n    restDateString: dateString.slice((captures[1] || captures[2]).length),\n  };\n}\n\nfunction parseDate(dateString, year) {\n  // Invalid ISO-formatted year\n  if (year === null) return new Date(NaN);\n\n  const captures = dateString.match(dateRegex);\n  // Invalid ISO-formatted string\n  if (!captures) return new Date(NaN);\n\n  const isWeekDate = !!captures[4];\n  const dayOfYear = parseDateUnit(captures[1]);\n  const month = parseDateUnit(captures[2]) - 1;\n  const day = parseDateUnit(captures[3]);\n  const week = parseDateUnit(captures[4]);\n  const dayOfWeek = parseDateUnit(captures[5]) - 1;\n\n  if (isWeekDate) {\n    if (!validateWeekDate(year, week, dayOfWeek)) {\n      return new Date(NaN);\n    }\n    return dayOfISOWeekYear(year, week, dayOfWeek);\n  } else {\n    const date = new Date(0);\n    if (\n      !validateDate(year, month, day) ||\n      !validateDayOfYearDate(year, dayOfYear)\n    ) {\n      return new Date(NaN);\n    }\n    date.setUTCFullYear(year, month, Math.max(dayOfYear, day));\n    return date;\n  }\n}\n\nfunction parseDateUnit(value) {\n  return value ? parseInt(value) : 1;\n}\n\nfunction parseTime(timeString) {\n  const captures = timeString.match(timeRegex);\n  if (!captures) return NaN; // Invalid ISO-formatted time\n\n  const hours = parseTimeUnit(captures[1]);\n  const minutes = parseTimeUnit(captures[2]);\n  const seconds = parseTimeUnit(captures[3]);\n\n  if (!validateTime(hours, minutes, seconds)) {\n    return NaN;\n  }\n\n  return (\n    hours * millisecondsInHour + minutes * millisecondsInMinute + seconds * 1000\n  );\n}\n\nfunction parseTimeUnit(value) {\n  return (value && parseFloat(value.replace(\",\", \".\"))) || 0;\n}\n\nfunction parseTimezone(timezoneString) {\n  if (timezoneString === \"Z\") return 0;\n\n  const captures = timezoneString.match(timezoneRegex);\n  if (!captures) return 0;\n\n  const sign = captures[1] === \"+\" ? -1 : 1;\n  const hours = parseInt(captures[2]);\n  const minutes = (captures[3] && parseInt(captures[3])) || 0;\n\n  if (!validateTimezone(hours, minutes)) {\n    return NaN;\n  }\n\n  return sign * (hours * millisecondsInHour + minutes * millisecondsInMinute);\n}\n\nfunction dayOfISOWeekYear(isoWeekYear, week, day) {\n  const date = new Date(0);\n  date.setUTCFullYear(isoWeekYear, 0, 4);\n  const fourthOfJanuaryDay = date.getUTCDay() || 7;\n  const diff = (week - 1) * 7 + day + 1 - fourthOfJanuaryDay;\n  date.setUTCDate(date.getUTCDate() + diff);\n  return date;\n}\n\n// Validation functions\n\n// February is null to handle the leap year (using ||)\nconst daysInMonths = [31, null, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n\nfunction isLeapYearIndex(year) {\n  return year % 400 === 0 || (year % 4 === 0 && year % 100 !== 0);\n}\n\nfunction validateDate(year, month, date) {\n  return (\n    month >= 0 &&\n    month <= 11 &&\n    date >= 1 &&\n    date <= (daysInMonths[month] || (isLeapYearIndex(year) ? 29 : 28))\n  );\n}\n\nfunction validateDayOfYearDate(year, dayOfYear) {\n  return dayOfYear >= 1 && dayOfYear <= (isLeapYearIndex(year) ? 366 : 365);\n}\n\nfunction validateWeekDate(_year, week, day) {\n  return week >= 1 && week <= 53 && day >= 0 && day <= 6;\n}\n\nfunction validateTime(hours, minutes, seconds) {\n  if (hours === 24) {\n    return minutes === 0 && seconds === 0;\n  }\n\n  return (\n    seconds >= 0 &&\n    seconds < 60 &&\n    minutes >= 0 &&\n    minutes < 60 &&\n    hours >= 0 &&\n    hours < 25\n  );\n}\n\nfunction validateTimezone(_hours, minutes) {\n  return minutes >= 0 && minutes <= 59;\n}\n\n// Fallback for modularized imports:\nexport default parseISO;\n","// extracted by mini-css-extract-plugin\nexport default {\"radioLabel\":\"RadioButton_radioLabel__tLXtN\",\"radioInput\":\"RadioButton_radioInput__CQEnN\"};","import css from \"./RadioButton.module.css\";\n\nexport const RadioButton = ({ id, name, value, checked, label, onChange }) => (\n  <div className={css.radio}>\n    <input\n      className={css.radioInput}\n      type=\"radio\"\n      id={id}\n      name={name}\n      value={value}\n      checked={checked}\n      onChange={onChange}\n    />\n    <label className={css.radioLabel} htmlFor={id}>\n      {label}\n    </label>\n  </div>\n);\n","// extracted by mini-css-extract-plugin\nexport default {\"formContainer\":\"UserForm_formContainer__UR0Yw\",\"sectionTitle\":\"UserForm_sectionTitle__UD9P1\",\"wrInput\":\"UserForm_wrInput__vG0i4\",\"input\":\"UserForm_input__krz-3\",\"wrapperInputField\":\"UserForm_wrapperInputField__8+JwJ\",\"wrapperFields\":\"UserForm_wrapperFields__HOEXF\",\"wrapper\":\"UserForm_wrapper__t2OoJ\",\"inputField\":\"UserForm_inputField__oR+hK\",\"label\":\"UserForm_label__panU-\",\"forRadio\":\"UserForm_forRadio__XOhzt\",\"wrapperRadio\":\"UserForm_wrapperRadio__vfL8d\",\"button\":\"UserForm_button__v70Qd\",\"wrapperLevel\":\"UserForm_wrapperLevel__OZHYS\",\"wrappInput\":\"UserForm_wrappInput__1juhL\"};","import { parseISO } from 'date-fns';\nimport { useDispatch } from 'react-redux'; ///useSelector\nimport { Formik, Field, Form } from 'formik'; /// ErrorMessage\nimport * as Yup from 'yup';\nimport { updateProfileParamsTh } from '../../redux/UserPageCntrls/UserPageOperations';\nimport toast from 'react-hot-toast';\nimport { RadioButton } from 'components/radioButton/RadioButton';\nimport css from './UserForm.module.css';\n\nexport const UserForm = ({\n  name,\n  height,\n  currentWeight,\n  desiredWeight,\n  birthday,\n  blood,\n  sex,\n  levelActivity,\n  email,\n  userToken\n}) => {\n  const dispatch = useDispatch();\n\n  const bloodOptions = [\n    { id: '1', value: 1, label: '1' },\n    { id: '2', value: 2, label: '2' },\n    { id: '3', value: 3, label: '3' },\n    { id: '4', value: 4, label: '4' },\n  ];\n\n  const sexOptions = [\n    { id: 'Male', value: 'male', label: 'Male' },\n    { id: 'Female', value: 'female', label: 'Female' },\n  ];\n\n  const levelOptions = [\n    {\n      id: 'level-1',\n      value: 1,\n      label: 'Sedentary lifestyle (little or no physical activity)',\n    },\n    {\n      id: 'level-2',\n      value: 2,\n      label: 'Light activity (light exercises/sports 1-3 days per week)',\n    },\n    {\n      id: 'level-3',\n      value: 3,\n      label: 'Moderately active (moderate exercises/sports 3-5 days per week)',\n    },\n    {\n      id: 'level-4',\n      value: 4,\n      label: 'Very active (intense exercises/sports 6-7 days per week)',\n    },\n    {\n      id: 'level-5',\n      value: 5,\n      label:\n        'Extremely active (very strenuous exercises/sports and physical work)',\n    },\n  ];\n\n  const handleSubmit = async (values) => {\n    try {\n      const newParams = {\n        ...values,\n      };\n\n      // Dispatch the updateProfileParamsTh action\n      await dispatch(updateProfileParamsTh({ newParams, userToken }));\n\n      // Show success notification\n      toast.success('Profile updated successfully!', {\n        duration: 3000,\n      });\n    } catch (error) {\n      // Show error notification\n      toast.error('Error updating profile. Please try again.', {\n        duration: 3000,\n      });\n      console.error('Error updating profile:', error);\n    }\n  };\n\n  if (!name) {\n    return <div>Loading...</div>;\n  }\n  const formattedDate = parseISO(birthday);\n\n  const initialValues = {\n    name: name,\n    height: height,\n    currentWeight: currentWeight,\n    desiredWeight: desiredWeight,\n    birthday: formattedDate,\n    blood: blood || 1,\n    sex: sex || 'male',\n    levelActivity: levelActivity || '1',\n  };\n\n  const validationSchema = Yup.object({\n    name: Yup.string().required('Name is required'),\n    height: Yup.number()\n      .positive('Height must be positive')\n      .required('Height is required'),\n    currentWeight: Yup.number()\n      .positive('Weight must be positive')\n      .required('Current weight is required'),\n    desiredWeight: Yup.number()\n      .positive('Weight must be positive')\n      .required('Desired weight is required'),\n    birthday: Yup.date().required('Birthday is required'),\n    blood: Yup.number(),\n  });\n\n  return (\n    <Formik\n      initialValues={initialValues}\n      validationSchema={validationSchema}\n      onSubmit={handleSubmit}\n    >\n      {formik => (\n        <Form>\n          <div className={css.formContainer}>\n            <div className={css.wrInput}>\n          \n              <input\n                name=\"name\"\n                type=\"text\"\n                className={css.input}\n                defaultValue={name}\n                readOnly\n                disabled\n              />  \n              <label className={css.label} htmlFor=\"name\">Name</label>\n            </div>\n            <div className={css.wrInput}>\n           \n              <input\n                type=\"text\"\n                name=\"email\"\n                defaultValue={email}\n                className={css.input}\n                readOnly\n                disabled\n              /> \n              <label htmlFor=\"email\" className={css.label} >Email</label>\n            </div>\n          </div>\n<div className={css.wrapperFields}>\n          <div className={css.wrapperInputField}>\n            <div className={css.wrapper}>\n              <div className={css.wrappInput}>\n                <Field\n                  type=\"number\"\n                  name=\"height\"\n                  id=\"height\"\n                  placeholder=\"\"\n                  className={css.inputField}\n                />\n                <label htmlFor=\"height\" className={css.label} >Height</label>\n              </div>\n            </div>\n            <div className={css.wrappInput}>\n              <Field\n                type=\"number\"\n                name=\"currentWeight\"\n                id=\"currentWeight\"\n                placeholder=\"\"\n                className={css.inputField}\n              />\n              <label htmlFor=\"currentWeight\"className={css.label} >Current Weight</label>\n            </div>\n          </div>\n\n          <div className={css.wrapperInputField}>\n            <div className={css.wrappInput}>\n              <Field\n                type=\"number\"\n                name=\"desiredWeight\"\n                id=\"desiredWeight\"\n                placeholder=\"\"\n                className={css.inputField}\n              />\n              <label htmlFor=\"desiredWeight\" className={css.label} >Desired Weight</label>\n            </div>\n            <div className={css.wrappInput}>\n              <input\n                type=\"date\"\n                name=\"birthday\"\n                id=\"birthday\"\n                value={formik.values.birthday}\n                onChange={formik.handleChange}\n                className={css.inputField}\n              />\n              <label htmlFor=\"birthday\" className={css.label} >Date of birthday</label>\n            </div>\n          </div>\n          </div>\n\n          <div className={css.wrapperRadio}>\n            <div  className={css.forRadio}>\n              <div className={css.forRadio}>\n                {bloodOptions.map(option => (\n                  <RadioButton\n                    key={option.id}\n                    id={option.id}\n                    name=\"blood\"\n                    value={option.value}\n                    checked={formik.values.blood === option.value}\n                    label={option.label}\n                    onChange={() => formik.setFieldValue('blood', option.value)}\n                  />\n                ))}\n              </div>\n\n              <div style={{ display: 'flex' }}>\n                {sexOptions.map(option => (\n                  <RadioButton\n                    key={option.id}\n                    id={option.id}\n                    name=\"sex\"\n                    value={option.value}\n                    checked={formik.values.sex === option.value}\n                    label={option.label}\n                    onChange={() => formik.setFieldValue('sex', option.value)}\n                  />\n                ))}\n              </div>\n            </div>\n\n            <div>\n              {levelOptions.map(option => (\n                <RadioButton\n                  className={css.wrapperLevel}\n                  key={option.id}\n                  id={option.id}\n                  name=\"levelActivity\"\n                  value={option.value}\n                  checked={formik.values.levelActivity === option.value}\n                  label={option.label}\n                  onChange={() =>\n                    formik.setFieldValue('levelActivity', option.value)\n                  }\n                />\n              ))}\n            </div>\n          </div>\n\n          <button type=\"submit\" className={css.button}>\n            Save\n          </button>\n        </Form>\n      )}\n    </Formik>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"ProfilePage_container__HAlWm\",\"wrapper\":\"ProfilePage_wrapper__avBB+\"};","// extracted by mini-css-extract-plugin\nexport default {\"bigWrapper\":\"Exclamation_bigWrapper__x-SUb\",\"wrapper\":\"Exclamation_wrapper__VkFD5\",\"wrapperExcl\":\"Exclamation_wrapperExcl__WgEcT\",\"text\":\"Exclamation_text__QEOx2\"};","import css from './Exclamation.module.css'\nimport sprite from '../../img/sprite/symbol-defs.svg'\n\nexport const ExclamationMark = () => {\n    return (\n      <div className={css.bigWrapper}>\n        <div className={css.wrapper}>\n          <div className={css.wrapperExcl}>\n            <svg width=\"24\" height=\"24\">\n              <use href={`${sprite}#icon-warning`}></use>\n            </svg>\n          </div>\n          <p className={css.text}>\n            We understand that each individual is unique, so the entire approach\n            to diet is relative and tailored to your unique body and goals.\n          </p>\n        </div>\n      </div>\n    );\n  };\n  ","import TitlePage from 'components/TitlePage/TitlePage';\nimport { Daily } from 'components/daily/Daily';\nimport { UserProfile } from 'components/userCard/UserCard';\nimport { UserForm } from 'components/userForm/UserForm';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { LogOutBtn } from 'btn/logOutBtn/LogOutBtn';\n// import { selectIsUserLogin } from '../redux/auth/auth-selectors';\nimport { logout } from '../../servises/api/auth';\n\nimport {selectUserToken} from '../../redux/UserPageCntrls/selectors';\n\nimport css from './ProfilePage.module.css'\n\nimport { ExclamationMark } from 'components/exclamation/Exclamation';\n\nexport default function Profile() {\n  const dispatch = useDispatch();\n  const state = useSelector(state => state.auth.user);\n  const userToken = useSelector(selectUserToken);\n  // console.log(userToken, \"userToken\")\n  // console.log(state, \"state in UP\")\n\n  // import { useDispatch, useSelector } from 'react-redux';\n  // import {selectIsUserLogin} from /*redux/auth/auth-selectors*/\n\n  // const isLogin = useSelector(selectIsUserLogin);\n  const onLogout = () => {\n    dispatch(logout());\n  };\n\n  //   useEffect(() => {\n\n  //     const fetchData = async () => {\n  //       try {\n  //         await dispatch(getCurrentUserDataTh(userToken));\n  //     //    console.log(currentUserData, 'currentUserData');\n  //         // Обновляем состояние после получения данных\n  //         // handleProfileUpdate(currentUserData);\n  //       } catch (error) {\n  //         console.error('Ошибка при получении данных пользователя:', error);\n  //         // Добавьте обработку ошибки, например, отображение сообщения об ошибке или перенаправление на страницу входа\n  //       }\n  //     };\n\n  //     fetchData(userToken);\n\n  // },[dispatch, userToken]);\n\n  // Показывать заглушку или другой контент, если данных нет\n  if (!state) {\n    return <div>Loading...</div>;\n  }\n\n  return (\n    <div className={css.container}>\n      <TitlePage children={'Profile Settings'} />\n      <UserProfile\n        name={state?.name}\n        avatar={state?.avatarURL}\n        userToken={userToken}\n      />\n      <div className={css.wrapper}>\n        <Daily\n          color=\"#E6533C\"\n          iconId={'icon-fork-filled'}\n          text={'Daily calorie intake'}\n          value={state?.bmr}\n        />\n        <Daily\n          color=\"#E6533C\"\n          iconId={'icon-fork-filled'}\n          text={'Daily physical activity'}\n          value={'110 min'}\n        />\n      </div>\n      <ExclamationMark />\n      <LogOutBtn onLogout={onLogout} />\n      <UserForm\n        userToken={userToken}\n        name={state.name}\n        height={state.height}\n        currentWeight={state.currentWeight}\n        desiredWeight={state.desiredWeight}\n        birthday={state.birthday}\n        blood={state.blood}\n        sex={state.sex}\n        levelActivity={state.levelActivity}\n        email={state.email}\n      />\n    </div>\n  );\n}\n","/**\n * @module constants\n * @summary Useful constants\n * @description\n * Collection of useful date constants.\n *\n * The constants could be imported from `date-fns/constants`:\n *\n * ```ts\n * import { maxTime, minTime } from \"./constants/date-fns/constants\";\n *\n * function isAllowedTime(time) {\n *   return time <= maxTime && time >= minTime;\n * }\n * ```\n */\n\n/**\n * @constant\n * @name daysInWeek\n * @summary Days in 1 week.\n */\nexport const daysInWeek = 7;\n\n/**\n * @constant\n * @name daysInYear\n * @summary Days in 1 year.\n *\n * @description\n * How many days in a year.\n *\n * One years equals 365.2425 days according to the formula:\n *\n * > Leap year occures every 4 years, except for years that are divisable by 100 and not divisable by 400.\n * > 1 mean year = (365+1/4-1/100+1/400) days = 365.2425 days\n */\nexport const daysInYear = 365.2425;\n\n/**\n * @constant\n * @name maxTime\n * @summary Maximum allowed time.\n *\n * @example\n * import { maxTime } from \"./constants/date-fns/constants\";\n *\n * const isValid = 8640000000000001 <= maxTime;\n * //=> false\n *\n * new Date(8640000000000001);\n * //=> Invalid Date\n */\nexport const maxTime = Math.pow(10, 8) * 24 * 60 * 60 * 1000;\n\n/**\n * @constant\n * @name minTime\n * @summary Minimum allowed time.\n *\n * @example\n * import { minTime } from \"./constants/date-fns/constants\";\n *\n * const isValid = -8640000000000001 >= minTime;\n * //=> false\n *\n * new Date(-8640000000000001)\n * //=> Invalid Date\n */\nexport const minTime = -maxTime;\n\n/**\n * @constant\n * @name millisecondsInWeek\n * @summary Milliseconds in 1 week.\n */\nexport const millisecondsInWeek = 604800000;\n\n/**\n * @constant\n * @name millisecondsInDay\n * @summary Milliseconds in 1 day.\n */\nexport const millisecondsInDay = 86400000;\n\n/**\n * @constant\n * @name millisecondsInMinute\n * @summary Milliseconds in 1 minute\n */\nexport const millisecondsInMinute = 60000;\n\n/**\n * @constant\n * @name millisecondsInHour\n * @summary Milliseconds in 1 hour\n */\nexport const millisecondsInHour = 3600000;\n\n/**\n * @constant\n * @name millisecondsInSecond\n * @summary Milliseconds in 1 second\n */\nexport const millisecondsInSecond = 1000;\n\n/**\n * @constant\n * @name minutesInYear\n * @summary Minutes in 1 year.\n */\nexport const minutesInYear = 525600;\n\n/**\n * @constant\n * @name minutesInMonth\n * @summary Minutes in 1 month.\n */\nexport const minutesInMonth = 43200;\n\n/**\n * @constant\n * @name minutesInDay\n * @summary Minutes in 1 day.\n */\nexport const minutesInDay = 1440;\n\n/**\n * @constant\n * @name minutesInHour\n * @summary Minutes in 1 hour.\n */\nexport const minutesInHour = 60;\n\n/**\n * @constant\n * @name monthsInQuarter\n * @summary Months in 1 quarter.\n */\nexport const monthsInQuarter = 3;\n\n/**\n * @constant\n * @name monthsInYear\n * @summary Months in 1 year.\n */\nexport const monthsInYear = 12;\n\n/**\n * @constant\n * @name quartersInYear\n * @summary Quarters in 1 year\n */\nexport const quartersInYear = 4;\n\n/**\n * @constant\n * @name secondsInHour\n * @summary Seconds in 1 hour.\n */\nexport const secondsInHour = 3600;\n\n/**\n * @constant\n * @name secondsInMinute\n * @summary Seconds in 1 minute.\n */\nexport const secondsInMinute = 60;\n\n/**\n * @constant\n * @name secondsInDay\n * @summary Seconds in 1 day.\n */\nexport const secondsInDay = secondsInHour * 24;\n\n/**\n * @constant\n * @name secondsInWeek\n * @summary Seconds in 1 week.\n */\nexport const secondsInWeek = secondsInDay * 7;\n\n/**\n * @constant\n * @name secondsInYear\n * @summary Seconds in 1 year.\n */\nexport const secondsInYear = secondsInDay * daysInYear;\n\n/**\n * @constant\n * @name secondsInMonth\n * @summary Seconds in 1 month\n */\nexport const secondsInMonth = secondsInYear / 12;\n\n/**\n * @constant\n * @name secondsInQuarter\n * @summary Seconds in 1 quarter.\n */\nexport const secondsInQuarter = secondsInMonth * 3;\n"],"names":["_ref","children","_jsx","className","css","Daily","color","iconId","text","value","_jsxs","style","backgroundColor","href","concat","sprite","selectUsersAvatar","state","auth","user","avatarURL","selectUserToken","token","UserProfile","name","avatar","userToken","dispatch","useDispatch","userAvatar","useSelector","_useState","useState","_useState2","_slicedToArray","setAvatarURL","useEffect","avatarUser","src","width","alt","avatarStandart","fill","height","handleAvatarChange","_ref2","_asyncToGenerator","_regeneratorRuntime","_callee","event","blob","objectURL","_context","prev","next","target","files","Blob","URL","createObjectURL","updateProfileAvatarTh","toast","duration","t0","console","error","stop","_x","apply","arguments","id","type","display","onChange","htmlFor","viewBox","xlinkHref","parseISO","argument","options","_options$additionalDi","date","additionalDigits","dateStrings","dateString","timeString","array","split","patterns","dateTimeDelimiter","length","test","timeZoneDelimiter","substr","timezone","exec","time","replace","splitDateString","parseYearResult","regex","RegExp","captures","match","year","NaN","restDateString","parseInt","century","slice","parseYear","Date","dateRegex","isWeekDate","dayOfYear","parseDateUnit","month","day","week","dayOfWeek","_year","validateWeekDate","isoWeekYear","setUTCFullYear","fourthOfJanuaryDay","getUTCDay","diff","setUTCDate","getUTCDate","dayOfISOWeekYear","daysInMonths","isLeapYearIndex","validateDate","validateDayOfYearDate","Math","max","parseDate","isNaN","getTime","offset","timestamp","timeRegex","hours","parseTimeUnit","minutes","seconds","validateTime","millisecondsInHour","millisecondsInMinute","parseTime","dirtyDate","result","setFullYear","getUTCFullYear","getUTCMonth","setHours","getUTCHours","getUTCMinutes","getUTCSeconds","getUTCMilliseconds","timezoneString","timezoneRegex","sign","_hours","validateTimezone","parseTimezone","parseFloat","RadioButton","checked","label","UserForm","currentWeight","desiredWeight","birthday","blood","sex","levelActivity","email","bloodOptions","sexOptions","levelOptions","handleSubmit","values","newParams","_objectSpread","updateProfileParamsTh","formattedDate","initialValues","validationSchema","Yup","required","positive","Formik","onSubmit","formik","Form","defaultValue","readOnly","disabled","Field","placeholder","handleChange","map","option","setFieldValue","ExclamationMark","Profile","TitlePage","bmr","LogOutBtn","onLogout","logout","pow","millisecondsInWeek","millisecondsInDay"],"sourceRoot":""}