{"version":3,"file":"static/js/754.5b044d89.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/TitlePage/title-page.module.css?6643","components/TitlePage/TitlePage.jsx","function/formatData.js","webpack://react-homework-template/./src/pages/Diary.module.css?de53","webpack://react-homework-template/./src/components/daySwitch/DaySwitch.module.css?b893","components/daySwitch/DaySwitch.js","webpack://react-homework-template/./src/components/dayDashboard/DayDashboard.module.css?bc48","webpack://react-homework-template/./src/components/dayDashboard/StatisticsItem/StatisticsItem.module.css?fac9","components/dayDashboard/Icon.jsx","components/dayDashboard/StatisticsItem/StatisticsItem.jsx","components/dayDashboard/DayDashboard.js","webpack://react-homework-template/./src/components/dayProducts/DayProducts.module.css?7af7","webpack://react-homework-template/./src/components/dayProducts/productsTable/ProductsTable.module.css?5674","components/dayProducts/productsTable/ProductsTable.js","webpack://react-homework-template/./src/components/emList/EmList.module.css?5cf5","components/emList/EmList.jsx","components/dayProducts/DayProducts.js","webpack://react-homework-template/./src/components/dayExercises/DayExercises.module.css?3b92","webpack://react-homework-template/./src/components/dayExercises/exercisesTable/ExercisesTable.module.css?d836","components/dayExercises/exercisesTable/ExercisesTable.js","components/dayExercises/DayExercises.js","pages/Diary.js","redux/diary/diarySelectors.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"titlePage\":\"title-page_titlePage__ZBar5\"};","import css from \"./title-page.module.css\";\n const TitlePage=({children})=>{\nreturn(\n    <h2 className={css.titlePage}>{children}</h2>\n)\n}\nexport default TitlePage;","const formatDate = (date) => {\n  const day = String(date.getDate()).padStart(2, '0');\n  const month = String(date.getMonth() + 1).padStart(2, '0');\n  const year = date.getFullYear();\n  return `${year}-${month}-${day}`;\n};\n\n\nexport default formatDate;\n  \n\n","// extracted by mini-css-extract-plugin\nexport default {\"diary\":\"Diary_diary__GRrvF\",\"calendarCont\":\"Diary_calendarCont__6mDiP\",\"calendar\":\"Diary_calendar__ESVay\",\"sectionCont\":\"Diary_sectionCont__+Xm4N\"};","// extracted by mini-css-extract-plugin\nexport default {\"body\":\"DaySwitch_body__Hyxv8\",\"dateButton\":\"DaySwitch_dateButton__QLX6x\",\"calendarIconBody\":\"DaySwitch_calendarIconBody__Uc--s\",\"calendarIconLine\":\"DaySwitch_calendarIconLine__-SHwu\",\"arrowsBody\":\"DaySwitch_arrowsBody__UmJMh\",\"arrowsLeft\":\"DaySwitch_arrowsLeft__qGPj2\",\"arrowsRight\":\"DaySwitch_arrowsRight__ml3WP\"};","import { forwardRef, useState } from \"react\";\nimport { format } from \"date-fns\";\nimport DatePicker from \"react-datepicker\";\nimport style from \"./DaySwitch.module.css\";\nimport \"react-datepicker/dist/react-datepicker-cssmodules.css\";\n\nconst OwnIconCalendar = () => {\n  return <div className={style.calendarIconBody}>\n    <div className={style.calendarIconLine}>\n      <span></span>\n      <span></span>\n    </div>\n  </div>\n}\n\nconst DaySwitch = () => {\n  const [selectedDate, setSelectedDate] = useState(Date.now());\n  // потрібна дата реєстрації користувача\n  const [dateRegistration] = useState(new Date(selectedDate).setDate(new Date(selectedDate).getDate() - 1))\n\n  const CustomInput = forwardRef(({value, onClick}, ref) => {\n    return (\n      <div className={style.body}>\n        <div className={style.dateButton} onClick={onClick} ref={ref}>\n          {format(selectedDate, \"dd/MM/yyyy\")}\n        </div>\n        <OwnIconCalendar/>\n        <div className={style.arrowsBody}>\n                    <span className={style.arrowsLeft}\n                          onClick={() => {\n                            if (selectedDate !== dateRegistration) {\n                              setSelectedDate(new Date(selectedDate).setDate(new Date(selectedDate).getDate() - 1))\n                            }\n                          }}>\n                    </span>\n          <span className={style.arrowsRight}\n                onClick={() =>\n                  setSelectedDate(new Date(selectedDate).setDate(new Date(selectedDate).getDate() + 1))}\n          ></span>\n        </div>\n      </div>\n    );\n  });\n\n  return (\n    <>\n      <DatePicker\n        selected={selectedDate}\n        onChange={(date) => {\n          setSelectedDate(date);\n        }}\n        customInput={<CustomInput/>}\n        dateFormat={\"dd MM yyyy\"}\n        calendarStartDay={1}\n        formatWeekDay={(day) => day.substr(0, 1)}\n        minDate={dateRegistration}\n      />\n    </>\n  );\n\n};\n\n\nexport default DaySwitch;\n","// extracted by mini-css-extract-plugin\nexport default {\"dayDashboard\":\"DayDashboard_dayDashboard__h7nLm\",\"statisticList\":\"DayDashboard_statisticList__qUE0W\",\"adviceWrap\":\"DayDashboard_adviceWrap__dIlAc\",\"adviceIconWrap\":\"DayDashboard_adviceIconWrap__a4Yha\",\"exclamationIcon\":\"DayDashboard_exclamationIcon__Mmf+x\",\"adviceText\":\"DayDashboard_adviceText__Z-qD3\"};","// extracted by mini-css-extract-plugin\nexport default {\"statisticItem\":\"StatisticsItem_statisticItem__OTLqf\",\"statisticItemPositive\":\"StatisticsItem_statisticItemPositive__RlkXR\",\"statisticItemNegative\":\"StatisticsItem_statisticItemNegative__BW-f4\",\"primaryStatisticItem\":\"StatisticsItem_primaryStatisticItem__eKkjh\",\"statisticTitleWrap\":\"StatisticsItem_statisticTitleWrap__OwBh-\",\"statisticTitle\":\"StatisticsItem_statisticTitle__ve4XR\",\"statisticPrimaryTitle\":\"StatisticsItem_statisticPrimaryTitle__9TBuz\",\"statisticIcon\":\"StatisticsItem_statisticIcon__04E7e\",\"statisticValue\":\"StatisticsItem_statisticValue__rm2N7\"};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport sprite  from '../../img/sprite/symbol-defs.svg';\n\nfunction Icon({ className, iconId }) {\n  return (\n    <svg className={className} width=\"98px\" height=\"35px\">\n      <use href={`${sprite}#${iconId}`}/>\n    </svg>\n  );\n}\n\nIcon.propTypes = {\n  className: PropTypes.string,\n  iconId: PropTypes.string.isRequired,\n  onClick: PropTypes.func,\n};\n\nexport default Icon;","import css from './StatisticsItem.module.css';\nimport Icon from '../Icon';\nimport PropTypes from 'prop-types';\n\nconst StatisticsItem = ({\n  statisticsName,\n  statisticsIcon,\n  statisticsValue,\n  statisticPrimary,\n  fulfilledNorm = '',\n}) => {\n  return (\n    <>\n      <li  className={`${css.statisticItem} ${\n          statisticPrimary && css.primaryStatisticItem\n        } ${\n          fulfilledNorm !== '' && fulfilledNorm === 'positive'\n            ? css.statisticItemPositive\n            : fulfilledNorm !== '' && fulfilledNorm === 'negative'\n            ? css.statisticItemNegative\n            : ''\n        }`}>\n        <div className={css.statisticTitleWrap}>\n          <Icon className={css.statisticIcon} iconId={statisticsIcon} />\n          <p\n            className={`${css.statisticTitle} ${\n              statisticPrimary && css.statisticPrimaryTitle\n            }`}\n          >\n            {statisticsName}\n          </p>\n        </div>\n        <div className={css.statisticValue}>{statisticsValue}</div>\n      </li>\n    </>\n  );\n};\n\n\n\n\n\nStatisticsItem.propTypes = {\n  statisticsName: PropTypes.string.isRequired,\n  statisticsIcon: PropTypes.string.isRequired,\n  statisticsValue: PropTypes.string.isRequired,\n  statisticPrimary: PropTypes.bool,\n  fulfilledNorm: PropTypes.string,\n};\n\nexport default StatisticsItem;","\nimport React from 'react';\nimport { useSelector } from 'react-redux';\nimport css from './DayDashboard.module.css';\nimport StatisticsItem from './StatisticsItem/StatisticsItem';\n\nimport { selectBurnedCaloriesByDate, selectConsumedCaloriesByDate, /*selectSportsRemaining */} from '../../redux/diary/diarySelectors';\n\n\n/*import {selectUserBmr } from '../';*/\n\n\n\n\n\n\n\nconst DayDashboard = () => {\n  const consumedCaloriesByDate = useSelector(selectConsumedCaloriesByDate);\n  const burnedCaloriesByDate = useSelector(selectBurnedCaloriesByDate);\n  /*const sportsRemaining = useSelector(selectSportsRemaining);\n  const {dailyCalorieIntake} = useSelector(selectUserBmr);*/\n \n \n  /*const caloriesRemaining = dailyCalorieIntake - consumedCaloriesByDate;*/\n  const dailyPhysicalActivity = 110;\n\n    /*const isCaloriesRemaining =\n    consumedCaloriesByDate < dailyCalorieIntake ? `positive` : `negative`;\n  const isSportsRemaining =\n    sportsRemaining > 0 ? `positive` : `negative`;*/\n\n  \n \n\n\n  return (\n    <div className={css.dayDashboard}>\n      <ul className={css.statisticList}>\n        <StatisticsItem\n          statisticsName={'Daily calorie intake'}\n          /*statisticsValue={`${dailyCalorieIntake}`}*/\n            statisticsIcon={'icon-fork-filled'}\n          statisticPrimary\n        />\n        <StatisticsItem\n          statisticsName={'Daily physical activity'}\n          statisticsValue={`${dailyPhysicalActivity} min`}\n            statisticsIcon={'icon-dumbbell-filled'}\n\n          statisticPrimary\n        />\n        <StatisticsItem\n          statisticsName={'Сalories consumed'}\n          statisticsValue={`${consumedCaloriesByDate}`}\n                statisticsIcon={'icon-apple-filled'}\n\n        />\n        <StatisticsItem\n          statisticsName={'Сalories burned'}\n          statisticsValue={`${burnedCaloriesByDate}`}\n                              statisticsIcon={'icon-burn-filled'}\n\n        />\n        <StatisticsItem\n          statisticsName={'Calories remaining'}\n         /* statisticsValue={`${caloriesRemaining}`}*/\n          statisticsIcon={'icon-bubble-filled'}\n                    /*fulfilledNorm={isCaloriesRemaining}*/\n\n\n        />\n        <StatisticsItem\n          statisticsName={'Sports remaining'}\n /*statisticsValue={\n            isSportsRemaining === 'positive'\n              ? `+${sportsRemaining} min`\n              : `${sportsRemaining} min`\n          }   */     statisticsIcon={'icon-running-filled'}\n\n        />\n      </ul>\n      <div className={css.adviceWrap}>\n        <div className={css.adviceIconWrap}>\n          {/* Іконка */}\n        </div>\n        <p className={css.adviceText}>\n          Record all your meals in the calorie diary every day. This will help you be aware of your nutrition and make informed choices.\n        </p>\n      </div>\n    </div>\n  );\n};\n\nexport default DayDashboard;","// extracted by mini-css-extract-plugin\nexport default {\"dayProducts\":\"DayProducts_dayProducts__LuDKI\",\"dayScroll\":\"DayProducts_dayScroll__46wb-\",\"diaryMen\":\"DayProducts_diaryMen__zlr12\",\"DiaryZag\":\"DayProducts_DiaryZag__rvcXM\",\"Butt\":\"DayProducts_Butt__NdM-k\",\"iconStrilka\":\"DayProducts_iconStrilka__Ilypr\",\"diaryNav\":\"DayProducts_diaryNav__Ds+gF\"};","// extracted by mini-css-extract-plugin\nexport default {\"diaryList\":\"ProductsTable_diaryList__NSGJb\",\"diaryItem\":\"ProductsTable_diaryItem__kGjga\",\"elem\":\"ProductsTable_elem__B1b3i\",\"elementCont\":\"ProductsTable_elementCont__-LBk0\",\"nameCateg\":\"ProductsTable_nameCateg__85BEo\",\"nameValue\":\"ProductsTable_nameValue__k2xLk\",\"element\":\"ProductsTable_element__MVHTf\",\"recommendCont\":\"ProductsTable_recommendCont__kGpWW\",\"productRecommend\":\"ProductsTable_productRecommend__W3G-g\",\"productNotRecommend\":\"ProductsTable_productNotRecommend__6WQMJ\",\"trashValue\":\"ProductsTable_trashValue__0fzSq\",\"iconTresh\":\"ProductsTable_iconTresh__beqBw\",\"nameTrash\":\"ProductsTable_nameTrash__jBGkn\",\"diaryMainItem\":\"ProductsTable_diaryMainItem__Yw3at\",\"nameCategory\":\"ProductsTable_nameCategory__vfjez\",\"table\":\"ProductsTable_table__rfz03\",\"elementWrap\":\"ProductsTable_elementWrap__nG27D\",\"bodyTable\":\"ProductsTable_bodyTable__FXofP\",\"diaryMainList\":\"ProductsTable_diaryMainList__CbbcO\"};","import css from './ProductsTable.module.css';\nimport PropTypes from 'prop-types';\nimport sprite from '../../../img/sprite/symbol-defs.svg';\nimport { useSelector } from \"react-redux\";\nimport { selectDiaryProducts } from '../../../redux/diary/diarySelectors';\n\n\nimport { deleteProductDiary } from '../../../redux/diary/diaryOperations';\n\n\n\nimport { useDispatch } from 'react-redux';\n\n\n\nconst ProductsTable = ( { products }) => {\n  /*const { products } = props;*/\n     const productsInDiary = useSelector(selectDiaryProducts);\nconsole.log(productsInDiary)\n    const testArr = useSelector(state => state.diary)\n  console.log(testArr)\n\n  \n  const dispatch = useDispatch();\n\n  const deleteProduct = (_id) => {\n    dispatch(deleteProductDiary(_id))\n  }\n\n    const capitalizedWord = (word) => {\n  return word.substring(0, 1).toUpperCase() + word.substring(1);\n};\n    return (\n       <ul className={css.diaryList}>\n      {products.map(\n        ({ _id, calories, grams, productId: { category, title } }) => {\n          return (\n            <li key={_id} className={css.diaryItem}>\n              <table className={css.table}>\n                <tbody className={css.bodyTable}>\n                  <tr className={css.elem}>\n                    <th className={css.nameCateg}>Title</th>\n                    <td className={css.nameValue}>{capitalizedWord(title)}</td>\n                  </tr>\n                  <tr className={css.elem}>\n                    <th className={css.nameCateg}>Category</th>\n                    <td className={css.nameValue}>\n                      {capitalizedWord(category)}\n                    </td>\n                  </tr>\n                </tbody>\n                <tbody className={css.elementCont}>\n                  <tr className={css.elem}>\n                    <th className={css.nameCateg}>Calories</th>\n                    <td className={css.nameValue}>{calories}</td>\n                  </tr>\n                  <tr className={css.elem}>\n                    <th className={css.nameCateg}>Weight</th>\n                    <td className={css.nameValue}>{grams}</td>\n                  </tr>\n                  <tr className={css.elem}>\n                    <th className={css.nameCateg}>Recommend</th>\n                    <td className={css.nameValue}>\n                      <div className={`${css.recommendCont}`}>\n                        {/*<span\n                          className={\n                            recommended\n                              ? `${css.productRecommend}`\n                              : `${css.productNotRecommend}`\n                          }\n                        ></span>\n                        {recommended ? 'Yes' : 'No'}*/}\n                      </div>\n                    </td>\n                  </tr>\n                  <tr className={css.elem}>\n                    <th className={`${css.nameCateg} ${css.nameTrash}`}>\n                      Trash\n                    </th>\n                    <td onClick={() => deleteProduct(_id)}> \n                      <svg className={css.iconTresh} width=\"98px\" height=\"35px\">\n                        <use href={`${sprite}#icon-trash`}></use>\n                      </svg>\n                    </td>\n                  </tr>\n                </tbody>\n              </table>\n            </li>\n          );\n        }\n      )}\n    </ul>\n  );\n\n}\n\nProductsTable.propTypes = {\n  products: PropTypes.array.isRequired,\n};\n\nexport default ProductsTable;\n","// extracted by mini-css-extract-plugin\nexport default {\"notTextCont\":\"EmList_notTextCont__27Lc8\",\"notText\":\"EmList_notText__EtxLu\"};","import css from \"./EmList.module.css\";\nimport PropTypes from 'prop-types';\n\nconst EmList = ({ itemName }) => {\n  return (\n    <div className={css.notFoundPlugTextWrap}>\n      <p>Not found {itemName}</p>\n    </div>\n  );\n};\n\n\nEmList.propTypes = {\n  listName: PropTypes.string.isRequired,\n};\n\nexport default EmList;","import css from './DayProducts.module.css';\nimport ProductsTable from './productsTable/ProductsTable';\nimport sprite from '../../img/sprite/symbol-defs.svg';\nimport { Link } from 'react-router-dom';\nimport { selectDiaryProducts } from '../../redux/diary/diarySelectors';\nimport { useSelector } from \"react-redux\";\n\nimport EmList from '../emList/EmList.jsx';\n\nconst DayProducts = () => {\n   const productsInDiary = useSelector(selectDiaryProducts);\n\n    return (\n        <div className = {css.dayProducts}>\n            <div className = {css.dayScroll}>\n                <div className={ css.diaryMen}> \n                    <h3 className = {css.DiaryZag}>Products</h3>\n                    <Link to=\"/products\" className={css.Butt}>\n            Add product\n            <svg className={css.iconStrilka} width=\"16px\" height=\"16px\">\n              <use href={`${sprite}#icon-next-arrow-gray`}></use>\n            </svg>\n          </Link>\n          </div>\n          {productsInDiary.length === 0 ? (\n          <EmList itemName={\"products\"} />\n        ) : (\n            <ProductsTable products={productsInDiary} />\n        )}\n            \n            </div>\n\n        </div> \n)\n}\n\nexport default DayProducts;\n\n\n","// extracted by mini-css-extract-plugin\nexport default {\"dayExecrcises\":\"DayExercises_dayExecrcises__m2SMA\",\"dayScroll\":\"DayExercises_dayScroll__gcQVi\",\"dayNav\":\"DayExercises_dayNav__+T+Wl\",\"dayZag\":\"DayExercises_dayZag__iZ6rT\",\"Butt\":\"DayExercises_Butt__3osLG\",\"iconStrilka\":\"DayExercises_iconStrilka__4vViE\"};","// extracted by mini-css-extract-plugin\nexport default {\"diaryMainItem\":\"ExercisesTable_diaryMainItem__+QUNa\",\"element\":\"ExercisesTable_element__ciKJY\",\"elementWrap\":\"ExercisesTable_elementWrap__7MPXh\",\"nameCategory\":\"ExercisesTable_nameCategory__5Wc+t\",\"nameValue\":\"ExercisesTable_nameValue__iih7Y\",\"nameTrash\":\"ExercisesTable_nameTrash__xfZsB\",\"table\":\"ExercisesTable_table__vvyBI\",\"bodyTable\":\"ExercisesTable_bodyTable__EcdoH\",\"diaryMainList\":\"ExercisesTable_diaryMainList__+2ofD\"};","import css from './ExercisesTable.module.css';\nimport PropTypes from 'prop-types';\nimport sprite from '../../../img/sprite/symbol-defs.svg';\nimport { useDispatch } from 'react-redux';\n\nimport { deleteExercisesDiary } from '../../../redux/diary/diaryOperations';\n\nconst ExercisesTable = ({exercises}) => {\n    /*const { exercises } = props;*/\n    \n  \n  const capitalizedWord = (word) => {\n  return word.substring(0, 1).toUpperCase() + word.substring(1);\n  };\n  \n  const dispatch = useDispatch();\n\n\n  const deleteExercise = (_id) => {\n    dispatch(deleteExercisesDiary(_id));\n  }\n\n\n    return (\n         <>\n      <ul className={css.diaryMainList}>\n        {exercises.map(\n          ({ _id, bodyPart, equipment, name, target, burnedCalories, time }) => (\n            <li key={_id} className={css.diaryMainItem}>\n              <table className={css.table}>\n                <tbody className={css.bodyTable}>\n                  <tr className={css.element}>\n                    <th className={css.nameCategory}>Body Part</th>\n                    <td className={css.nameValue}>\n                      {capitalizedWord(bodyPart)}\n                    </td>\n                  </tr>\n                  <tr className={css.element}>\n                    <th className={css.nameCategory}>Equipment</th>\n                    <td className={css.nameValue}>\n                      {capitalizedWord(equipment)}\n                    </td>\n                  </tr>\n                  <tr className={css.element}>\n                    <th className={css.nameCategory}>Name</th>\n                    <td className={css.nameValue}>{capitalizedWord(name)}</td>\n                  </tr>\n                </tbody>\n                <tbody className={css.elementWrap}>\n                  <tr className={css.element}>\n                    <th className={css.nameCategory}>Target</th>\n                    <td className={css.nameValue}>{capitalizedWord(target)}</td>\n                  </tr>\n                  <tr className={css.element}>\n                    <th className={css.nameCategory}>Burned Calories</th>\n                    <td className={css.nameValue}>{burnedCalories}</td>\n                  </tr>\n                  <tr className={css.element}>\n                    <th className={css.nameCategory}>Time</th>\n                    <td className={css.nameValue}>{time}</td>\n                  </tr>\n                  <tr className={css.element}>\n                    <th className={`${css.nameCategory} ${css.nameTrash}`}>\n                      Trash\n                    </th>\n                    <td onClick={() => deleteExercise(_id)}> \n                      <svg className={css.iconTresh} width=\"20px\" height=\"20px\">\n                        <use href={`${sprite}#icon-trash`}></use>\n                      </svg>\n                  </td>\n                  </tr>\n                </tbody>\n              </table>\n            </li>\n          )\n        )}\n      </ul>\n    </>\n    )\n    \n}\n\nExercisesTable.propTypes = {\n  exercises: PropTypes.array.isRequired,\n};\n\n\n\nexport default ExercisesTable;\n\n\n","import css from \"./DayExercises.module.css\";\nimport { Link } from 'react-router-dom';\n\nimport ExercisesTable from \"./exercisesTable/ExercisesTable\";\nimport EmList from '../emList/EmList.jsx';\n\nimport sprite from '../../img/sprite/symbol-defs.svg';\nimport { selectDiaryExercises } from '../../redux/diary/diarySelectors';\nimport { useSelector } from \"react-redux\";\n\n\n\nconst DayExercises = () => {\n   const exercisesInDiary = useSelector(selectDiaryExercises);\n\n\n  return (\n    <>\n      <div className= {css.dayExecrcises}>\n        <div className ={css.dayScroll}>\n          <div className={css.dayNav}>\n            <h3 className={css.dayZag}>Execrcises</h3>\n         <Link to=\"/exercises\" className={css.Butt}>\n            Add exercises\n            <svg className={css.iconStrilka} width=\"16px\" height=\"16px\">\n              <use href={`${sprite}#icon-next-arrow-gray`}></use>\n            </svg>\n          </Link>\n          </div>\n {exercisesInDiary.length === 0 ? (\n            <EmList itemName={\"exercises\"} />\n          ) : (\n            <ExercisesTable exercises={exercisesInDiary} />\n          )}        </div>\n      </div>\n    </>\n  );\n};\n\nexport default DayExercises;\n\n","import css from './Diary.module.css';\n\nimport TitlePage from '../components/TitlePage/TitlePage';\nimport DaySwitch from '../components/daySwitch/DaySwitch';\nimport DayDashboard from '../components/dayDashboard/DayDashboard';\nimport DayProducts from '../components/dayProducts/DayProducts';\nimport DayExercises from '../components/dayExercises/DayExercises';\n\nimport { fetchAllDiary } from \"../redux/diary/diaryOperations\";\n\n\nimport { useDispatch } from \"react-redux\";\nimport { useEffect, useState } from \"react\";\n\nimport formatDate from '../function/formatData';\n\nexport default function Diary() {\n\n  const dispatch = useDispatch();\n  \n    const [selectedDate, setSelectedDate] = useState(new Date());\n\n/*Обробка вибраної дати */\n   const handleDate = async (date) => {\n    const formatedDate = formatDate(date);\n    await setSelectedDate(formatedDate);\n  };\n\n    useEffect(() => {\n        dispatch(fetchAllDiary(\"2024-01-15\"));\n  }, [selectedDate, dispatch]);\n\n\n  \n\n    return (\n        <div className ={css.diary}>\n            <div className={css.calendarCont}>\n                    <TitlePage children = \"Diary\" />\n\n                <div className ={css.calendar}>\n                    <DaySwitch handleDate={handleDate}/>\n                </div>\n            </div>\n            <div className ={css.sectionCont}>\n                <DayDashboard />\n                <div>\n                    <DayProducts />\n                    <DayExercises />\n                </div>\n            </div>\n\n        </div>\n    )\n}\n","export const selectDiaryProducts = state => state.diary.productsInDiary;\nexport const selectDiaryExercises = state => state.diary.exercisesInDiary;\n\nexport const selectBurnedCaloriesByDate = state => state.diary.burnedCaloriesByDate;\nexport const selectConsumedCaloriesByDate = state => state.diary.consumedCaloriesByDate;\nexport const selectSportsRemaining = state => state.diary.sportsRemaining;\n\n\nexport const selectDiaryIsLoading = state => state.diary.IsLoading;\nexport const selectDiaryError = state => state.diary.error;\n\n"],"names":["_ref","children","_jsx","className","css","date","day","String","getDate","padStart","month","getMonth","year","getFullYear","concat","OwnIconCalendar","style","_jsxs","_useState","useState","Date","now","_useState2","_slicedToArray","selectedDate","setSelectedDate","_useState3","setDate","dateRegistration","CustomInput","forwardRef","ref","value","onClick","format","_Fragment","DatePicker","selected","onChange","customInput","dateFormat","calendarStartDay","formatWeekDay","substr","minDate","iconId","width","height","href","sprite","statisticsName","statisticsIcon","statisticsValue","statisticPrimary","_ref$fulfilledNorm","fulfilledNorm","Icon","consumedCaloriesByDate","useSelector","selectConsumedCaloriesByDate","burnedCaloriesByDate","selectBurnedCaloriesByDate","StatisticsItem","products","productsInDiary","selectDiaryProducts","console","log","testArr","state","diary","dispatch","useDispatch","capitalizedWord","word","substring","toUpperCase","map","_ref2","_id","calories","grams","_ref2$productId","productId","category","title","deleteProductDiary","deleteProduct","itemName","Link","to","length","EmList","ProductsTable","exercises","bodyPart","equipment","name","target","burnedCalories","time","deleteExercisesDiary","deleteExercise","exercisesInDiary","selectDiaryExercises","ExercisesTable","Diary","handleDate","_asyncToGenerator","_regeneratorRuntime","_callee","formatedDate","_context","prev","next","formatDate","stop","_x","apply","arguments","useEffect","fetchAllDiary","TitlePage","DaySwitch","DayDashboard","DayProducts","DayExercises","selectDiaryError","error"],"sourceRoot":""}