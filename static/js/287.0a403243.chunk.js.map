{"version":3,"file":"static/js/287.0a403243.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/TitlePage/title-page.module.css?6643","components/TitlePage/TitlePage.jsx","webpack://react-homework-template/./src/pages/ProductsPage/products.module.css?11cc","webpack://react-homework-template/./src/components/productsFilters/ProductsFilters.module.css?7ae1","redux/products/productsSelectors.js","components/productsFilters/ProductsFilters.jsx","webpack://react-homework-template/./src/components/productsList/ProductsList.module.css?b938","webpack://react-homework-template/./src/components/productsList/productsItem/ProductsItem.module.css?ece2","../node_modules/src/observe.ts","../node_modules/src/InView.tsx","components/productsList/productsItem/ProductsItem.jsx","../node_modules/src/useInView.tsx","components/productsList/ProductsList.jsx","webpack://react-homework-template/./src/components/productsModal/productsModal.module.css?e115","components/productsModal/ProductsModal.jsx","pages/ProductsPage/ProductsPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"titlePage\":\"title-page_titlePage__ZBar5\"};","import css from \"./title-page.module.css\";\n const TitlePage=({children})=>{\nreturn(\n    <h2 className={css.titlePage}>{children}</h2>\n)\n}\nexport default TitlePage;","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"products_container__k8-Qx\",\"wrapper\":\"products_wrapper__dIgK4\",\"productsPage\":\"products_productsPage__NqW3z\"};","// extracted by mini-css-extract-plugin\nexport default {\"filters\":\"ProductsFilters_filters__z4dz4\",\"text\":\"ProductsFilters_text__ZAjtR\",\"search\":\"ProductsFilters_search__woo7r\",\"input\":\"ProductsFilters_input__fjAQm\",\"svgSearchClose\":\"ProductsFilters_svgSearchClose__1z2l4\",\"svgSearch\":\"ProductsFilters_svgSearch__1owZG\",\"arrowCat\":\"ProductsFilters_arrowCat__4HYoZ\",\"arrowRec\":\"ProductsFilters_arrowRec__C3G7R\",\"categories\":\"ProductsFilters_categories__S10h+\",\"filterListWrapper\":\"ProductsFilters_filterListWrapper__KZ0fq\",\"filterList\":\"ProductsFilters_filterList__WzNBS\",\"recommended\":\"ProductsFilters_recommended__ckk4J\",\"recommendedList\":\"ProductsFilters_recommendedList__sflg6\",\"filterLabel\":\"ProductsFilters_filterLabel__hiLwC\",\"filterItem\":\"ProductsFilters_filterItem__kbeJy\"};","export const selectProducts = state => state.products.products.items;\n// export const selectIsLoading = state => state.products.isLoading;\nexport const selectError = state => state.products.products.error;\nexport const selectFilter = state => state.products.filter;\n","import css from './ProductsFilters.module.css';\nimport svg from '../../img/sprite/symbol-defs.svg';\nimport { useEffect, useState } from 'react';\nimport {\n  fetchCategories,\n  fetchProducts,\n} from '../../redux/products/productsOperations';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectFilter } from '../../redux/products/productsSelectors';\nimport { interFilter } from '../../redux/products/prFiltersSlice';\n// import { useDebounce } from 'use-debounce';\n\nconst initOpen = { category: false, allowed: false };\n\nexport const ProductsFilters = () => {\n  const dispatch = useDispatch();\n  const [categories, setCategories] = useState(null);\n  const [query, setQuery] = useState('');\n  const [isOpen, setOpen] = useState(initOpen);\n  const filters = useSelector(selectFilter);\n  console.log(filters);\n  const handleOpen = e => {\n    const type = e.currentTarget.dataset.type;\n    setOpen(prev => ({ ...initOpen, [type]: !prev[type] }));\n  };\n  const handlePick = e => {\n    if (e.target.nodeName !== 'LI') return;\n    const type = e.currentTarget.dataset.type;\n    let value;\n    if (e.target.textContent === 'Recommended') {\n      value = 'yes';\n    } else if (e.target.textContent === 'Not recommended') {\n      value = 'no';\n    } else {\n      value = e.target.textContent;\n    }\n\n    const addFilter = { ...filters, [type]: value };\n    dispatch(interFilter(addFilter));\n    dispatch(fetchProducts(addFilter));\n    setOpen(initOpen);\n  };\n  const handleQuery = e => {\n    console.log(e.target.value);\n    setQuery(e.target.value);\n    const addInput = { ...filters, searchQuery: e.target.value };\n    dispatch(interFilter(addInput));\n    dispatch(fetchProducts(addInput));\n  };\n  const resetQuery = () => {\n    setQuery('');\n  };\n\n  useEffect(() => {\n    const getCategories = async () => {\n      const result = await fetchCategories();\n      setCategories(result);\n    };\n    getCategories();\n  }, []);\n  return (\n    <div className={css.filters}>\n      <p className={css.text}>Filters</p>\n      <div className={css.search}>\n        <svg className={css.svgSearch}>\n          <use href={`${svg}#icon-search`}></use>\n        </svg>\n        <input\n          className={css.input}\n          type=\"text\"\n          placeholder=\"Search\"\n          id=\"productsSearch\"\n          onChange={handleQuery}\n          value={query}\n        />\n        <svg className={css.svgSearchClose} onClick={resetQuery}>\n          <use href={`${svg}#icon-close-in-search`}></use>\n        </svg>\n      </div>\n      <div className={css.categories}>\n        <p\n          className={css.filterLabel}\n          onClick={handleOpen}\n          data-type=\"category\"\n        >\n          {filters.category === '' ? 'Categories' : filters.category}\n        </p>\n        <svg\n          className={`${css.svgSearch} ${isOpen.category ? css.arrowCat : ''}`}\n        >\n          <use href={`${svg}#icon-arrow-down`}></use>\n        </svg>\n        {isOpen.category && (\n          <div className={css.filterListWrapper}>\n            <ul\n              className={css.filterList}\n              onClick={handlePick}\n              data-type=\"category\"\n            >\n              {categories.map((item, index) => {\n                return (\n                  <li className={css.filterItem} key={index}>\n                    {item}\n                  </li>\n                );\n              })}\n            </ul>\n          </div>\n        )}\n      </div>\n      <div className={css.recommended}>\n        <p className={css.filterLabel} onClick={handleOpen} data-type=\"allowed\">\n          {filters.allowed === '' ? 'All' : filters.allowed}\n        </p>\n        <svg\n          className={`${css.svgSearch} ${isOpen.allowed ? css.arrowRec : ''}`}\n        >\n          <use href={`${svg}#icon-arrow-down`}></use>\n        </svg>\n        {isOpen.allowed && (\n          <ul\n            className={css.recommendedList}\n            onClick={handlePick}\n            data-type=\"allowed\"\n          >\n            <li className={css.filterItem}>All</li>\n            <li className={css.filterItem}>Recommended</li>\n            <li className={css.filterItem}>Not recommended</li>\n          </ul>\n        )}\n      </div>\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"productsList\":\"ProductsList_productsList__3HQgi\"};","// extracted by mini-css-extract-plugin\nexport default {\"card\":\"ProductsItem_card__gjyRG\",\"upperContent\":\"ProductsItem_upperContent__l27qW\",\"dietWrapper\":\"ProductsItem_dietWrapper__Xyk2v\",\"diet\":\"ProductsItem_diet__W066o\",\"cardStatus\":\"ProductsItem_cardStatus__P-act\",\"statusCircle\":\"ProductsItem_statusCircle__hjnsp\",\"statusText\":\"ProductsItem_statusText__i1toM\",\"statusBtn\":\"ProductsItem_statusBtn__MrhqO\",\"svgBtn\":\"ProductsItem_svgBtn__KFoGl\",\"titleWrapper\":\"ProductsItem_titleWrapper__IFVpr\",\"title\":\"ProductsItem_title__1gcfl\",\"svgWrapper\":\"ProductsItem_svgWrapper__kCnB1\",\"lowerConten\":\"ProductsItem_lowerConten__M0k+d\",\"svgTitle\":\"ProductsItem_svgTitle__GGUz7\",\"cardInfo\":\"ProductsItem_cardInfo__7qxc7\",\"infoContent\":\"ProductsItem_infoContent__RQ2VM\",\"amount\":\"ProductsItem_amount__oBuGW\"};","import type { ObserverInstanceCallback } from './index';\n\nconst observerMap = new Map<\n  string,\n  {\n    id: string;\n    observer: IntersectionObserver;\n    elements: Map<Element, Array<ObserverInstanceCallback>>;\n  }\n>();\n\nconst RootIds: WeakMap<Element | Document, string> = new WeakMap();\nlet rootId = 0;\n\nlet unsupportedValue: boolean | undefined = undefined;\n\n/**\n * What should be the default behavior if the IntersectionObserver is unsupported?\n * Ideally the polyfill has been loaded, you can have the following happen:\n * - `undefined`: Throw an error\n * - `true` or `false`: Set the `inView` value to this regardless of intersection state\n * **/\nexport function defaultFallbackInView(inView: boolean | undefined) {\n  unsupportedValue = inView;\n}\n\n/**\n * Generate a unique ID for the root element\n * @param root\n */\nfunction getRootId(root: IntersectionObserverInit['root']) {\n  if (!root) return '0';\n  if (RootIds.has(root)) return RootIds.get(root);\n  rootId += 1;\n  RootIds.set(root, rootId.toString());\n  return RootIds.get(root);\n}\n\n/**\n * Convert the options to a string Id, based on the values.\n * Ensures we can reuse the same observer when observing elements with the same options.\n * @param options\n */\nexport function optionsToId(options: IntersectionObserverInit) {\n  return Object.keys(options)\n    .sort()\n    .filter(\n      (key) => options[key as keyof IntersectionObserverInit] !== undefined,\n    )\n    .map((key) => {\n      return `${key}_${\n        key === 'root'\n          ? getRootId(options.root)\n          : options[key as keyof IntersectionObserverInit]\n      }`;\n    })\n    .toString();\n}\n\nfunction createObserver(options: IntersectionObserverInit) {\n  // Create a unique ID for this observer instance, based on the root, root margin and threshold.\n  let id = optionsToId(options);\n  let instance = observerMap.get(id);\n\n  if (!instance) {\n    // Create a map of elements this observer is going to observe. Each element has a list of callbacks that should be triggered, once it comes into view.\n    const elements = new Map<Element, Array<ObserverInstanceCallback>>();\n    let thresholds: number[] | readonly number[];\n\n    const observer = new IntersectionObserver((entries) => {\n      entries.forEach((entry) => {\n        // While it would be nice if you could just look at isIntersecting to determine if the component is inside the viewport, browsers can't agree on how to use it.\n        // -Firefox ignores `threshold` when considering `isIntersecting`, so it will never be false again if `threshold` is > 0\n        const inView =\n          entry.isIntersecting &&\n          thresholds.some((threshold) => entry.intersectionRatio >= threshold);\n\n        // @ts-ignore support IntersectionObserver v2\n        if (options.trackVisibility && typeof entry.isVisible === 'undefined') {\n          // The browser doesn't support Intersection Observer v2, falling back to v1 behavior.\n          // @ts-ignore\n          entry.isVisible = inView;\n        }\n\n        elements.get(entry.target)?.forEach((callback) => {\n          callback(inView, entry);\n        });\n      });\n    }, options);\n\n    // Ensure we have a valid thresholds array. If not, use the threshold from the options\n    thresholds =\n      observer.thresholds ||\n      (Array.isArray(options.threshold)\n        ? options.threshold\n        : [options.threshold || 0]);\n\n    instance = {\n      id,\n      observer,\n      elements,\n    };\n\n    observerMap.set(id, instance);\n  }\n\n  return instance;\n}\n\n/**\n * @param element - DOM Element to observe\n * @param callback - Callback function to trigger when intersection status changes\n * @param options - Intersection Observer options\n * @param fallbackInView - Fallback inView value.\n * @return Function - Cleanup function that should be triggered to unregister the observer\n */\nexport function observe(\n  element: Element,\n  callback: ObserverInstanceCallback,\n  options: IntersectionObserverInit = {},\n  fallbackInView = unsupportedValue,\n) {\n  if (\n    typeof window.IntersectionObserver === 'undefined' &&\n    fallbackInView !== undefined\n  ) {\n    const bounds = element.getBoundingClientRect();\n    callback(fallbackInView, {\n      isIntersecting: fallbackInView,\n      target: element,\n      intersectionRatio:\n        typeof options.threshold === 'number' ? options.threshold : 0,\n      time: 0,\n      boundingClientRect: bounds,\n      intersectionRect: bounds,\n      rootBounds: bounds,\n    });\n    return () => {\n      // Nothing to cleanup\n    };\n  }\n  // An observer with the same options can be reused, so lets use this fact\n  const { id, observer, elements } = createObserver(options);\n\n  // Register the callback listener for this element\n  let callbacks = elements.get(element) || [];\n  if (!elements.has(element)) {\n    elements.set(element, callbacks);\n  }\n\n  callbacks.push(callback);\n  observer.observe(element);\n\n  return function unobserve() {\n    // Remove the callback from the callback list\n    callbacks.splice(callbacks.indexOf(callback), 1);\n\n    if (callbacks.length === 0) {\n      // No more callback exists for element, so destroy it\n      elements.delete(element);\n      observer.unobserve(element);\n    }\n\n    if (elements.size === 0) {\n      // No more elements are being observer by this instance, so destroy it\n      observer.disconnect();\n      observerMap.delete(id);\n    }\n  };\n}\n","import * as React from 'react';\nimport type { IntersectionObserverProps, PlainChildrenProps } from './index';\nimport { observe } from './observe';\n\ntype State = {\n  inView: boolean;\n  entry?: IntersectionObserverEntry;\n};\n\nfunction isPlainChildren(\n  props: IntersectionObserverProps | PlainChildrenProps,\n): props is PlainChildrenProps {\n  return typeof props.children !== 'function';\n}\n\n/**\n ## Render props\n\n To use the `<InView>` component, you pass it a function. It will be called\n whenever the state changes, with the new value of `inView`. In addition to the\n `inView` prop, children also receive a `ref` that should be set on the\n containing DOM element. This is the element that the IntersectionObserver will\n monitor.\n\n If you need it, you can also access the\n [`IntersectionObserverEntry`](https://developer.mozilla.org/en-US/docs/Web/API/IntersectionObserverEntry)\n on `entry`, giving you access to all the details about the current intersection\n state.\n\n ```jsx\n import { InView } from 'react-intersection-observer';\n\n const Component = () => (\n <InView>\n {({ inView, ref, entry }) => (\n      <div ref={ref}>\n        <h2>{`Header inside viewport ${inView}.`}</h2>\n      </div>\n    )}\n </InView>\n );\n\n export default Component;\n ```\n\n ## Plain children\n\n You can pass any element to the `<InView />`, and it will handle creating the\n wrapping DOM element. Add a handler to the `onChange` method, and control the\n state in your own component. Any extra props you add to `<InView>` will be\n passed to the HTML element, allowing you set the `className`, `style`, etc.\n\n ```jsx\n import { InView } from 'react-intersection-observer';\n\n const Component = () => (\n <InView as=\"div\" onChange={(inView, entry) => console.log('Inview:', inView)}>\n <h2>Plain children are always rendered. Use onChange to monitor state.</h2>\n </InView>\n );\n\n export default Component;\n ```\n */\nexport class InView extends React.Component<\n  IntersectionObserverProps | PlainChildrenProps,\n  State\n> {\n  constructor(props: IntersectionObserverProps | PlainChildrenProps) {\n    super(props);\n    this.state = {\n      inView: !!props.initialInView,\n      entry: undefined,\n    };\n  }\n\n  componentDidMount() {\n    this.unobserve();\n    this.observeNode();\n  }\n\n  componentDidUpdate(prevProps: IntersectionObserverProps) {\n    // If a IntersectionObserver option changed, reinit the observer\n    if (\n      prevProps.rootMargin !== this.props.rootMargin ||\n      prevProps.root !== this.props.root ||\n      prevProps.threshold !== this.props.threshold ||\n      prevProps.skip !== this.props.skip ||\n      prevProps.trackVisibility !== this.props.trackVisibility ||\n      prevProps.delay !== this.props.delay\n    ) {\n      this.unobserve();\n      this.observeNode();\n    }\n  }\n\n  componentWillUnmount() {\n    this.unobserve();\n  }\n\n  node: Element | null = null;\n  _unobserveCb: (() => void) | null = null;\n\n  observeNode() {\n    if (!this.node || this.props.skip) return;\n    const {\n      threshold,\n      root,\n      rootMargin,\n      trackVisibility,\n      delay,\n      fallbackInView,\n    } = this.props;\n\n    this._unobserveCb = observe(\n      this.node,\n      this.handleChange,\n      {\n        threshold,\n        root,\n        rootMargin,\n        // @ts-ignore\n        trackVisibility,\n        // @ts-ignore\n        delay,\n      },\n      fallbackInView,\n    );\n  }\n\n  unobserve() {\n    if (this._unobserveCb) {\n      this._unobserveCb();\n      this._unobserveCb = null;\n    }\n  }\n\n  handleNode = (node?: Element | null) => {\n    if (this.node) {\n      // Clear the old observer, before we start observing a new element\n      this.unobserve();\n\n      if (!node && !this.props.triggerOnce && !this.props.skip) {\n        // Reset the state if we get a new node, and we aren't ignoring updates\n        this.setState({ inView: !!this.props.initialInView, entry: undefined });\n      }\n    }\n\n    this.node = node ? node : null;\n    this.observeNode();\n  };\n\n  handleChange = (inView: boolean, entry: IntersectionObserverEntry) => {\n    if (inView && this.props.triggerOnce) {\n      // If `triggerOnce` is true, we should stop observing the element.\n      this.unobserve();\n    }\n    if (!isPlainChildren(this.props)) {\n      // Store the current State, so we can pass it to the children in the next render update\n      // There's no reason to update the state for plain children, since it's not used in the rendering.\n      this.setState({ inView, entry });\n    }\n    if (this.props.onChange) {\n      // If the user is actively listening for onChange, always trigger it\n      this.props.onChange(inView, entry);\n    }\n  };\n\n  render() {\n    const { children } = this.props;\n    if (typeof children === 'function') {\n      const { inView, entry } = this.state;\n      return children({ inView, entry, ref: this.handleNode });\n    }\n\n    const {\n      as,\n      triggerOnce,\n      threshold,\n      root,\n      rootMargin,\n      onChange,\n      skip,\n      trackVisibility,\n      delay,\n      initialInView,\n      fallbackInView,\n      ...props\n    } = this.props as PlainChildrenProps;\n\n    return React.createElement(\n      as || 'div',\n      { ref: this.handleNode, ...props },\n      children,\n    );\n  }\n}\n","import css from './ProductsItem.module.css';\nimport svg from '../../../img/sprite/symbol-defs.svg';\nimport { useInView } from 'react-intersection-observer';\nexport const ProductsListItem = ({ data, openModal }) => {\n  const { calories, category, title, weight } = data;\n  const fixedTitle = title[0].toUpperCase() + title.slice(1).toLowerCase();\n  // console.log(groupBloodNotAllowed);\n  const { ref, inView } = useInView({\n    /* Optional options */\n    threshold: 0.5,\n    triggerOnce: true,\n  });\n  return (\n    <li className={css.card} ref={ref}>\n      {inView && (\n        <>\n          <div className={css.upperContent}>\n            <div className={css.dietWrapper}>\n              <p className={css.diet}>diet</p>\n            </div>\n            <div className={css.cardStatus}>\n              <svg className={css.statusCircle}>\n                <use href={`${svg}#icon-circle-green`}></use>\n              </svg>\n              <p className={css.statusText}>Recommended</p>\n              <button\n                type=\"button\"\n                className={css.statusBtn}\n                onClick={openModal}\n              >\n                Add\n                <svg className={css.svgBtn}>\n                  <use href={`${svg}#icon-next-arrow`}></use>\n                </svg>\n              </button>\n            </div>\n          </div>\n          <div className={css.lowerContent}>\n            <div className={css.titleWrapper}>\n              <div className={css.svgWrapper}>\n                <svg className={css.svgTitle}>\n                  <use href={`${svg}#icon-runningMan`}></use>\n                </svg>\n              </div>\n              <h3 className={css.title}>{fixedTitle}</h3>\n            </div>\n            <div className={css.cardInfo}>\n              <div className={css.infoContent}>\n                Calories: <span className={css.amount}>{calories}</span>\n              </div>\n              <div className={css.infoContent}>\n                Category: <span className={css.amount}>{category}</span>\n              </div>\n              <div className={css.infoContent}>\n                Weight: <span className={css.amount}>{weight}</span>\n              </div>\n            </div>\n          </div>\n        </>\n      )}\n    </li>\n  );\n};\n","import * as React from 'react';\nimport type { InViewHookResponse, IntersectionOptions } from './index';\nimport { observe } from './observe';\n\ntype State = {\n  inView: boolean;\n  entry?: IntersectionObserverEntry;\n};\n\n/**\n * React Hooks make it easy to monitor the `inView` state of your components. Call\n * the `useInView` hook with the (optional) [options](#options) you need. It will\n * return an array containing a `ref`, the `inView` status and the current\n * [`entry`](https://developer.mozilla.org/en-US/docs/Web/API/IntersectionObserverEntry).\n * Assign the `ref` to the DOM element you want to monitor, and the hook will\n * report the status.\n *\n * @example\n * ```jsx\n * import React from 'react';\n * import { useInView } from 'react-intersection-observer';\n *\n * const Component = () => {\n *   const { ref, inView, entry } = useInView({\n *       threshold: 0,\n *   });\n *\n *   return (\n *     <div ref={ref}>\n *       <h2>{`Header inside viewport ${inView}.`}</h2>\n *     </div>\n *   );\n * };\n * ```\n */\nexport function useInView({\n  threshold,\n  delay,\n  trackVisibility,\n  rootMargin,\n  root,\n  triggerOnce,\n  skip,\n  initialInView,\n  fallbackInView,\n  onChange,\n}: IntersectionOptions = {}): InViewHookResponse {\n  const [ref, setRef] = React.useState<Element | null>(null);\n  const callback = React.useRef<IntersectionOptions['onChange']>();\n  const [state, setState] = React.useState<State>({\n    inView: !!initialInView,\n    entry: undefined,\n  });\n\n  // Store the onChange callback in a `ref`, so we can access the latest instance\n  // inside the `useEffect`, but without triggering a rerender.\n  callback.current = onChange;\n\n  React.useEffect(\n    () => {\n      // Ensure we have node ref, and that we shouldn't skip observing\n      if (skip || !ref) return;\n\n      let unobserve: (() => void) | undefined;\n      unobserve = observe(\n        ref,\n        (inView, entry) => {\n          setState({\n            inView,\n            entry,\n          });\n          if (callback.current) callback.current(inView, entry);\n\n          if (entry.isIntersecting && triggerOnce && unobserve) {\n            // If it should only trigger once, unobserve the element after it's inView\n            unobserve();\n            unobserve = undefined;\n          }\n        },\n        {\n          root,\n          rootMargin,\n          threshold,\n          // @ts-ignore\n          trackVisibility,\n          // @ts-ignore\n          delay,\n        },\n        fallbackInView,\n      );\n\n      return () => {\n        if (unobserve) {\n          unobserve();\n        }\n      };\n    },\n    // We break the rule here, because we aren't including the actual `threshold` variable\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [\n      // If the threshold is an array, convert it to a string, so it won't change between renders.\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      Array.isArray(threshold) ? threshold.toString() : threshold,\n      ref,\n      root,\n      rootMargin,\n      triggerOnce,\n      skip,\n      trackVisibility,\n      fallbackInView,\n      delay,\n    ],\n  );\n\n  const entryTarget = state.entry?.target;\n  const previousEntryTarget = React.useRef<Element>();\n  if (\n    !ref &&\n    entryTarget &&\n    !triggerOnce &&\n    !skip &&\n    previousEntryTarget.current !== entryTarget\n  ) {\n    // If we don't have a node ref, then reset the state (unless the hook is set to only `triggerOnce` or `skip`)\n    // This ensures we correctly reflect the current state - If you aren't observing anything, then nothing is inView\n    previousEntryTarget.current = entryTarget;\n    setState({\n      inView: !!initialInView,\n      entry: undefined,\n    });\n  }\n\n  const result = [setRef, state.inView, state.entry] as InViewHookResponse;\n\n  // Support object destructuring, by adding the specific values.\n  result.ref = result[0];\n  result.inView = result[1];\n  result.entry = result[2];\n\n  return result;\n}\n","import { useDispatch, useSelector } from 'react-redux';\nimport css from './ProductsList.module.css';\nimport { ProductsListItem } from './productsItem/ProductsItem';\nimport { useEffect } from 'react';\nimport { fetchProducts } from '../../redux/products/productsOperations';\nimport {\n  selectProducts,\n  selectFilter,\n} from '../../redux/products/productsSelectors';\nexport const ProductsList = ({ openModal }) => {\n  const dispatch = useDispatch();\n  const data = useSelector(selectProducts);\n  const filter = useSelector(selectFilter);\n  console.log(filter);\n\n  useEffect(() => {\n    dispatch(fetchProducts());\n  }, [dispatch]);\n  return (\n    <ul className={css.productsList}>\n      {data &&\n        data.map(({ _id, ...card }) => {\n          return (\n            <ProductsListItem key={_id} data={card} openModal={openModal} />\n          );\n        })}\n    </ul>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"backdrop\":\"productsModal_backdrop__FIz48\",\"modal\":\"productsModal_modal__iUaw8\",\"modalCloseBtn\":\"productsModal_modalCloseBtn__rEEQj\",\"svgclose\":\"productsModal_svgclose__3rN-o\"};","import svg from '../../img/sprite/symbol-defs.svg';\nimport css from './productsModal.module.css';\nexport const ProductsModal = ({ isOpen, onClose }) => {\n  if (!isOpen) return null;\n  const handleEscapeKey = event => {\n    if (event.code === 'Escape') {\n      console.log('Escape');\n      onClose();\n      return document.removeEventListener('keydown', handleEscapeKey);\n    }\n  };\n  isOpen && document.addEventListener('keydown', handleEscapeKey);\n\n  const handleClose = e => {\n    if (\n      e.target.dataset.type === 'backdrop' ||\n      e.target.dataset.type === 'close-modal'\n    ) {\n      onClose();\n    }\n  };\n\n  return (\n    <div className={css.backdrop} onClick={handleClose} data-type=\"backdrop\">\n      <div className={css.modal}>\n        <button\n          className={css.modalCloseBtn}\n          type=\"button\"\n          onClick={handleClose}\n          data-type=\"close-modal\"\n        >\n          <svg className={css.svgclose}>\n            <use href={`${svg}#icon-close-modal`}></use>\n          </svg>\n        </button>\n        <p className={css.text}>modal is under construction</p>\n      </div>\n    </div>\n  );\n};\n","import css from './products.module.css';\nimport TitlePage from 'components/TitlePage/TitlePage';\nimport { ProductsFilters } from 'components/productsFilters/ProductsFilters';\nimport { ProductsList } from 'components/productsList/ProductsList';\nimport { ProductsModal } from 'components/productsModal/ProductsModal';\nimport { useState } from 'react';\nimport { Container } from '../../components/Container/Container';\n\nconst ProductsPage = () => {\n  const [open, setOpen] = useState(false);\n  const handleClose = e => {\n    setOpen(false);\n  };\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n  return (\n    <div className={css.productsPage}>\n      <Container>\n        <div className={css.wrapper}>\n          <TitlePage children=\"Products\" className={css.wrapper} />\n          <ProductsFilters />\n          <ProductsList openModal={handleOpen} />\n        </div>\n      </Container>\n      {/* <div className={css.container}></div> */}\n      <ProductsModal isOpen={open} onClose={handleClose} />\n    </div>\n  );\n};\nexport default ProductsPage;\n"],"names":["_ref","children","_jsx","className","css","selectProducts","state","products","items","selectFilter","filter","initOpen","category","allowed","ProductsFilters","dispatch","useDispatch","_useState","useState","_useState2","_slicedToArray","categories","setCategories","_useState3","_useState4","query","setQuery","_useState5","_useState6","isOpen","setOpen","filters","useSelector","console","log","handleOpen","e","type","currentTarget","dataset","prev","_objectSpread","_defineProperty","handlePick","target","nodeName","value","textContent","addFilter","interFilter","fetchProducts","useEffect","getCategories","_asyncToGenerator","_regeneratorRuntime","_callee","result","_context","next","fetchCategories","sent","stop","apply","arguments","_jsxs","href","concat","svg","placeholder","id","onChange","addInput","searchQuery","onClick","map","item","index","observerMap","Map","RootIds","WeakMap","rootId","unsupportedValue","optionsToId","options","Object","keys","sort","key","root","has","set","toString","get","createObserver","instance","thresholds","elements","observer","IntersectionObserver","entries","forEach","entry","inView","isIntersecting","some","threshold","intersectionRatio","trackVisibility","isVisible","callback","Array","isArray","observe","element","fallbackInView","window","bounds","getBoundingClientRect","time","boundingClientRect","intersectionRect","rootBounds","callbacks","push","splice","indexOf","length","delete","unobserve","size","disconnect","React","ProductsListItem","data","openModal","calories","title","weight","fixedTitle","toUpperCase","slice","toLowerCase","_useInView","delay","rootMargin","triggerOnce","skip","initialInView","React2","_React2$useState2","ref","setRef","_React2$useState4","setState","current","entryTarget","_a","previousEntryTarget","useInView","_Fragment","ProductsList","_ref2","_id","card","_objectWithoutProperties","_excluded","ProductsModal","onClose","document","addEventListener","handleEscapeKey","event","code","removeEventListener","handleClose","open","Container","TitlePage"],"sourceRoot":""}