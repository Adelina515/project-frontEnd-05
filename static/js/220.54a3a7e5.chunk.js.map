{"version":3,"file":"static/js/220.54a3a7e5.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/btn/AuthButton/auth-button.module.css?196a","btn/AuthButton/AuthButton.jsx","webpack://react-homework-template/./src/components/RemainderComponent/remainder-component.module.css?9e7d","components/RemainderComponent/RemainderComponent.jsx","webpack://react-homework-template/./src/components/TitlePage/title-page.module.css?6643","components/TitlePage/TitlePage.jsx","webpack://react-homework-template/./src/pages/SignUpPage/sign-up-page.module.css?7f5b","webpack://react-homework-template/./src/components/SignUpForm/sign-up-form.module.css?db87","components/SignUpForm/SignUpForm.jsx","pages/SignUpPage/SignUpPage.jsx","schemas/auth/auth-schemas.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"btn\":\"auth-button_btn__VaPm9\"};","import css from  \"./auth-button.module.css\";\n\nconst AuthButton = ({children})=>{\n    return(\n        <>\n        <button className={css.btn} type=\"submit\">{children}</button>\n        </>\n    )\n}\nexport default AuthButton;","// extracted by mini-css-extract-plugin\nexport default {\"textRemainder\":\"remainder-component_textRemainder__4IE66\"};","import css from \"./remainder-component.module.css\";\nconst RemainderComponent = ({children,path})=>{\n    return (\n        <p className={css.textRemainder}>{children}</p>\n       )\n}\nexport default RemainderComponent;","// extracted by mini-css-extract-plugin\nexport default {\"titlePage\":\"title-page_titlePage__ZBar5\"};","import css from \"./title-page.module.css\";\n const TitlePage=({children})=>{\nreturn(\n    <h2 className={css.titlePage}>{children}</h2>\n)\n}\nexport default TitlePage;","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"sign-up-page_container__4tEOG\",\"text\":\"sign-up-page_text__ofMSv\",\"link\":\"sign-up-page_link__GtB3D\"};","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"sign-up-form_form__tlpwI\",\"inputWrapper\":\"sign-up-form_inputWrapper__9t0t1\",\"input\":\"sign-up-form_input__3zlXk\",\"success\":\"sign-up-form_success__bD2U4\",\"error\":\"sign-up-form_error__ydkH9\",\"iconSuccess\":\"sign-up-form_iconSuccess__XDNXi\",\"iconError\":\"sign-up-form_iconError__-HBb4\",\"textError\":\"sign-up-form_textError__Qprym\",\"textSuccess\":\"sign-up-form_textSuccess__+ByMd\",\"messageWrapper\":\"sign-up-form_messageWrapper__p5cVi\",\"label\":\"sign-up-form_label__Q6-6w\"};","import css from './sign-up-form.module.css';\nimport { useDispatch } from 'react-redux';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport AuthButton from '../../btn/AuthButton/AuthButton';\nimport { signUpSchema } from '../../schemas/auth/auth-schemas';\nimport { register } from '../../redux/auth/auth-operations';\nimport sprite from '../../img/sprite/symbol-defs.svg';\nimport toast from 'react-hot-toast';\n\nconst SignUpForm = () => {\n  const dispatch = useDispatch();\n  const initialValues = {\n    name: '',\n    email: '',\n    password: '',\n  };\n\n  const handleSubmit = (values, { setSubmitting, resetForm, setError }) => {\n    try {\n      dispatch(register(values));\n      setTimeout(() => {\n        toast.success('Registration successful!', { position: 'top-right' });\n        setSubmitting(false);\n        resetForm();\n      }, 1000);\n    } catch (error) {\n      toast.error('Registration failed. Please, try again.', {\n        position: 'top-right',\n      });\n      setSubmitting(false);\n    }\n  };\n\n  return (\n    <>\n      <Formik\n        initialValues={initialValues}\n        onSubmit={handleSubmit}\n        validationSchema={signUpSchema}\n      >\n        {({ errors, touched }) => (\n          <Form className={css.form}>\n            <div className={css.inputWrapper}>\n              <Field\n                type=\"text\"\n                name=\"name\"\n                placeholder=\"Name\"\n                className={`${css.input} ${\n                  errors.name && touched.name ? css.error : ''\n                }\n                ${touched.name && !errors.nam ? css.success : ''}`}\n              />\n              <ErrorMessage\n                name=\"name\"\n                className={css.textError}\n                component=\"p\"\n              />\n\n              <div className={css.label}>\n                <Field\n                  type=\"email\"\n                  name=\"email\"\n                  placeholder=\"Email\"\n                  className={`${css.input} ${\n                    errors.name && touched.name ? css.error : ''\n                  }\n                  ${touched.name && !errors.nam ? css.success : ''}`}\n                />\n                {errors.email && touched.email && (\n                  <div className={css.messageWrapper}>\n                    <svg className={css.iconError}>\n                      <use href={`${sprite}#icon-circle-red`}></use>\n                    </svg>\n                    <ErrorMessage\n                      component=\"p\"\n                      className={css.textError}\n                      name=\"email\"\n                    />\n                  </div>\n                )}\n                {!errors.email && touched.email && (\n                  <div className={css.messageWrapper}>\n                    <svg className={css.iconSuccess}>\n                      <use href={`${sprite}#icon-circle-green`}></use>\n                    </svg>\n                    <p className={css.textSuccess}>Success email</p>\n                  </div>\n                )}\n              </div>\n              <div className={css.label}>\n                <Field\n                  type=\"password\"\n                  name=\"password\"\n                  placeholder=\"Password\"\n                  className={`${css.input} ${\n                    errors.password && touched.password ? css.error : ''\n                  }\n                ${touched.password && !errors.password ? css.success : ''}`}\n                />\n                {errors.password && touched.password && (\n                  <div className={css.messageWrapper}>\n                    <svg className={css.iconError}>\n                      <use href={`${sprite}#icon-circle-red`}></use>\n                    </svg>\n                    <ErrorMessage\n                      component=\"p\"\n                      className={css.textError}\n                      name=\"password\"\n                    />\n                  </div>\n                )}\n                {!errors.password && touched.password && (\n                  <div className={css.messageWrapper}>\n                    <svg className={css.iconSuccess}>\n                      <use href={`${sprite}#icon-circle-green`}></use>\n                    </svg>\n                    <p className={css.textSuccess}>Success password</p>\n                  </div>\n                )}\n              </div>\n              <AuthButton children=\"Sign Up\" />\n            </div>\n          </Form>\n        )}\n      </Formik>\n    </>\n  );\n};\n\nexport default SignUpForm;\n","import css from './sign-up-page.module.css';\nimport { NavLink } from 'react-router-dom';\n\nimport SignUpForm from '../../components/SignUpForm/SignUpForm';\nimport TitlePage from '../../components/TitlePage/TitlePage';\nimport RemainderComponent from 'components/RemainderComponent/RemainderComponent';\n\n\nconst SignUpPage = ({ onSubmit }) => {\n  return (\n    <div className={css.container}>\n      <TitlePage children=\"Sign Up\" />\n      <p className={css.text}>\n        Thank you for your interest in our platform. To complete the\n        registration process, please provide us with the following information.\n      </p>\n      <SignUpForm />\n      <RemainderComponent children=\"Already have an account? \" />\n      <NavLink to=\"/signin\" className={css.link}>\n        Sign In\n      </NavLink>\n    </div>\n  );\n};\nexport default SignUpPage;\n","import * as Yup from 'yup';\n\nexport  const signUpSchema = Yup.object().shape({\n    name: Yup.string()\n      .required('Required')\n      .min(2, 'Name must be at least 2 characters')\n      .max(10, 'Name must be no more than 16 characters'),\n  \n      email: Yup.string().email('Error email').matches(/^\\w+@[a-zA-Z]+?\\.[a-zA-Z]{2,3}$/).required('Required'),\n\n  \n    password: Yup.string()\n      .min(6, 'Password must be at least 6 characters')\n     .required('Required'),\n  });\n  export  const signInSchema = Yup.object().shape({\n    email: Yup.string().email('Error email').matches(/^\\w+@[a-zA-Z]+?\\.[a-zA-Z]{2,3}$/).required('Required'),\n\n    password: Yup.string()\n      .min(6, 'Password must be at least 6 characters')\n      .required('Required'),\n  });"],"names":["_ref","children","_jsx","_Fragment","className","css","type","path","dispatch","useDispatch","Formik","initialValues","name","email","password","onSubmit","values","setSubmitting","resetForm","setError","register","setTimeout","toast","position","error","validationSchema","signUpSchema","_ref2","errors","touched","Form","_jsxs","Field","placeholder","concat","nam","ErrorMessage","component","href","sprite","AuthButton","TitlePage","SignUpForm","RemainderComponent","NavLink","to","Yup","shape","required","min","max","matches","signInSchema"],"sourceRoot":""}