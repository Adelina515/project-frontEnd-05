{"version":3,"file":"static/js/331.3ef585ce.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/Container/Container.module.css?9f71","components/Container/Container.jsx","webpack://react-homework-template/./src/components/TitlePage/title-page.module.css?6643","components/TitlePage/TitlePage.jsx","function/formatData.js","webpack://react-homework-template/./src/pages/Diary.module.css?de53","webpack://react-homework-template/./src/components/daySwitch/DaySwitch.module.css?b893","components/daySwitch/DaySwitch.js","webpack://react-homework-template/./src/components/dayDashboard/DayDashboard.module.css?bc48","webpack://react-homework-template/./src/components/dayDashboard/StatisticsItem/StatisticsItem.module.css?fac9","components/dayDashboard/Icon.jsx","components/dayDashboard/StatisticsItem/StatisticsItem.jsx","components/dayDashboard/DayDashboard.js","webpack://react-homework-template/./src/components/dayProducts/DayProducts.module.css?7af7","webpack://react-homework-template/./src/components/dayProducts/productsTable/ProductsTable.module.css?5674","components/dayProducts/productsTable/ProductsTable.js","webpack://react-homework-template/./src/components/emList/EmList.module.css?5cf5","components/emList/EmList.jsx","components/dayProducts/DayProducts.js","webpack://react-homework-template/./src/components/dayExercises/DayExercises.module.css?3b92","webpack://react-homework-template/./src/components/dayExercises/exercisesTable/ExercisesTable.module.css?d836","components/dayExercises/exercisesTable/ExercisesTable.js","components/dayExercises/DayExercises.js","pages/Diary.js","redux/diary/diarySelectors.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"mainContainer\":\"Container_mainContainer__5G8IR\"};","import css from './Container.module.css';\n\nexport const Container = ({ children }) => {\n  return <div className={css.mainContainer}>{children}</div>;\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"titlePage\":\"title-page_titlePage__ZBar5\"};","import css from \"./title-page.module.css\";\n const TitlePage=({children})=>{\nreturn(\n    <h2 className={css.titlePage}>{children}</h2>\n)\n}\nexport default TitlePage;","const formatDate = (date) => {\n  const day = String(date.getDate()).padStart(2, '0');\n  const month = String(date.getMonth() + 1).padStart(2, '0');\n  const year = date.getFullYear();\n  return `${year}-${month}-${day}`;\n};\n\n\nexport default formatDate;\n  \n\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Diary_container__ZOWkq\",\"diary\":\"Diary_diary__GRrvF\",\"calendarCont\":\"Diary_calendarCont__6mDiP\",\"calendar\":\"Diary_calendar__ESVay\",\"sectionCont\":\"Diary_sectionCont__+Xm4N\"};","// extracted by mini-css-extract-plugin\nexport default {\"body\":\"DaySwitch_body__Hyxv8\",\"dateButton\":\"DaySwitch_dateButton__QLX6x\",\"calendarIconBody\":\"DaySwitch_calendarIconBody__Uc--s\",\"calendarIconLine\":\"DaySwitch_calendarIconLine__-SHwu\",\"arrowsBody\":\"DaySwitch_arrowsBody__UmJMh\",\"arrowsLeft\":\"DaySwitch_arrowsLeft__qGPj2\",\"arrowsRight\":\"DaySwitch_arrowsRight__ml3WP\"};","import { forwardRef, useState } from \"react\";\nimport { format } from \"date-fns\";\nimport DatePicker from \"react-datepicker\";\nimport style from \"./DaySwitch.module.css\";\nimport \"react-datepicker/dist/react-datepicker-cssmodules.css\";\n\nconst OwnIconCalendar = () => {\n  return <div className={style.calendarIconBody}>\n    <div className={style.calendarIconLine}>\n      <span></span>\n      <span></span>\n    </div>\n  </div>\n}\n\nconst DaySwitch = () => {\n  const [selectedDate, setSelectedDate] = useState(Date.now());\n  // потрібна дата реєстрації користувача\n  const [dateRegistration] = useState(new Date(selectedDate).setDate(new Date(selectedDate).getDate() - 1))\n\n  const CustomInput = forwardRef(({value, onClick}, ref) => {\n    return (\n      <div className={style.body}>\n        <div className={style.dateButton} onClick={onClick} ref={ref}>\n          {format(selectedDate, \"dd/MM/yyyy\")}\n        </div>\n        <OwnIconCalendar/>\n        <div className={style.arrowsBody}>\n                    <span className={style.arrowsLeft}\n                          onClick={() => {\n                            if (selectedDate !== dateRegistration) {\n                              setSelectedDate(new Date(selectedDate).setDate(new Date(selectedDate).getDate() - 1))\n                            }\n                          }}>\n                    </span>\n          <span className={style.arrowsRight}\n                onClick={() =>\n                  setSelectedDate(new Date(selectedDate).setDate(new Date(selectedDate).getDate() + 1))}\n          ></span>\n        </div>\n      </div>\n    );\n  });\n\n  return (\n    <>\n      <DatePicker\n        selected={selectedDate}\n        onChange={(date) => {\n          setSelectedDate(date);\n        }}\n        customInput={<CustomInput/>}\n        dateFormat={\"dd MM yyyy\"}\n        calendarStartDay={1}\n        formatWeekDay={(day) => day.substr(0, 1)}\n        minDate={dateRegistration}\n      />\n    </>\n  );\n\n};\n\n\nexport default DaySwitch;\n","// extracted by mini-css-extract-plugin\nexport default {\"dayDashboard\":\"DayDashboard_dayDashboard__h7nLm\",\"statisticList\":\"DayDashboard_statisticList__qUE0W\",\"adviceWrap\":\"DayDashboard_adviceWrap__dIlAc\",\"adviceIconWrap\":\"DayDashboard_adviceIconWrap__a4Yha\",\"exclamationIcon\":\"DayDashboard_exclamationIcon__Mmf+x\",\"adviceText\":\"DayDashboard_adviceText__Z-qD3\"};","// extracted by mini-css-extract-plugin\nexport default {\"statisticItem\":\"StatisticsItem_statisticItem__OTLqf\",\"statisticItemPositive\":\"StatisticsItem_statisticItemPositive__RlkXR\",\"statisticItemNegative\":\"StatisticsItem_statisticItemNegative__BW-f4\",\"primaryStatisticItem\":\"StatisticsItem_primaryStatisticItem__eKkjh\",\"statisticTitleWrap\":\"StatisticsItem_statisticTitleWrap__OwBh-\",\"statisticTitle\":\"StatisticsItem_statisticTitle__ve4XR\",\"statisticPrimaryTitle\":\"StatisticsItem_statisticPrimaryTitle__9TBuz\",\"statisticIcon\":\"StatisticsItem_statisticIcon__04E7e\",\"statisticValue\":\"StatisticsItem_statisticValue__rm2N7\"};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport sprite  from '../../img/sprite/symbol-defs.svg';\n\nfunction Icon({ className, iconId }) {\n  return (\n    <svg className={className} width=\"98px\" height=\"35px\">\n      <use href={`${sprite}#${iconId}`}/>\n    </svg>\n  );\n}\n\nIcon.propTypes = {\n  className: PropTypes.string,\n  iconId: PropTypes.string.isRequired,\n  onClick: PropTypes.func,\n};\n\nexport default Icon;","import css from './StatisticsItem.module.css';\nimport Icon from '../Icon';\nimport PropTypes from 'prop-types';\n\nconst StatisticsItem = ({\n  statisticsName,\n  statisticsIcon,\n  statisticsValue,\n  statisticPrimary,\n  fulfilledNorm = '',\n}) => {\n  return (\n    <>\n      <li  className={`${css.statisticItem} ${\n          statisticPrimary && css.primaryStatisticItem\n        } ${\n          fulfilledNorm !== '' && fulfilledNorm === 'positive'\n            ? css.statisticItemPositive\n            : fulfilledNorm !== '' && fulfilledNorm === 'negative'\n            ? css.statisticItemNegative\n            : ''\n        }`}>\n        <div className={css.statisticTitleWrap}>\n          <Icon className={css.statisticIcon} iconId={statisticsIcon} />\n          <p\n            className={`${css.statisticTitle} ${\n              statisticPrimary && css.statisticPrimaryTitle\n            }`}\n          >\n            {statisticsName}\n          </p>\n        </div>\n        <div className={css.statisticValue}>{statisticsValue}</div>\n      </li>\n    </>\n  );\n};\n\n\n\n\n\nStatisticsItem.propTypes = {\n  statisticsName: PropTypes.string.isRequired,\n  statisticsIcon: PropTypes.string.isRequired,\n  statisticsValue: PropTypes.string.isRequired,\n  statisticPrimary: PropTypes.bool,\n  fulfilledNorm: PropTypes.string,\n};\n\nexport default StatisticsItem;","\nimport React from 'react';\nimport { useSelector } from 'react-redux';\nimport css from './DayDashboard.module.css';\nimport StatisticsItem from './StatisticsItem/StatisticsItem';\n\nimport { selectBurnedCaloriesByDate, selectConsumedCaloriesByDate, selectSportsRemaining } from '../../redux/diary/diarySelectors';\n\n\n/*import {selectUser } from '../../redux/UserPageCntrls/selectors';*/\n\nimport sprite from '../../img/sprite/symbol-defs.svg';\n\n\n\n\n\n\n\nexport const selectUserBmr = state => state.auth.user.bmr\nconst DayDashboard = () => {\n  const consumedCaloriesByDate = useSelector(selectConsumedCaloriesByDate);\n  const burnedCaloriesByDate = useSelector(selectBurnedCaloriesByDate);\n  const sportsRemaining = useSelector(selectSportsRemaining);\n  const {dailyCalorieIntake} = useSelector(selectUserBmr);\n \n \n  const caloriesRemaining = dailyCalorieIntake - consumedCaloriesByDate;\n  const dailyPhysicalActivity = 110;\n\n    const isCaloriesRemaining =\n    consumedCaloriesByDate < dailyCalorieIntake ? `positive` : `negative`;\n  const isSportsRemaining =\n    sportsRemaining > 0 ? `positive` : `negative`;\n\n  \n \n\n\n  return (\n    <div className={css.dayDashboard}>\n      <ul className={css.statisticList}>\n        <StatisticsItem\n          statisticsName={'Daily calorie intake'}\n          statisticsValue={`${dailyCalorieIntake}`}\n            statisticsIcon={'icon-fork-filled'}\n          statisticPrimary\n        />\n        <StatisticsItem\n          statisticsName={'Daily physical activity'}\n          statisticsValue={`${dailyPhysicalActivity} min`}\n            statisticsIcon={'icon-dumbbell-filled'}\n\n          statisticPrimary\n        />\n        <StatisticsItem\n          statisticsName={'Сalories consumed'}\n          statisticsValue={`${consumedCaloriesByDate}`}\n                statisticsIcon={'icon-apple-filled'}\n\n        />\n        <StatisticsItem\n          statisticsName={'Сalories burned'}\n          statisticsValue={`${burnedCaloriesByDate}`}\n                              statisticsIcon={'icon-burn-filled'}\n\n        />\n        <StatisticsItem\n          statisticsName={'Calories remaining'}\n         statisticsValue={`${caloriesRemaining}`}\n          statisticsIcon={'icon-bubble-filled'}\n                    fulfilledNorm={isCaloriesRemaining}\n\n\n        />\n        <StatisticsItem\n          statisticsName={'Sports remaining'}\n statisticsValue={\n            isSportsRemaining === 'positive'\n              ? `+${sportsRemaining} min`\n              : `${sportsRemaining} min`\n          }        statisticsIcon={'icon-running-filled'}\n\n        />\n      </ul>\n      <div className={css.adviceWrap}>\n        <div className={css.adviceIconWrap}>\n <svg  width=\"24px\" height=\"24px\">\n              <use href={`${sprite}#icon-warning`}></use>\n            </svg>        </div>\n        <p className={css.adviceText}>\n          Record all your meals in the calorie diary every day. This will help you be aware of your nutrition and make informed choices.\n        </p>\n      </div>\n    </div>\n  );\n};\n\nexport default DayDashboard;","// extracted by mini-css-extract-plugin\nexport default {\"dayProducts\":\"DayProducts_dayProducts__LuDKI\",\"dayScroll\":\"DayProducts_dayScroll__46wb-\",\"diaryMen\":\"DayProducts_diaryMen__zlr12\",\"DiaryZag\":\"DayProducts_DiaryZag__rvcXM\",\"Butt\":\"DayProducts_Butt__NdM-k\",\"iconStrilka\":\"DayProducts_iconStrilka__Ilypr\",\"diaryNav\":\"DayProducts_diaryNav__Ds+gF\"};","// extracted by mini-css-extract-plugin\nexport default {\"diaryList\":\"ProductsTable_diaryList__NSGJb\",\"diaryItem\":\"ProductsTable_diaryItem__kGjga\",\"elem\":\"ProductsTable_elem__B1b3i\",\"elementCont\":\"ProductsTable_elementCont__-LBk0\",\"nameCateg\":\"ProductsTable_nameCateg__85BEo\",\"nameValue\":\"ProductsTable_nameValue__k2xLk\",\"element\":\"ProductsTable_element__MVHTf\",\"recommendCont\":\"ProductsTable_recommendCont__kGpWW\",\"productRecommend\":\"ProductsTable_productRecommend__W3G-g\",\"productNotRecommend\":\"ProductsTable_productNotRecommend__6WQMJ\",\"trashValue\":\"ProductsTable_trashValue__0fzSq\",\"iconTresh\":\"ProductsTable_iconTresh__beqBw\",\"nameTrash\":\"ProductsTable_nameTrash__jBGkn\",\"diaryMainItem\":\"ProductsTable_diaryMainItem__Yw3at\",\"nameCategory\":\"ProductsTable_nameCategory__vfjez\",\"table\":\"ProductsTable_table__rfz03\",\"elementWrap\":\"ProductsTable_elementWrap__nG27D\",\"bodyTable\":\"ProductsTable_bodyTable__FXofP\",\"diaryMainList\":\"ProductsTable_diaryMainList__CbbcO\"};","import css from './ProductsTable.module.css';\n/*import PropTypes from 'prop-types';*/\nimport svg from '../../../img/sprite/symbol-defs.svg';\nimport { useSelector } from \"react-redux\";\n/*import { selectDiaryProducts } from '../../../redux/diary/diarySelectors';*/\n\n\nimport { deleteProductDiary, /*fetchAllDiary*/ } from '../../../redux/diary/diaryOperations';\n\n\n\nimport { useDispatch } from 'react-redux';\n/*import { useEffect } from 'react';*/\n\n\n\nconst ProductsTable = ( { products, data }) => {\n    /* const productsInDiary = useSelector(selectDiaryProducts);*/\n/*console.log(productsInDiary)\n    const testArr = useSelector(state => state.diary)\n  console.log(testArr)*/\n\n  \n  const dispatch = useDispatch();\n\n\n  const deleteProduct = (_id) => {\n    console.log(\"_id >>\", _id)\n    dispatch(deleteProductDiary(_id))\n  }\n\n  \n /* useEffect(() => {\n        dispatch(fetchAllDiary(\"2024-01-15\"));\n  }, [selectedDate, dispatch]);*/\n  const userBlood = useSelector(state => state.auth.user.blood);\n  const { groupBloodNotAllowed } = data;\n\n    const capitalizedWord = (word) => {\n  return word.substring(0, 1).toUpperCase() + word.substring(1);\n};\n    return (\n       <ul className={css.diaryList}>\n      {products.map(\n        ({ _id, calories, grams, productId: { category, title } }) => {\n          return (\n            <li key={_id} className={css.diaryItem}>\n              <table className={css.table}>\n                <tbody className={css.bodyTable}>\n                  <tr className={css.elem}>\n                    <th className={css.nameCateg}>Title</th>\n                    <td className={css.nameValue}>{capitalizedWord(title)}</td>\n                  </tr>\n                  <tr className={css.elem}>\n                    <th className={css.nameCateg}>Category</th>\n                    <td className={css.nameValue}>\n                      {capitalizedWord(category)}\n                    </td>\n                  </tr>\n                </tbody>\n                <tbody className={css.elementCont}>\n                  <tr className={css.elem}>\n                    <th className={css.nameCateg}>Calories</th>\n                    <td className={css.nameValue}>{calories}</td>\n                  </tr>\n                  <tr className={css.elem}>\n                    <th className={css.nameCateg}>Weight</th>\n                    <td className={css.nameValue}>{grams}</td>\n                  </tr>\n                  <tr className={css.elem}>\n                    <th className={css.nameCateg}>Recommend</th>\n                    <td className={css.nameValue}>\n                      <div className={`${css.recommendCont}`}>\n                        <svg className={css.statusCircle}>\n                {/* <use href={`${svg}#icon-circle-green`}></use> */}\n                {groupBloodNotAllowed[userBlood] ? (\n                  <use href={`${svg}#icon-circle-green`}></use>\n                ) : (\n                  <use href={`${svg}#icon-circle-red`}></use>\n                )}\n              </svg>\n              <p className={css.statusText}>\n                {/* Recommended */}\n                {groupBloodNotAllowed[userBlood]\n                  ? 'Recommended'\n                  : 'Not recommended'}\n              </p>\n                      </div>\n                    </td>\n                  </tr>\n                  <tr className={css.elem}>\n                    <th className={`${css.nameCateg} ${css.nameTrash}`}>\n                      Trash\n                    </th>\n                    <td onClick={() => deleteProduct(_id)}> \n                      <svg className={css.iconTresh} width=\"20px\" height=\"20px\">\n                        <use href={`${svg}#icon-trash`}></use>\n                      </svg>\n                    </td>\n                  </tr>\n                </tbody>\n              </table>\n            </li>\n          );\n        }\n      )}\n    </ul>\n  );\n\n}\n\n/*ProductsTable.propTypes = {\n  products: PropTypes.array.isRequired,\n};*/\n\nexport default ProductsTable;\n","// extracted by mini-css-extract-plugin\nexport default {\"notTextCont\":\"EmList_notTextCont__27Lc8\",\"notText\":\"EmList_notText__EtxLu\"};","import css from \"./EmList.module.css\";\n/*import PropTypes from 'prop-types';*/\n\nconst EmList = ({ itemName }) => {\n  return (\n    <div className={css.notTextCont}>\n      <p className={css.notText}>Not found {itemName}</p>\n    </div>\n  );\n};\n\n\n/*EmList.propTypes = {\n  listName: PropTypes.string.isRequired,\n};*/\n\nexport default EmList;","import css from './DayProducts.module.css';\nimport ProductsTable from './productsTable/ProductsTable';\nimport sprite from '../../img/sprite/symbol-defs.svg';\nimport { Link } from 'react-router-dom';\nimport { selectDiaryProducts } from '../../redux/diary/diarySelectors';\nimport { useSelector } from \"react-redux\";\n\nimport EmList from '../emList/EmList.jsx';\n\nconst DayProducts = () => {\n   const productsInDiary = useSelector(selectDiaryProducts);\n\n    return (\n        <div className = {css.dayProducts}>\n            <div className = {css.dayScroll}>\n                <div className={ css.diaryMen}> \n                    <h3 className = {css.DiaryZag}>Products</h3>\n                    <Link to=\"/products\" className={css.Butt} /*state={date} */>\n            Add product\n            <svg className={css.iconStrilka} width=\"16px\" height=\"16px\">\n              <use href={`${sprite}#icon-next-arrow`}></use>\n            </svg>\n          </Link>\n          </div>\n          {productsInDiary.length === 0 ? (\n          <EmList itemName={\"products\"} />\n        ) : (\n            <ProductsTable products={productsInDiary} />\n        )}\n            \n            </div>\n\n        </div> \n)\n}\n\nexport default DayProducts;\n\n\n","// extracted by mini-css-extract-plugin\nexport default {\"dayExecrcises\":\"DayExercises_dayExecrcises__m2SMA\",\"dayScroll\":\"DayExercises_dayScroll__gcQVi\",\"dayNav\":\"DayExercises_dayNav__+T+Wl\",\"dayZag\":\"DayExercises_dayZag__iZ6rT\",\"Butt\":\"DayExercises_Butt__3osLG\",\"iconStrilka\":\"DayExercises_iconStrilka__4vViE\"};","// extracted by mini-css-extract-plugin\nexport default {\"diaryMainItem\":\"ExercisesTable_diaryMainItem__+QUNa\",\"element\":\"ExercisesTable_element__ciKJY\",\"elementWrap\":\"ExercisesTable_elementWrap__7MPXh\",\"nameCategory\":\"ExercisesTable_nameCategory__5Wc+t\",\"nameValue\":\"ExercisesTable_nameValue__iih7Y\",\"nameTrash\":\"ExercisesTable_nameTrash__xfZsB\",\"table\":\"ExercisesTable_table__vvyBI\",\"bodyTable\":\"ExercisesTable_bodyTable__EcdoH\",\"diaryMainList\":\"ExercisesTable_diaryMainList__+2ofD\"};","import css from './ExercisesTable.module.css';\n/*import PropTypes from 'prop-types';*/\nimport sprite from '../../../img/sprite/symbol-defs.svg';\nimport { useDispatch } from 'react-redux';\nimport { useSelector } from \"react-redux\";\n\nimport { deleteExercisesDiary } from '../../../redux/diary/diaryOperations';\n\nconst ExercisesTable = ({exercises}) => {\n    /*const { exercises } = props;*/\n    \n  \n  const capitalizedWord = (word) => {\n  return word.substring(0, 1).toUpperCase() + word.substring(1);\n  };\n  \n  const dispatch = useDispatch();\n \n\n\n  const deleteExercise = (_id) => {\n    dispatch(deleteExercisesDiary(_id));\n  }\n  const data = useSelector(state => state.diary);\n  console.log(data);\n\n\n    return (\n         <>\n      <ul className={css.diaryMainList}>\n        {exercises.map(\n          ({ _id, burnedCalories, duration, exerciseId: { equipment, name, target, bodyPart} }) => (\n            <li key={_id} className={css.diaryMainItem}>\n              <table className={css.table}>\n                <tbody className={css.bodyTable}>\n                  <tr className={css.element}>\n                    <th className={css.nameCategory}>Body Part</th>\n                    <td className={css.nameValue}>\n                      {capitalizedWord(bodyPart)}\n                    </td>\n                  </tr>\n                  <tr className={css.element}>\n                    <th className={css.nameCategory}>Equipment</th>\n                    <td className={css.nameValue}>\n                      {capitalizedWord(equipment)}\n                    </td>\n                  </tr>\n                  <tr className={css.element}>\n                    <th className={css.nameCategory}>Name</th>\n                    <td className={css.nameValue}>{capitalizedWord(name)}</td>\n                  </tr>\n                </tbody>\n                <tbody className={css.elementWrap}>\n                  <tr className={css.element}>\n                    <th className={css.nameCategory}>Target</th>\n                    <td className={css.nameValue}>{capitalizedWord(target)}</td>\n                  </tr>\n                  <tr className={css.element}>\n                    <th className={css.nameCategory}>Burned Calories</th>\n                    <td className={css.nameValue}>{burnedCalories}</td>\n                  </tr>\n                  <tr className={css.element}>\n                    <th className={css.nameCategory}>Time</th>\n                    <td className={css.nameValue}>{duration}</td>\n                  </tr>\n                  <tr className={css.element}>\n                    <th className={`${css.nameCategory} ${css.nameTrash}`}>\n                      Trash\n                    </th>\n                    <td onClick={() => deleteExercise(_id)} > \n                      <svg className={css.iconTresh} width=\"20px\" height=\"20px\">\n                        <use href={`${sprite}#icon-trash`}></use>\n                      </svg>\n                  </td>\n                  </tr>\n                </tbody>\n              </table>\n            </li>\n          )\n        )}\n      </ul>\n    </>\n    )\n    \n}\n\n/*ExercisesTable.propTypes = {\n  exercises: PropTypes.array.isRequired,\n};\n\n*/\n\nexport default ExercisesTable;\n\n\n","import css from \"./DayExercises.module.css\";\nimport { Link } from 'react-router-dom';\n\nimport ExercisesTable from \"./exercisesTable/ExercisesTable\";\nimport EmList from '../emList/EmList.jsx';\n\nimport sprite from '../../img/sprite/symbol-defs.svg';\nimport { selectDiaryExercises } from '../../redux/diary/diarySelectors';\nimport { useSelector } from \"react-redux\";\n\n\n\nconst DayExercises = () => {\n  const exercisesInDiary = useSelector(selectDiaryExercises);\n  \n\n\n  return (\n    <>\n      <div className= {css.dayExecrcises}>\n        <div className ={css.dayScroll}>\n          <div className={css.dayNav}>\n            <h3 className={css.dayZag}>Execrcises</h3>\n         <Link to=\"/exercises\" className={css.Butt} /*state={date} */>\n            Add exercises\n            <svg className={css.iconStrilka} width=\"16px\" height=\"16px\">\n              <use href={`${sprite}#icon-next-arrow`}></use>\n            </svg>\n          </Link>\n          </div>\n {exercisesInDiary.length === 0 ? (\n            <EmList itemName={\"exercises\"} />\n          ) : (\n            <ExercisesTable exercises={exercisesInDiary} />\n          )}        </div>\n      </div>\n    </>\n  );\n};\n\nexport default DayExercises;\n\n","import css from './Diary.module.css';\n\nimport TitlePage from '../components/TitlePage/TitlePage';\nimport DaySwitch from '../components/daySwitch/DaySwitch';\nimport DayDashboard from '../components/dayDashboard/DayDashboard';\nimport DayProducts from '../components/dayProducts/DayProducts';\nimport DayExercises from '../components/dayExercises/DayExercises';\nimport { Container } from '../components/Container/Container';\n\n\nimport { fetchAllDiary } from \"../redux/diary/diaryOperations\";\n\n\nimport { useDispatch } from \"react-redux\";\nimport { useEffect, useState } from \"react\";\n\nimport formatDate from '../function/formatData';\n\nexport default function Diary() {\n\n  const dispatch = useDispatch();\n  \n    const [selectedDate, setSelectedDate] = useState(new Date());\n\n/*Обробка вибраної дати */\n   const handleDate = async (date) => {\n    const formatedDate = formatDate(date);\n    await setSelectedDate(formatedDate);\n  };\n\n    useEffect(() => {\n        dispatch(fetchAllDiary(\"2024-01-15\"));\n  }, [selectedDate, dispatch]);\n\n\n  \n\n    return (\n        <div className={css.diary}>\n            <Container>\n                <div className={css.calendarCont}>\n                    <TitlePage children = \"Diary\" />\n\n                <div className ={css.calendar}>\n                    <DaySwitch handleDate={handleDate}/>\n                </div>\n            </div>\n            <div className ={css.sectionCont}>\n                <DayDashboard />\n                <div>\n                    <DayProducts />\n                    <DayExercises />\n                </div>\n            </div>\n \n             </Container>\n           \n        </div>\n    )\n}\n","export const selectDiaryProducts = state => state.diary.productsInDiary;\nexport const selectDiaryExercises = state => state.diary.exercisesInDiary;\n\nexport const selectBurnedCaloriesByDate = state => state.diary.burnedCaloriesByDate;\nexport const selectConsumedCaloriesByDate = state => state.diary.consumedCaloriesByDate;\nexport const selectSportsRemaining = state => state.diary.sportsRemaining;\n\n\nexport const selectDiaryIsLoading = state => state.diary.IsLoading;\nexport const selectDiaryError = state => state.diary.error;\n\n"],"names":["Container","_ref","children","_jsx","className","css","date","day","String","getDate","padStart","month","getMonth","year","getFullYear","concat","OwnIconCalendar","style","_jsxs","_useState","useState","Date","now","_useState2","_slicedToArray","selectedDate","setSelectedDate","_useState3","setDate","dateRegistration","CustomInput","forwardRef","ref","value","onClick","format","_Fragment","DatePicker","selected","onChange","customInput","dateFormat","calendarStartDay","formatWeekDay","substr","minDate","iconId","width","height","href","sprite","statisticsName","statisticsIcon","statisticsValue","statisticPrimary","_ref$fulfilledNorm","fulfilledNorm","Icon","selectUserBmr","state","auth","user","bmr","consumedCaloriesByDate","useSelector","selectConsumedCaloriesByDate","burnedCaloriesByDate","selectBurnedCaloriesByDate","sportsRemaining","selectSportsRemaining","dailyCalorieIntake","caloriesRemaining","isCaloriesRemaining","isSportsRemaining","StatisticsItem","products","data","dispatch","useDispatch","userBlood","blood","groupBloodNotAllowed","capitalizedWord","word","substring","toUpperCase","map","_ref2","_id","calories","grams","_ref2$productId","productId","category","title","svg","console","log","deleteProductDiary","deleteProduct","itemName","productsInDiary","selectDiaryProducts","Link","to","length","EmList","ProductsTable","exercises","diary","burnedCalories","duration","_ref2$exerciseId","exerciseId","equipment","name","target","bodyPart","deleteExercisesDiary","deleteExercise","exercisesInDiary","selectDiaryExercises","ExercisesTable","Diary","handleDate","_asyncToGenerator","_regeneratorRuntime","_callee","formatedDate","_context","prev","next","formatDate","stop","_x","apply","arguments","useEffect","fetchAllDiary","TitlePage","DaySwitch","DayDashboard","DayProducts","DayExercises","selectDiaryError","error"],"sourceRoot":""}