{"version":3,"file":"static/js/134.91e6e3a6.chunk.js","mappings":"uKACA,MAA4B,8B,SCK5B,EALiB,SAADA,GAAgB,IAAbC,EAAQD,EAARC,SACnB,OACIC,EAAAA,EAAAA,KAAA,MAAIC,UAAWC,EAAcH,SAAEA,GAEnC,C,4GCJA,GAAgB,QAAU,0BAA0B,4BAA4B,4CAA4C,mBAAmB,mCAAmC,oCAAoC,oDAAoD,8BAA8B,8CAA8C,2BAA2B,2CAA2C,4CAA4C,4DAA4D,wBAAwB,wCAAwC,kCAAkC,kDAAkD,kCAAkC,kDAAkD,6BAA6B,6CAA6C,kCAAkC,kDAAkD,+BAA+B,+CAA+C,yCAAyC,yDAAyD,qCAAqC,qDAAqD,oCAAoC,oDAAoD,yBAAyB,yCAAyC,0BAA0B,0CAA0C,2CAA2C,2DAA2D,uCAAuC,uDAAuD,6BAA6B,8C,SCWtkDI,EAAW,SAAHL,GAAoD,IAA9CM,EAAYN,EAAZM,aAAcC,EAAeP,EAAfO,gBAAiBC,EAAOR,EAAPQ,QAQxD,OAAQC,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAT,SAAA,EACNC,EAAAA,EAAAA,KAAA,SAAAD,SCrBkB,8vGDwBlBQ,EAAAA,EAAAA,MAAA,OAAKN,UAAYC,EAAAA,EAAAA,QAAaO,MAAO,CAAEC,SAAU,WAAYJ,QAAQA,GAASP,SAAA,EAI1EC,EAAAA,EAAAA,KAAA,OAAKC,UAAWQ,EAAAA,QAAeE,MAAM,KAAKC,OAAO,KAAIb,UACnDC,EAAAA,EAAAA,KAAA,OAAKa,KAAI,GAAAC,OAAKC,EAAAA,EAAM,8BAGtBf,EAAAA,EAAAA,KAACgB,IAAU,CAAEf,UAAYQ,EAAAA,aAC1BQ,SAAUb,EACTc,SAlBmB,SAAAC,GACvBd,EAAgBc,EAClB,EAoBMC,aAAapB,EAAAA,EAAAA,KAAA,SAAOC,UAAWC,EAAAA,EAAAA,WAAgBO,MAAO,CAAEY,OAAQ,aAE9DC,WAAY,aACZC,iBAAkB,EAClBC,cAAe,SAAAC,GAAG,OAAIA,EAAIC,UAAU,EAAG,EAAE,SAOnD,C,qBEzCA,IARmB,SAACP,GAClB,IAAMM,EAAME,OAAOR,EAAKS,WAAWC,SAAS,EAAG,KACzCC,EAAQH,OAAOR,EAAKY,WAAa,GAAGF,SAAS,EAAG,KAChDG,EAAOb,EAAKc,cAClB,MAAM,GAANnB,OAAUkB,EAAI,KAAAlB,OAAIgB,EAAK,KAAAhB,OAAIW,EAC7B,C,mFCJA,EAA6D,qBAA7D,EAAiG,4BAAjG,EAAwI,wBAAxI,EAA8K,2B,qECA9K,EAAuB,wBAAvB,EAA4D,8BAA5D,EAA6G,oCAA7G,EAAoK,oCAApK,EAAqN,8BAArN,EAAgQ,8BAAhQ,EAA4S,+B,uCCStSS,EAAkB,WACtB,OACElC,EAAAA,EAAAA,KAAA,OAAKC,UAAWQ,EAAuBV,UACrCQ,EAAAA,EAAAA,MAAA,OAAKN,UAAWQ,EAAuBV,SAAA,EACrCC,EAAAA,EAAAA,KAAA,YACAA,EAAAA,EAAAA,KAAA,eAIR,EAiFA,EA/EkB,SAAHF,GAAwB,IAAlBqC,EAAUrC,EAAVqC,WACbC,GAAWC,EAAAA,EAAAA,MACjBC,GAAwCC,EAAAA,EAAAA,UAAS,IAAIC,MAAOC,GAAAC,EAAAA,EAAAA,GAAAJ,EAAA,GAArDlC,EAAYqC,EAAA,GAAEpC,EAAeoC,EAAA,GACpCE,GAAgDJ,EAAAA,EAAAA,UAAS,MAAKK,GAAAF,EAAAA,EAAAA,GAAAC,EAAA,GAAvDE,EAAgBD,EAAA,GAAEE,EAAmBF,EAAA,GAC5CG,QAAQC,IAAI,kBAAmB5C,GAC/B2C,QAAQC,IAAI,sBAAuBH,IAMnCI,EAAAA,EAAAA,YAAU,WACR,IAAMC,GAAYC,EAAAA,EAAAA,GAAW/C,GAC7B0C,EAAoBI,GACpBd,GAASgB,EAAAA,EAAAA,IAAcF,GACzB,GAAG,CAAC9C,EAAcgC,IAGlB,IAAAiB,GAA2Bd,EAAAA,EAAAA,UACzB,IAAIC,KAAKpC,GAAckD,QAAQ,IAAId,KAAKpC,GAAcwB,UAAY,IAD7D2B,GAENb,EAAAA,EAAAA,GAAAW,EAAA,GAFsB,GAIjBG,GAAcC,EAAAA,EAAAA,aAAW,SAAAC,EAAqBC,GAAbD,EAALE,MAA2B,IAApBC,EAAOH,EAAPG,QACvC,OACEtD,EAAAA,EAAAA,MAAA,OAAKN,UAAWQ,EAAWV,SAAA,EACzBC,EAAAA,EAAAA,KAAA,OAAKC,UAAWQ,EAAkBoD,QAASA,EAASF,IAAKA,EAAI5D,UAC1D+D,EAAAA,EAAAA,IAAO1D,EAAc,iBAExBJ,EAAAA,EAAAA,KAACkC,EAAe,KAChB3B,EAAAA,EAAAA,MAAA,OAAKN,UAAWQ,EAAiBV,SAAA,EAC/BC,EAAAA,EAAAA,KAAA,QACEC,UAAWQ,EACXoD,QAAS,WACHzD,IAAiBmD,GACnBlD,EACE,IAAImC,KAAKpC,GAAckD,QACrB,IAAId,KAAKpC,GAAcwB,UAAY,GAI3C,KAEF5B,EAAAA,EAAAA,KAAA,QACEC,UAAWQ,EACXoD,QAAS,kBACPxD,EACE,IAAImC,KAAKpC,GAAckD,QACrB,IAAId,KAAKpC,GAAcwB,UAAY,GAEtC,SAMb,IAEA,OACErB,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAT,SAAA,EACEC,EAAAA,EAAAA,KAACgB,IAAU,CACTC,SAAUb,EACVc,SAAU,SAAAC,GACRd,EAAgBc,GAChBgB,EAAWhB,EACb,EACAC,aAAapB,EAAAA,EAAAA,KAACwD,EAAW,IACzBlC,WAAY,aACZC,iBAAkB,EAClBC,cAAe,SAAAC,GAAG,OAAIA,EAAIsC,OAAO,EAAG,EAAE,EACtCC,QAAST,KAGXvD,EAAAA,EAAAA,KAACG,EAAAA,EAAQ,CAACG,QAAS,WAKzB,ECjGA,EAA+B,mCAA/B,EAAkF,oCAAlF,EAAmI,iCAAnI,EAAqL,qCAArL,EAA+R,iCCA/R,EAAgC,sCAAhC,EAA8F,8CAA9F,EAAoK,8CAApK,EAAyO,6CAAzO,EAA2S,2CAA3S,EAAuW,uCAAvW,EAAsa,8CAAta,EAAoe,sCAApe,EAA2hB,uC,UCiB3hB,MAdA,SAAaR,GAAyB,IAAtBG,EAASH,EAATG,UAAWgE,EAAMnE,EAANmE,OACzB,OACEjE,EAAAA,EAAAA,KAAA,OAAKC,UAAWA,EAAWU,MAAM,OAAOC,OAAO,OAAMb,UACnDC,EAAAA,EAAAA,KAAA,OAAKa,KAAI,GAAAC,OAAKC,EAAAA,EAAM,KAAAD,OAAImD,MAG9B,ECwCA,EA9CuB,SAAHnE,GAMb,IALLoE,EAAcpE,EAAdoE,eACAC,EAAcrE,EAAdqE,eACAC,EAAetE,EAAfsE,gBACAC,EAAgBvE,EAAhBuE,iBAAgBC,EAAAxE,EAChByE,cAAAA,OAAa,IAAAD,EAAG,GAAEA,EAElB,OACEtE,EAAAA,EAAAA,KAAAQ,EAAAA,SAAA,CAAAT,UACEQ,EAAAA,EAAAA,MAAA,MAAKN,UAAS,GAAAa,OAAKZ,EAAiB,KAAAY,OAChCuD,GAAoBnE,EAAwB,KAAAY,OAE1B,KAAlByD,GAA0C,aAAlBA,EACpBrE,EACkB,KAAlBqE,GAA0C,aAAlBA,EACxBrE,EACA,IACHH,SAAA,EACHQ,EAAAA,EAAAA,MAAA,OAAKN,UAAWC,EAAuBH,SAAA,EACrCC,EAAAA,EAAAA,KAACwE,EAAI,CAACvE,UAAWC,EAAmB+D,OAAQE,KAC5CnE,EAAAA,EAAAA,KAAA,KACEC,UAAS,GAAAa,OAAKZ,EAAkB,KAAAY,OAC9BuD,GAAoBnE,GACnBH,SAEFmE,QAGLlE,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAmBH,SAAEqE,QAI7C,E,UCrBaK,EAAgB,SAAAC,GAAK,OAAIA,EAAMC,KAAKC,KAAKC,GAAI,EAsF1D,EApFqB,WACnB,IAAMzC,GAAWC,EAAAA,EAAAA,MACjBC,GAAgCC,EAAAA,EAAAA,UAAS,MAAKE,GAAAC,EAAAA,EAAAA,GAAAJ,EAAA,GAAvCwC,EAAQrC,EAAA,GAAEsC,EAAWtC,EAAA,GAC5BE,GAA0BJ,EAAAA,EAAAA,UAAS,MAAKK,GAAAF,EAAAA,EAAAA,GAAAC,EAAA,GAAjCqC,EAAKpC,EAAA,GAAEqC,EAAQrC,EAAA,GACtBS,GAA4Bd,EAAAA,EAAAA,UAAS,MAAK2C,GAAAxC,EAAAA,EAAAA,GAAAW,EAAA,GAAnC8B,EAAMD,EAAA,GAAEE,EAASF,EAAA,GAGhBG,GAAyBC,EAAAA,EAAAA,IAAYC,EAAAA,IACrCC,GAAuBF,EAAAA,EAAAA,IAAYG,EAAAA,IACnCC,GAAkBJ,EAAAA,EAAAA,IAAYK,EAAAA,IAC9BC,GAAqBN,EAAAA,EAAAA,IAAYb,IAEzCxB,EAAAA,EAAAA,YAAU,WACR8B,EAAYM,GACZJ,EAASW,GACTR,EAAUI,EACZ,GAAG,CACDH,EACAO,EACAJ,EAAsBpD,IAGxB,IAAMyD,EAAoBb,EAAQF,EAG5BgB,EAAsBhB,EAAWE,EAAK,sBACtCe,EAAoBL,EAAkB,EAAC,sBAE7C,OACEnF,EAAAA,EAAAA,MAAA,OAAKN,UAAWC,EAAiBH,SAAA,EAC/BQ,EAAAA,EAAAA,MAAA,MAAIN,UAAWC,EAAkBH,SAAA,EAC/BC,EAAAA,EAAAA,KAACgG,EAAc,CACb9B,eAAgB,uBAChBE,gBAAe,GAAAtD,OAAK8E,GACpBzB,eAAgB,mBAChBE,kBAAgB,KAElBrE,EAAAA,EAAAA,KAACgG,EAAc,CACb9B,eAAgB,0BAChBE,gBAAe,GAAAtD,OAhBO,IAgBmB,QACzCqD,eAAgB,uBAChBE,kBAAgB,KAElBrE,EAAAA,EAAAA,KAACgG,EAAc,CACb9B,eAAgB,oBAChBE,gBAAe,GAAAtD,OAAKgE,GACpBX,eAAgB,uBAElBnE,EAAAA,EAAAA,KAACgG,EAAc,CACb9B,eAAgB,kBAChBE,gBAAe,GAAAtD,OAAKqE,GACpBhB,eAAgB,sBAElBnE,EAAAA,EAAAA,KAACgG,EAAc,CACb9B,eAAgB,qBAChBE,gBAAe,GAAAtD,OAAK+E,GACpB1B,eAAgB,qBAChBI,cAAeuB,KAEjB9F,EAAAA,EAAAA,KAACgG,EAAc,CACb9B,eAAgB,mBAChBE,gBACwB,aAAtB2B,EAAgC,IAAAjF,OACxB4E,EAAe,WAAA5E,OAChB4E,EAAe,QAExBvB,eAAgB,4BAGpB5D,EAAAA,EAAAA,MAAA,OAAKN,UAAWC,EAAeH,SAAA,EAC7BQ,EAAAA,EAAAA,MAAA,OAAKN,UAAWC,EAAmBH,SAAA,EACjCC,EAAAA,EAAAA,KAAA,OAAKW,MAAM,OAAOC,OAAO,OAAMb,UAC7BC,EAAAA,EAAAA,KAAA,OAAKa,KAAI,GAAAC,OAAKC,EAAAA,EAAM,qBACf,QAETf,EAAAA,EAAAA,KAAA,KAAGC,UAAWC,EAAeH,SAAC,wIAOtC,EClGA,EAA8B,iCAA9B,EAA2E,+BAA3E,EAAqH,8BAArH,EAA8J,8BAA9J,EAAmM,0BAAnM,EAA2O,iCCA3O,GAAgB,UAAY,iCAAiC,KAAO,4BAA4B,aAAe,oCAAoC,WAAa,kCAAkC,YAAc,mCAAmC,UAAY,iCAAiC,UAAY,iCAAiC,UAAY,iCAAiC,cAAgB,qCAAqC,iBAAmB,wCAAwC,oBAAsB,2CAA2C,WAAa,kCAAkC,UAAY,iCAAiC,UAAY,iCAAiC,MAAQ,6BAA6B,UAAY,iCAAiC,UAAY,kC,WCwGlxB,GA/FsB,SAAHD,GAA6B,IAAvBmG,EAAenG,EAAfmG,gBACjB7D,GAAWC,EAAAA,EAAAA,MAGX6D,GAAWZ,EAAAA,EAAAA,IAAYa,GAAAA,IAC7BpD,QAAQC,IAAI,cAAekD,GAE3B,IAMME,GAAYd,EAAAA,EAAAA,KAAY,SAAAZ,GAAK,OAAIA,EAAMC,KAAKC,KAAKyB,KAAK,IAItDC,EAAkB,SAAAC,GACtB,OAAOA,EAAK7E,UAAU,EAAG,GAAG8E,cAAgBD,EAAK7E,UAAU,EAC7D,EACA,OACE1B,EAAAA,EAAAA,KAAA,MAAIC,UAAWC,EAAAA,UAAcH,SAC1BkG,EAAgBQ,KACf,SAAA/C,GAA+D,IAA5DgD,EAAGhD,EAAHgD,IAAK5B,EAAQpB,EAARoB,SAAU6B,EAAKjD,EAALiD,MAAKC,EAAAlD,EAAEmD,UAAaC,EAAQF,EAARE,SAAUC,EAAKH,EAALG,MAK9C,OACE/G,EAAAA,EAAAA,KAAA,MAAcC,UAAWC,EAAAA,UAAcH,UACrCQ,EAAAA,EAAAA,MAAA,SAAON,UAAWC,EAAAA,MAAUH,SAAA,EAC1BQ,EAAAA,EAAAA,MAAA,SAAON,UAAWC,EAAAA,UAAcH,SAAA,EAC9BQ,EAAAA,EAAAA,MAAA,MAAIN,UAAWC,EAAAA,KAASH,SAAA,EACtBC,EAAAA,EAAAA,KAAA,MAAIC,UAAWC,EAAAA,UAAcH,SAAC,WAC9BC,EAAAA,EAAAA,KAAA,MAAIC,UAAWC,EAAAA,UAAcH,SAAEuG,EAAgBS,SAEjDxG,EAAAA,EAAAA,MAAA,MAAIN,UAAWC,EAAAA,KAASH,SAAA,EACtBC,EAAAA,EAAAA,KAAA,MAAIC,UAAWC,EAAAA,UAAcH,SAAC,cAC9BC,EAAAA,EAAAA,KAAA,MAAIC,UAAWC,EAAAA,UAAcH,SAC1BuG,EAAgBQ,YAIvBvG,EAAAA,EAAAA,MAAA,SAAON,UAAWC,EAAAA,YAAgBH,SAAA,EAChCQ,EAAAA,EAAAA,MAAA,MAAIN,UAAWC,EAAAA,KAASH,SAAA,EACtBC,EAAAA,EAAAA,KAAA,MAAIC,UAAWC,EAAAA,UAAcH,SAAC,cAC9BC,EAAAA,EAAAA,KAAA,MAAIC,UAAWC,EAAAA,UAAcH,SAAE+E,QAEjCvE,EAAAA,EAAAA,MAAA,MAAIN,UAAWC,EAAAA,KAASH,SAAA,EACtBC,EAAAA,EAAAA,KAAA,MAAIC,UAAWC,EAAAA,UAAcH,SAAC,YAC9BC,EAAAA,EAAAA,KAAA,MAAIC,UAAWC,EAAAA,UAAcH,SAAE4G,QAEjCpG,EAAAA,EAAAA,MAAA,MAAIN,UAAWC,EAAAA,KAASH,SAAA,EACtBC,EAAAA,EAAAA,KAAA,MAAIC,UAAWC,EAAAA,UAAcH,SAAC,eAC9BC,EAAAA,EAAAA,KAAA,MAAIC,UAAWC,EAAAA,UAAcH,UAC3BQ,EAAAA,EAAAA,MAAA,OAAKN,UAAS,GAAAa,OAAKZ,EAAAA,eAAoBH,SAAA,EACrCC,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAAA,aAAiBH,SAzC1B,EA2CiBqG,IACpBpG,EAAAA,EAAAA,KAAA,OAAKa,KAAI,GAAAC,OAAKkG,EAAAA,EAAG,yBAEjBhH,EAAAA,EAAAA,KAAA,OAAKa,KAAI,GAAAC,OAAKkG,EAAAA,EAAG,yBAGrBhH,EAAAA,EAAAA,KAAA,KAAGC,UAAWC,EAAAA,WAAeH,SAjDtB,EAmDiBqG,GAAa,MAAQ,gBAKnD7F,EAAAA,EAAAA,MAAA,MAAIN,UAAWC,EAAAA,KAASH,SAAA,EACtBC,EAAAA,EAAAA,KAAA,MAAIC,UAAS,GAAAa,OAAKZ,EAAAA,UAAa,KAAAY,OAAIZ,EAAAA,WAAgBH,SAAC,WAGpDC,EAAAA,EAAAA,KAAA,MAAIC,UAAWC,EAAAA,UAAe2D,QAnDnB,SAACoD,GACpBA,EAAEC,OAAOC,QAAQ,MAAM1G,MAAMH,QAAU,OAlB3B,SAAAoG,GACpB3D,QAAQC,IAAI,SAAU0D,GACtBtE,GAASgF,EAAAA,EAAAA,IAAmBV,GAC9B,CAgBUW,CAAcX,EAChB,EAgD8D3G,UAClDC,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAAA,UAAeS,MAAM,OAAOC,OAAO,OAAMb,UACvDC,EAAAA,EAAAA,KAAA,OAAKa,KAAI,GAAAC,OAAKkG,EAAAA,EAAG,+BAhDpBN,EAwDb,KAIR,E,WClGA,GAA8B,4BAA9B,GAAoE,wBCepE,GAbe,SAAH5G,GAAsB,IAAhBwH,EAAQxH,EAARwH,SAChB,OACEtH,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,GAAgBH,UAC9BQ,EAAAA,EAAAA,MAAA,KAAGN,UAAWC,GAAYH,SAAA,CAAC,aAAWuH,MAG5C,ECyBA,GAzBoB,SAAHxH,GAA0B,IAApBM,EAAYN,EAAZM,aACf6F,GAAkBX,EAAAA,EAAAA,IAAYiC,EAAAA,IAEpC,OACEvH,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAgBH,UAC9BQ,EAAAA,EAAAA,MAAA,OAAKN,UAAWC,EAAcH,SAAA,EAC5BQ,EAAAA,EAAAA,MAAA,OAAKN,UAAWC,EAAaH,SAAA,EAC3BC,EAAAA,EAAAA,KAAA,MAAIC,UAAWC,EAAaH,SAAC,cAC7BQ,EAAAA,EAAAA,MAACiH,GAAAA,GAAI,CAACC,GAAG,YAAYxH,UAAWC,EAAUwE,MAAOtE,EAAaL,SAAA,CAAC,eAE7DC,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAiBS,MAAM,OAAOC,OAAO,OAAMb,UACzDC,EAAAA,EAAAA,KAAA,OAAKa,KAAI,GAAAC,OAAKC,EAAAA,EAAM,8BAIE,IAA3BkF,EAAgByB,QACf1H,EAAAA,EAAAA,KAAC2H,GAAM,CAACL,SAAU,cAElBtH,EAAAA,EAAAA,KAAC4H,GAAa,CAAC3B,gBAAiBA,QAK1C,EC/BA,GAAgC,oCAAhC,GAAgF,gCAAhF,GAAyH,6BAAzH,GAA+J,6BAA/J,GAAmM,2BAAnM,GAA4O,kCCA5O,IAAgB,cAAgB,sCAAsC,QAAU,gCAAgC,YAAc,oCAAoC,aAAe,qCAAqC,UAAY,kCAAkC,UAAY,kCAAkC,UAAY,kCAAkC,MAAQ,8BAA8B,UAAY,kCAAkC,cAAgB,uCC0Gpc,GAnGuB,SAAHnG,GAAuB,IAAjB+H,EAAS/H,EAAT+H,UAGlBvB,EAAkB,SAAAC,GACtB,OAAOA,EAAK7E,UAAU,EAAG,GAAG8E,cAAgBD,EAAK7E,UAAU,EAC7D,EAEMU,GAAWC,EAAAA,EAAAA,MAKXyF,GAAOxC,EAAAA,EAAAA,KAAY,SAAAZ,GAAK,OAAIA,EAAMqD,KAAK,IAG7C,OAFAhF,QAAQC,IAAI8E,IAGV9H,EAAAA,EAAAA,KAAAQ,EAAAA,SAAA,CAAAT,UACEC,EAAAA,EAAAA,KAAA,MAAIC,UAAWC,GAAAA,cAAkBH,SAC9B8H,EAAUpB,KACT,SAAA/C,GAKO,IAJLgD,EAAGhD,EAAHgD,IACAsB,EAActE,EAAdsE,eACAC,EAAQvE,EAARuE,SAAQC,EAAAxE,EACRyE,WAAcC,EAASF,EAATE,UAAWC,EAAIH,EAAJG,KAAMnB,EAAMgB,EAANhB,OAAQoB,EAAQJ,EAARI,SAMvC,OACEtI,EAAAA,EAAAA,KAAA,MAAcC,UAAWC,GAAAA,cAAkBH,UACzCQ,EAAAA,EAAAA,MAAA,SAAON,UAAWC,GAAAA,MAAUH,SAAA,EAC1BQ,EAAAA,EAAAA,MAAA,SAAON,UAAWC,GAAAA,UAAcH,SAAA,EAC9BQ,EAAAA,EAAAA,MAAA,MAAIN,UAAWC,GAAAA,QAAYH,SAAA,EACzBC,EAAAA,EAAAA,KAAA,MAAIC,UAAWC,GAAAA,aAAiBH,SAAC,eACjCC,EAAAA,EAAAA,KAAA,MAAIC,UAAWC,GAAAA,UAAcH,SAC1BuG,EAAgBgC,SAGrB/H,EAAAA,EAAAA,MAAA,MAAIN,UAAWC,GAAAA,QAAYH,SAAA,EACzBC,EAAAA,EAAAA,KAAA,MAAIC,UAAWC,GAAAA,aAAiBH,SAAC,eACjCC,EAAAA,EAAAA,KAAA,MAAIC,UAAWC,GAAAA,UAAcH,SAC1BuG,EAAgB8B,SAGrB7H,EAAAA,EAAAA,MAAA,MAAIN,UAAWC,GAAAA,QAAYH,SAAA,EACzBC,EAAAA,EAAAA,KAAA,MAAIC,UAAWC,GAAAA,aAAiBH,SAAC,UACjCC,EAAAA,EAAAA,KAAA,MAAIC,UAAWC,GAAAA,UAAcH,SAAEuG,EAAgB+B,YAGnD9H,EAAAA,EAAAA,MAAA,SAAON,UAAWC,GAAAA,YAAgBH,SAAA,EAChCQ,EAAAA,EAAAA,MAAA,MAAIN,UAAWC,GAAAA,QAAYH,SAAA,EACzBC,EAAAA,EAAAA,KAAA,MAAIC,UAAWC,GAAAA,aAAiBH,SAAC,YACjCC,EAAAA,EAAAA,KAAA,MAAIC,UAAWC,GAAAA,UAAcH,SAC1BuG,EAAgBY,SAGrB3G,EAAAA,EAAAA,MAAA,MAAIN,UAAWC,GAAAA,QAAYH,SAAA,EACzBC,EAAAA,EAAAA,KAAA,MAAIC,UAAWC,GAAAA,aAAiBH,SAAC,qBACjCC,EAAAA,EAAAA,KAAA,MAAIC,UAAWC,GAAAA,UAAcH,SAAEiI,QAEjCzH,EAAAA,EAAAA,MAAA,MAAIN,UAAWC,GAAAA,QAAYH,SAAA,EACzBC,EAAAA,EAAAA,KAAA,MAAIC,UAAWC,GAAAA,aAAiBH,SAAC,UACjCC,EAAAA,EAAAA,KAAA,MAAIC,UAAWC,GAAAA,UAAcH,SAAEkI,QAEjC1H,EAAAA,EAAAA,MAAA,MAAIN,UAAWC,GAAAA,QAAYH,SAAA,EACzBC,EAAAA,EAAAA,KAAA,MAAIC,UAAS,GAAAa,OAAKZ,GAAAA,aAAgB,KAAAY,OAAIZ,GAAAA,WAAgBH,SAAC,WAGvDC,EAAAA,EAAAA,KAAA,MACEC,UAAWC,GAAAA,UACX2D,QA9CS,SAAAoD,GACnBA,EAAEC,OAAOC,QAAQ,MAAM1G,MAAMH,QAAU,OAjB5B,SAAAoG,GACrBtE,GAASmG,EAAAA,EAAAA,IAAqB7B,GAChC,CAgBY8B,CAAe9B,EACjB,EA2CkC3G,UAEtBC,EAAAA,EAAAA,KAAA,OACEC,UAAWC,GAAAA,UACXS,MAAM,OACNC,OAAO,OAAMb,UAEbC,EAAAA,EAAAA,KAAA,OAAKa,KAAI,GAAAC,OAAKC,EAAAA,EAAM,+BAhDvB2F,EAwDb,OAKV,EC5DA,GA3BqB,SAAH5G,GAA0B,IAApBM,EAAYN,EAAZM,aAChBqI,GAAmBnD,EAAAA,EAAAA,IAAYoD,EAAAA,IAErC,OACE1I,EAAAA,EAAAA,KAAAQ,EAAAA,SAAA,CAAAT,UACEC,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,GAAkBH,UAChCQ,EAAAA,EAAAA,MAAA,OAAKN,UAAWC,GAAcH,SAAA,EAC5BQ,EAAAA,EAAAA,MAAA,OAAKN,UAAWC,GAAWH,SAAA,EACzBC,EAAAA,EAAAA,KAAA,MAAIC,UAAWC,GAAWH,SAAC,gBAC3BQ,EAAAA,EAAAA,MAACiH,GAAAA,GAAI,CAACC,GAAG,aAAaxH,UAAWC,GAAUwE,MAAOtE,EAAaL,SAAA,CAAC,iBAE9DC,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,GAAiBS,MAAM,OAAOC,OAAO,OAAMb,UACzDC,EAAAA,EAAAA,KAAA,OAAKa,KAAI,GAAAC,OAAKC,EAAAA,EAAM,8BAIG,IAA5B0H,EAAiBf,QAChB1H,EAAAA,EAAAA,KAAC2H,GAAM,CAACL,SAAU,eAElBtH,EAAAA,EAAAA,KAAC2I,GAAc,CAACd,UAAWY,IAC1B,UAKb,E,WCpBe,SAASG,KACtB,IAAMxG,GAAWC,EAAAA,EAAAA,MAKjBC,GAAoCC,EAAAA,EAAAA,UAAS,MAAKE,GAAAC,EAAAA,EAAAA,GAAAJ,EAAA,GAA3CuG,EAAUpG,EAAA,GAAEqG,EAAarG,EAAA,IAEhCQ,EAAAA,EAAAA,YAAU,WACR,IAAMC,GAAYC,EAAAA,EAAAA,GAAW,IAAIX,MACjCsG,EAAc5F,GACdd,GAASgB,EAAAA,EAAAA,IAAcF,GAC3B,GAAG,CAAC2F,EAAYzG,IAUd,OAFAW,QAAQC,IAAI,gBAAiB6F,IAG3B7I,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAUH,UACxBQ,EAAAA,EAAAA,MAACwI,GAAAA,EAAS,CAAAhJ,SAAA,EACRQ,EAAAA,EAAAA,MAAA,OAAKN,UAAWC,EAAiBH,SAAA,EAC/BC,EAAAA,EAAAA,KAACgJ,EAAAA,EAAS,CAACjJ,SAAS,WAEpBC,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAaH,UAC3BC,EAAAA,EAAAA,KAACiJ,EAAS,CAAC9G,WAdF,SAAAhB,GAEjB,OADmBgC,EAAAA,EAAAA,GAAWhC,EAEhC,EAW6Cf,aAAcyI,UAGrDtI,EAAAA,EAAAA,MAAA,OAAKN,UAAWC,EAAgBH,SAAA,EAC9BC,EAAAA,EAAAA,KAACkJ,EAAY,KACb3I,EAAAA,EAAAA,MAAA,OAAAR,SAAA,EACEC,EAAAA,EAAAA,KAACmJ,GAAW,CAAC/I,aAAcyI,KAC3B7I,EAAAA,EAAAA,KAACoJ,GAAY,CAAChJ,aAAcyI,cAMxC,C,gLC3DO,IAAMtB,EAAsB,SAAA7C,GAAK,OAAIA,EAAMqD,MAAM9B,eAAgB,EAC3DyC,EAAuB,SAAAhE,GAAK,OAAIA,EAAMqD,MAAMU,gBAAiB,EAE7DhD,EAA6B,SAAAf,GAAK,OAAIA,EAAMqD,MAAMvC,oBAAqB,EACvED,EAA+B,SAAAb,GAAK,OAAIA,EAAMqD,MAAM1C,sBAAuB,EAC3EM,EAAwB,SAAAjB,GAAK,OAAIA,EAAMqD,MAAMrC,eAAgB,EAI7D2D,EAAmB,SAAA3E,GAAK,OAAIA,EAAMqD,MAAMuB,KAAM,C,gICTpD,IAAMnD,EAAiB,SAAAzB,GAAK,OAAIA,EAAMwB,SAASA,SAASqD,KAAM,EAExDC,EAAc,SAAA9E,GAAK,OAAIA,EAAMwB,SAASA,SAASoD,KAAM,EACrDG,EAAe,SAAA/E,GAAK,OAAIA,EAAMwB,SAASwD,MAAO,EAC9CC,EAAgB,SAAAjF,GAAK,OAAIA,EAAMwB,SAASA,SAAS0D,OAAQ,C,qBCHtE,KAAgB,cAAgB,gCAAgC,aAAe,+BAA+B,QAAU,0BAA0B,MAAQ,wBAAwB,kBAAoB,oCAAoC,cAAgB,gCAAgC,WAAa,6BAA6B,MAAQ,wBAAwB,cAAgB,gCAAgC,SAAW,2BAA2B,YAAc,8BAA8B,aAAe,+BAA+B,YAAc,8BAA8B,OAAS,yBAAyB,aAAe,+BAA+B,WAAa,6BAA6B,QAAU,0BAA0B,SAAW,2B","sources":["webpack://react-homework-template/./src/components/TitlePage/title-page.module.css?6643","components/TitlePage/TitlePage.jsx","webpack://react-homework-template/./src/components/calendar/Calendar.module.css?e6fb","components/calendar/Calendar.jsx","components/calendar/DatePickerStyles.js","function/formatData.js","webpack://react-homework-template/./src/pages/Diary.module.css?de53","webpack://react-homework-template/./src/components/daySwitch/DaySwitch.module.css?b893","components/daySwitch/DaySwitch.js","webpack://react-homework-template/./src/components/dayDashboard/DayDashboard.module.css?bc48","webpack://react-homework-template/./src/components/dayDashboard/StatisticsItem/StatisticsItem.module.css?fac9","components/dayDashboard/Icon.jsx","components/dayDashboard/StatisticsItem/StatisticsItem.jsx","components/dayDashboard/DayDashboard.jsx","webpack://react-homework-template/./src/components/dayProducts/DayProducts.module.css?7af7","webpack://react-homework-template/./src/components/dayProducts/productsTable/ProductsTable.module.css?5674","components/dayProducts/productsTable/ProductsTable.jsx","webpack://react-homework-template/./src/components/emList/EmList.module.css?5cf5","components/emList/EmList.jsx","components/dayProducts/DayProducts.jsx","webpack://react-homework-template/./src/components/dayExercises/DayExercises.module.css?3b92","webpack://react-homework-template/./src/components/dayExercises/exercisesTable/ExercisesTable.module.css?d836","components/dayExercises/exercisesTable/ExercisesTable.js","components/dayExercises/DayExercises.jsx","pages/Diary.js","redux/diary/diarySelectors.js","redux/products/productsSelectors.js","webpack://react-homework-template/./src/components/userForm/UserForm.module.css?2194"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"titlePage\":\"title-page_titlePage__ZBar5\"};","import css from \"./title-page.module.css\";\n const TitlePage=({children})=>{\nreturn(\n    <h2 className={css.titlePage}>{children}</h2>\n)\n}\nexport default TitlePage;","// extracted by mini-css-extract-plugin\nexport default {\"iconSvg\":\"Calendar_iconSvg__yA5hg\",\"react-datepicker__wrapper\":\"Calendar_react-datepicker__wrapper__R10o+\",\"react-datepicker\":\"Calendar_react-datepicker__F0ziw\",\"react-datepicker__month-container\":\"Calendar_react-datepicker__month-container__438Q1\",\"react-datepicker__day-names\":\"Calendar_react-datepicker__day-names__iwLYn\",\"react-datepicker__header\":\"Calendar_react-datepicker__header__lErB8\",\"react-datepicker__header--has-time-select\":\"Calendar_react-datepicker__header--has-time-select__cdad4\",\"react-datepicker__day\":\"Calendar_react-datepicker__day__phMtB\",\"react-datepicker__day--selected\":\"Calendar_react-datepicker__day--selected__bPrT3\",\"react-datepicker__current-month\":\"Calendar_react-datepicker__current-month__Z8UpG\",\"react-datepicker__day-name\":\"Calendar_react-datepicker__day-name__yy8aH\",\"react-datepicker__day--disabled\":\"Calendar_react-datepicker__day--disabled__95buc\",\"react-datepicker__navigation\":\"Calendar_react-datepicker__navigation__5UZCD\",\"react-datepicker__navigation--previous\":\"Calendar_react-datepicker__navigation--previous__hAf3i\",\"react-datepicker__navigation--next\":\"Calendar_react-datepicker__navigation--next__Jd+1B\",\"react-datepicker__navigation-icon\":\"Calendar_react-datepicker__navigation-icon__L78Dq\",\"react-datepicker__week\":\"Calendar_react-datepicker__week__w2Sqq\",\"react-datepicker__month\":\"Calendar_react-datepicker__month__P0A6F\",\"react-datepicker__day--keyboard-selected\":\"Calendar_react-datepicker__day--keyboard-selected__cF5IU\",\"react-datepicker__day--outside-month\":\"Calendar_react-datepicker__day--outside-month__NAvqK\",\"react-datepicker__triangle\":\"Calendar_react-datepicker__triangle__9yloc\"};","\nimport DatePicker from 'react-datepicker';\n\nimport DatePickerStyles from './DatePickerStyles';\n\n// import 'react-datepicker/dist/react-datepicker-cssmodules.css';\n import \"react-datepicker/dist/react-datepicker.css\";\n\nimport sprite from '../../img/sprite/symbol-defs.svg';\nimport css from '../userForm/UserForm.module.css';\nimport style from \"./Calendar.module.css\"\n\nexport const Calendar = ({ selectedDate, setSelectedDate, display }) => {\n\n//  тут в переданных появился дисплей выше\n\n  const handleDateChange = date => {\n    setSelectedDate(date);\n  };\n\n  return (<>\n    <style>{DatePickerStyles}</style>\n   \n\n    <div className={ css.InputHi} style={{ position: 'relative', display:display}}>  \n    {/* это display:display я добавила, куда хочешь, переставь, передается в компоненте, где импортируется календарь как свойство календаря\n     */}\n\n        <svg className={style.iconSvg} width=\"18\" height=\"18\">\n          <use href={`${sprite}#icon-calendar-normal`}></use>\n        </svg>\n\n        <DatePicker  className= {style.myDatePicker}\n       selected={selectedDate}\n        onChange={handleDateChange}\n     \n         \n\n        customInput={<input className={css.inputField} style={{ cursor: 'pointer' }} />}\n\n          dateFormat={'dd.MM.yyyy'}\n          calendarStartDay={1}\n          formatWeekDay={day => day.substring(0, 1)}\n        />\n\n       \n      {/* </div> */}\n    </div></>\n  );\n};\n","const DatePickerStyles = `\n\n.react-datepicker__wrapper {\n    position: relative;\n    \n  }\n  .react-datepicker {\n    position: absolute;\n    left: -20px;\n    top: 50%;\n    transform: translate(-15%, 0%);\n    display: flex;\n    flex-direction: column;\n    align-items: center;    \n    padding: 14px;\n    background-color: #ef8964;\n    font-family: 'Roboto', sans-serif;\n    border-radius: 8px;\n  }\n   .react-datepicker__month-container {\n    float: inherit;\n    box-sizing: border-box;\n  }\n    .react-datepicker__day-names {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    padding-top: 14px;\n    margin-bottom: 8px;\n    border-top: 1px solid rgba(239, 237, 232, 0.2);\n  }\n    .react-datepicker__header {\n    position: relative;\n    background-color: #ef8964;    \n  }\n\n   .react-datepicker__header:not(.react-datepicker__header--has-time-select) {\n    border-bottom: 0px;\n    padding: 0;\n  }\n   .react-datepicker__day\n    react-datepicker__day--018.react-datepicker__day--selected\n    react-datepicker__day--today {\n    outline: none;\n    border: none;\n    background-color: #ef8964 !important;   \n  }\n   .react-datepicker__current-month {\n    color: #efede8;\n    font-family: 'Roboto', sans-serif;\n    font-size: 16px;\n    font-weight: 500;\n    line-height: normal;\n    margin-bottom: 14px;\n  }\n    .react-datepicker__day-name {\n    margin: 0;\n    color: rgba(239, 237, 232, 0.5);\n    font-family: 'Roboto', sans-serif;\n    font-size: 14px;\n    font-style: normal;\n    font-weight: 500;\n    line-height: normal;\n  }\n\n   .react-datepicker__day--disabled {\n    opacity: 25%;\n  }\n  .react-datepicker__navigation {\n    margin-top: 14px;\n    color: white;\n  }\n   .react-datepicker__navigation--previous {\n    left: 7px;\n    width: 18px;\n    height: 18px;\n  }\n   .react-datepicker__navigation--next {\n    right: 7px;\n    width: 18px;\n    height: 18px;\n  }\n   .react-datepicker__navigation-icon::before:hover:focus {\n    border-color: white;\n  }\n   .react-datepicker__week {\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    color: white;\n  }\n   .react-datepicker__day {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    flex-shrink: 0;\n    margin: 0;\n    border-radius: 50%;\n    color: #efede8;\n    font-family: 'Roboto', sans-serif;\n    font-size: 14px;\n    font-weight: 400;\n    line-height: 18px;\n    text-align: center;\n    width: 24px;\n    height: 24px;\n  }\n   .react-datepicker__month {\n    display: flex;\n    gap: 5px;\n    flex-direction: column;\n    justify-content: space-between;\n    margin: 0;\n  }\n    .react-datepicker__day--selected {\n    background-color: #040404;\n    color:  #ef8964 ;\n    font-size: 14px;\n  }\n   .react-datepicker__day--selected:hover {\n    border-radius: 50%;\n    background-color: white;\n  }\n    .react-datepicker__day:hover {\n    border-radius: 50%;\n    background-color: white;\n    color: #ef8964;\n  }\n    .react-datepicker__day--keyboard-selected {\n    border-radius: 50%;\n    background-color: white;\n    color: #ef8964;\n  }\n    .react-datepicker__day--outside-month {\n    opacity: 50%;\n  }\n    .react-datepicker__triangle {\n    display: none;\n  }\n\n`;\n\nexport default DatePickerStyles;","const formatDate = (date) => {\n  const day = String(date.getDate()).padStart(2, '0');\n  const month = String(date.getMonth() + 1).padStart(2, '0');\n  const year = date.getFullYear();\n  return `${year}-${month}-${day}`;\n};\n\n\nexport default formatDate;\n  \n\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Diary_container__ZOWkq\",\"diary\":\"Diary_diary__GRrvF\",\"calendarCont\":\"Diary_calendarCont__6mDiP\",\"calendar\":\"Diary_calendar__ESVay\",\"sectionCont\":\"Diary_sectionCont__+Xm4N\"};","// extracted by mini-css-extract-plugin\nexport default {\"body\":\"DaySwitch_body__Hyxv8\",\"dateButton\":\"DaySwitch_dateButton__QLX6x\",\"calendarIconBody\":\"DaySwitch_calendarIconBody__Uc--s\",\"calendarIconLine\":\"DaySwitch_calendarIconLine__-SHwu\",\"arrowsBody\":\"DaySwitch_arrowsBody__UmJMh\",\"arrowsLeft\":\"DaySwitch_arrowsLeft__qGPj2\",\"arrowsRight\":\"DaySwitch_arrowsRight__ml3WP\"};","import { forwardRef, useEffect, useState } from 'react';\nimport { format } from 'date-fns';\nimport DatePicker from 'react-datepicker';\nimport style from './DaySwitch.module.css';\nimport 'react-datepicker/dist/react-datepicker-cssmodules.css';\nimport { Calendar } from 'components/calendar/Calendar';\nimport formatDate from '../../function/formatData';\nimport { fetchAllDiary } from '../../redux/diary/diaryOperations';\nimport { useDispatch } from 'react-redux';\n\nconst OwnIconCalendar = () => {\n  return (\n    <div className={style.calendarIconBody}>\n      <div className={style.calendarIconLine}>\n        <span></span>\n        <span></span>\n      </div>\n    </div>\n  );\n};\n\nconst DaySwitch = ({ handleDate }) => {\n  const dispatch = useDispatch();\n  const [selectedDate, setSelectedDate] = useState(new Date());\n  const [formSelectedDate, setFormSelectedDate] = useState(null);\n  console.log('selectedDate >>', selectedDate);\n  console.log('formSelectedDate >>', formSelectedDate);\n  //   const convertDate =  date => {\n  //   const formatedDate = convertDate(date);\n  //   setSelectedDate(formatedDate);\n  // };\n\n  useEffect(() => {\n    const formatted = formatDate(selectedDate)\n    setFormSelectedDate(formatted)\n    dispatch(fetchAllDiary(formatted));\n  }, [selectedDate, dispatch]);\n\n  // потрібна дата реєстрації користувача\n  const [dateRegistration] = useState(\n    new Date(selectedDate).setDate(new Date(selectedDate).getDate() - 1)\n  );\n\n  const CustomInput = forwardRef(({ value, onClick }, ref) => {\n    return (\n      <div className={style.body}>\n        <div className={style.dateButton} onClick={onClick} ref={ref}>\n          {format(selectedDate, 'dd/MM/yyyy')}\n        </div>\n        <OwnIconCalendar />\n        <div className={style.arrowsBody}>\n          <span\n            className={style.arrowsLeft}\n            onClick={() => {\n              if (selectedDate !== dateRegistration) {\n                setSelectedDate(\n                  new Date(selectedDate).setDate(\n                    new Date(selectedDate).getDate() - 1\n                  )\n                );\n              }\n            }}\n          ></span>\n          <span\n            className={style.arrowsRight}\n            onClick={() =>\n              setSelectedDate(\n                new Date(selectedDate).setDate(\n                  new Date(selectedDate).getDate() + 1\n                )\n              )\n            }\n          ></span>\n        </div>\n      </div>\n    );\n  });\n\n  return (\n    <>\n      <DatePicker\n        selected={selectedDate}\n        onChange={date => {\n          setSelectedDate(date);\n          handleDate(date);\n        }}\n        customInput={<CustomInput />}\n        dateFormat={'dd MM yyyy'}\n        calendarStartDay={1}\n        formatWeekDay={day => day.substr(0, 1)}\n        minDate={dateRegistration}\n      />\n\n      <Calendar display={\"none\"}></Calendar> \n      {/* тут передается дисплей нан */}\n\n    </>\n  );\n};\n\nexport default DaySwitch;\n","// extracted by mini-css-extract-plugin\nexport default {\"dayDashboard\":\"DayDashboard_dayDashboard__h7nLm\",\"statisticList\":\"DayDashboard_statisticList__qUE0W\",\"adviceWrap\":\"DayDashboard_adviceWrap__dIlAc\",\"adviceIconWrap\":\"DayDashboard_adviceIconWrap__a4Yha\",\"exclamationIcon\":\"DayDashboard_exclamationIcon__Mmf+x\",\"adviceText\":\"DayDashboard_adviceText__Z-qD3\"};","// extracted by mini-css-extract-plugin\nexport default {\"statisticItem\":\"StatisticsItem_statisticItem__OTLqf\",\"statisticItemPositive\":\"StatisticsItem_statisticItemPositive__RlkXR\",\"statisticItemNegative\":\"StatisticsItem_statisticItemNegative__BW-f4\",\"primaryStatisticItem\":\"StatisticsItem_primaryStatisticItem__eKkjh\",\"statisticTitleWrap\":\"StatisticsItem_statisticTitleWrap__OwBh-\",\"statisticTitle\":\"StatisticsItem_statisticTitle__ve4XR\",\"statisticPrimaryTitle\":\"StatisticsItem_statisticPrimaryTitle__9TBuz\",\"statisticIcon\":\"StatisticsItem_statisticIcon__04E7e\",\"statisticValue\":\"StatisticsItem_statisticValue__rm2N7\"};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport sprite  from '../../img/sprite/symbol-defs.svg';\n\nfunction Icon({ className, iconId }) {\n  return (\n    <svg className={className} width=\"98px\" height=\"35px\">\n      <use href={`${sprite}#${iconId}`}/>\n    </svg>\n  );\n}\n\nIcon.propTypes = {\n  className: PropTypes.string,\n  iconId: PropTypes.string.isRequired,\n  onClick: PropTypes.func,\n};\n\nexport default Icon;","import css from './StatisticsItem.module.css';\nimport Icon from '../Icon';\nimport PropTypes from 'prop-types';\n\nconst StatisticsItem = ({\n  statisticsName,\n  statisticsIcon,\n  statisticsValue,\n  statisticPrimary,\n  fulfilledNorm = '',\n}) => {\n  return (\n    <>\n      <li  className={`${css.statisticItem} ${\n          statisticPrimary && css.primaryStatisticItem\n        } ${\n          fulfilledNorm !== '' && fulfilledNorm === 'positive'\n            ? css.statisticItemPositive\n            : fulfilledNorm !== '' && fulfilledNorm === 'negative'\n            ? css.statisticItemNegative\n            : ''\n        }`}>\n        <div className={css.statisticTitleWrap}>\n          <Icon className={css.statisticIcon} iconId={statisticsIcon} />\n          <p\n            className={`${css.statisticTitle} ${\n              statisticPrimary && css.statisticPrimaryTitle\n            }`}\n          >\n            {statisticsName}\n          </p>\n        </div>\n        <div className={css.statisticValue}>{statisticsValue}</div>\n      </li>\n    </>\n  );\n};\n\n\n\n\n\nStatisticsItem.propTypes = {\n  statisticsName: PropTypes.string.isRequired,\n  statisticsIcon: PropTypes.string.isRequired,\n  statisticsValue: PropTypes.string.isRequired,\n  statisticPrimary: PropTypes.bool,\n  fulfilledNorm: PropTypes.string,\n};\n\nexport default StatisticsItem;","import React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport css from './DayDashboard.module.css';\nimport StatisticsItem from './StatisticsItem/StatisticsItem';\n\nimport {\n  selectBurnedCaloriesByDate,\n  selectConsumedCaloriesByDate,\n  selectSportsRemaining,\n} from '../../redux/diary/diarySelectors';\n\n/*import {selectUserBmr } from '../../redux/UserPageCntrls/selectors';*/\n\nimport sprite from '../../img/sprite/symbol-defs.svg';\n\nexport const selectUserBmr = state => state.auth.user.bmr;\n\nconst DayDashboard = () => {\n  const dispatch = useDispatch();\n  const [calories, setCalories] = useState(null);\n  const [daily, setDaily] = useState(null);\n  const [burned, setBurned] = useState(null);\n  // const [dateExport, setDateExport] = useState(null);\n  \n    const consumedCaloriesByDate = useSelector(selectConsumedCaloriesByDate);\n    const burnedCaloriesByDate = useSelector(selectBurnedCaloriesByDate);\n    const sportsRemaining = useSelector(selectSportsRemaining);\n    const dailyCalorieIntake = useSelector(selectUserBmr);\n\n  useEffect(() => {\n    setCalories(consumedCaloriesByDate);\n    setDaily(dailyCalorieIntake);\n    setBurned(burnedCaloriesByDate);\n  }, [\n    consumedCaloriesByDate,\n    dailyCalorieIntake,\n    burnedCaloriesByDate, dispatch,\n  ]);\n\n  const caloriesRemaining = daily - calories;\n  const dailyPhysicalActivity = 110;\n\n  const isCaloriesRemaining = calories < daily ? `positive` : `negative`;\n  const isSportsRemaining = sportsRemaining > 0 ? `positive` : `negative`;\n\n  return (\n    <div className={css.dayDashboard}>\n      <ul className={css.statisticList}>\n        <StatisticsItem\n          statisticsName={'Daily calorie intake'}\n          statisticsValue={`${dailyCalorieIntake}`}\n          statisticsIcon={'icon-fork-filled'}\n          statisticPrimary\n        />\n        <StatisticsItem\n          statisticsName={'Daily physical activity'}\n          statisticsValue={`${dailyPhysicalActivity} min`}\n          statisticsIcon={'icon-dumbbell-filled'}\n          statisticPrimary\n        />\n        <StatisticsItem\n          statisticsName={'Calories consumed'}\n          statisticsValue={`${calories}`}\n          statisticsIcon={'icon-apple-filled'}\n        />\n        <StatisticsItem\n          statisticsName={'Calories burned'}\n          statisticsValue={`${burned}`}\n          statisticsIcon={'icon-burn-filled'}\n        />\n        <StatisticsItem\n          statisticsName={'Calories remaining'}\n          statisticsValue={`${caloriesRemaining}`}\n          statisticsIcon={'icon-bubble-filled'}\n          fulfilledNorm={isCaloriesRemaining}\n        />\n        <StatisticsItem\n          statisticsName={'Sports remaining'}\n          statisticsValue={\n            isSportsRemaining === 'positive'\n              ? `+${sportsRemaining} min`\n              : `${sportsRemaining} min`\n          }\n          statisticsIcon={'icon-running-filled'}\n        />\n      </ul>\n      <div className={css.adviceWrap}>\n        <div className={css.adviceIconWrap}>\n          <svg width=\"24px\" height=\"24px\">\n            <use href={`${sprite}#icon-warning`}></use>\n          </svg>{' '}\n        </div>\n        <p className={css.adviceText}>\n          Record all your meals in the calorie diary every day. This will help\n          you be aware of your nutrition and make informed choices.\n        </p>\n      </div>\n    </div>\n  );\n};\n\nexport default DayDashboard;\n","// extracted by mini-css-extract-plugin\nexport default {\"dayProducts\":\"DayProducts_dayProducts__LuDKI\",\"dayScroll\":\"DayProducts_dayScroll__46wb-\",\"diaryMen\":\"DayProducts_diaryMen__zlr12\",\"DiaryZag\":\"DayProducts_DiaryZag__rvcXM\",\"Butt\":\"DayProducts_Butt__NdM-k\",\"iconStrilka\":\"DayProducts_iconStrilka__Ilypr\",\"diaryNav\":\"DayProducts_diaryNav__Ds+gF\"};","// extracted by mini-css-extract-plugin\nexport default {\"diaryItem\":\"ProductsTable_diaryItem__kGjga\",\"elem\":\"ProductsTable_elem__B1b3i\",\"statusCircle\":\"ProductsTable_statusCircle__1lpXi\",\"cardStatus\":\"ProductsTable_cardStatus__d2IY4\",\"elementCont\":\"ProductsTable_elementCont__-LBk0\",\"nameCateg\":\"ProductsTable_nameCateg__85BEo\",\"nameValue\":\"ProductsTable_nameValue__k2xLk\",\"nameTrash\":\"ProductsTable_nameTrash__jBGkn\",\"recommendCont\":\"ProductsTable_recommendCont__kGpWW\",\"productRecommend\":\"ProductsTable_productRecommend__W3G-g\",\"productNotRecommend\":\"ProductsTable_productNotRecommend__6WQMJ\",\"trashValue\":\"ProductsTable_trashValue__0fzSq\",\"iconTresh\":\"ProductsTable_iconTresh__beqBw\",\"iconCentr\":\"ProductsTable_iconCentr__1vNWO\",\"table\":\"ProductsTable_table__rfz03\",\"bodyTable\":\"ProductsTable_bodyTable__FXofP\",\"diaryList\":\"ProductsTable_diaryList__NSGJb\"};","import { useSelector, useDispatch } from 'react-redux';\n\nimport css from './ProductsTable.module.css';\nimport svg from '../../../img/sprite/symbol-defs.svg';\n\n// import { selectDiaryProducts } from '../../../redux/diary/diarySelectors';\nimport { deleteProductDiary } from '../../../redux/diary/diaryOperations';\nimport { selectProducts } from '../../../redux/products/productsSelectors';\n// import { useEffect } from 'react';\n\nconst ProductsTable = ({ productsInDiary }) => {\n  const dispatch = useDispatch();\n\n  // console.log(productsInDiary);\n  const products = useSelector(selectProducts);\n  console.log('products >>', products);\n\n  const deleteProduct = _id => {\n    console.log('_id >>', _id);\n    dispatch(deleteProductDiary(_id));\n  };\n  \n\n  const userBlood = useSelector(state => state.auth.user.blood);\n  // const { groupBloodNotAllowed } = products;\n  const groupBloodNotAllowed = 1;\n\n  const capitalizedWord = word => {\n    return word.substring(0, 1).toUpperCase() + word.substring(1);\n  };\n  return (\n    <ul className={css.diaryList}>\n      {productsInDiary.map(\n        ({ _id, calories, grams, productId: { category, title } }) => {\n          const handleDelete = (e)=>{\n            e.target.closest(\"li\").style.display = \"none\";\n            deleteProduct(_id);\n          }\n          return (\n            <li key={_id} className={css.diaryItem}>\n              <table className={css.table}>\n                <tbody className={css.bodyTable}>\n                  <tr className={css.elem}>\n                    <th className={css.nameCateg}>Title</th>\n                    <td className={css.nameValue}>{capitalizedWord(title)}</td>\n                  </tr>\n                  <tr className={css.elem}>\n                    <th className={css.nameCateg}>Category</th>\n                    <td className={css.nameValue}>\n                      {capitalizedWord(category)}\n                    </td>\n                  </tr>\n                </tbody>\n                <tbody className={css.elementCont}>\n                  <tr className={css.elem}>\n                    <th className={css.nameCateg}>Calories</th>\n                    <td className={css.nameValue}>{calories}</td>\n                  </tr>\n                  <tr className={css.elem}>\n                    <th className={css.nameCateg}>Weight</th>\n                    <td className={css.nameValue}>{grams}</td>\n                  </tr>\n                  <tr className={css.elem}>\n                    <th className={css.nameCateg}>Recommend</th>\n                    <td className={css.nameValue}>\n                      <div className={`${css.recommendCont}`}>\n                        <svg className={css.statusCircle}>\n                          {/* <use href={`${svg}#icon-circle-green`}></use> */}\n                          {groupBloodNotAllowed[userBlood] ? (\n                            <use href={`${svg}#icon-circle-green`}></use>\n                          ) : (\n                            <use href={`${svg}#icon-circle-red`}></use>\n                          )}\n                        </svg>\n                        <p className={css.statusText}>\n                          {/* Recommended */}\n                          {groupBloodNotAllowed[userBlood] ? 'Yes' : 'No'}\n                        </p>\n                      </div>\n                    </td>\n                  </tr>\n                  <tr className={css.elem}>\n                    <th className={`${css.nameCateg} ${css.nameTrash}`}>\n                      Trash\n                    </th>\n                    <td className={css.iconCentr} onClick={handleDelete}>\n                      <svg className={css.iconTresh} width=\"20px\" height=\"20px\">\n                        <use href={`${svg}#icon-trash`}></use>\n                      </svg>\n                    </td>\n                  </tr>\n                </tbody>\n              </table>\n            </li>\n          );\n        }\n      )}\n    </ul>\n  );\n};\n\n/*ProductsTable.propTypes = {\n  products: PropTypes.array.isRequired,\n};*/\n\nexport default ProductsTable;\n","// extracted by mini-css-extract-plugin\nexport default {\"notTextCont\":\"EmList_notTextCont__27Lc8\",\"notText\":\"EmList_notText__EtxLu\"};","import css from \"./EmList.module.css\";\n/*import PropTypes from 'prop-types';*/\n\nconst EmList = ({ itemName }) => {\n  return (\n    <div className={css.notTextCont}>\n      <p className={css.notText}>Not found {itemName}</p>\n    </div>\n  );\n};\n\n\n/*EmList.propTypes = {\n  listName: PropTypes.string.isRequired,\n};*/\n\nexport default EmList;","import css from './DayProducts.module.css';\nimport ProductsTable from './productsTable/ProductsTable';\nimport sprite from '../../img/sprite/symbol-defs.svg';\nimport { Link } from 'react-router-dom';\nimport { selectDiaryProducts } from '../../redux/diary/diarySelectors';\nimport { useSelector } from 'react-redux';\n\nimport EmList from '../emList/EmList.jsx';\n\nconst DayProducts = ({ selectedDate }) => {\n  const productsInDiary = useSelector(selectDiaryProducts);\n\n  return (\n    <div className={css.dayProducts}>\n      <div className={css.dayScroll}>\n        <div className={css.diaryMen}>\n          <h3 className={css.DiaryZag}>Products</h3>\n          <Link to=\"/products\" className={css.Butt} state={selectedDate}>\n            Add product\n            <svg className={css.iconStrilka} width=\"16px\" height=\"16px\">\n              <use href={`${sprite}#icon-next-arrow`}></use>\n            </svg>\n          </Link>\n        </div>\n        {productsInDiary.length === 0 ? (\n          <EmList itemName={'products'} />\n        ) : (\n          <ProductsTable productsInDiary={productsInDiary} />\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default DayProducts;\n","// extracted by mini-css-extract-plugin\nexport default {\"dayExecrcises\":\"DayExercises_dayExecrcises__m2SMA\",\"dayScroll\":\"DayExercises_dayScroll__gcQVi\",\"dayNav\":\"DayExercises_dayNav__+T+Wl\",\"dayZag\":\"DayExercises_dayZag__iZ6rT\",\"Butt\":\"DayExercises_Butt__3osLG\",\"iconStrilka\":\"DayExercises_iconStrilka__4vViE\"};","// extracted by mini-css-extract-plugin\nexport default {\"diaryMainItem\":\"ExercisesTable_diaryMainItem__+QUNa\",\"element\":\"ExercisesTable_element__ciKJY\",\"elementWrap\":\"ExercisesTable_elementWrap__7MPXh\",\"nameCategory\":\"ExercisesTable_nameCategory__5Wc+t\",\"nameValue\":\"ExercisesTable_nameValue__iih7Y\",\"nameTrash\":\"ExercisesTable_nameTrash__xfZsB\",\"iconCentr\":\"ExercisesTable_iconCentr__ytpu6\",\"table\":\"ExercisesTable_table__vvyBI\",\"bodyTable\":\"ExercisesTable_bodyTable__EcdoH\",\"diaryMainList\":\"ExercisesTable_diaryMainList__+2ofD\"};","import css from './ExercisesTable.module.css';\n/*import PropTypes from 'prop-types';*/\nimport sprite from '../../../img/sprite/symbol-defs.svg';\nimport { useDispatch } from 'react-redux';\nimport { useSelector } from 'react-redux';\n\nimport { deleteExercisesDiary } from '../../../redux/diary/diaryOperations';\n\nconst ExercisesTable = ({ exercises }) => {\n  /*const { exercises } = props;*/\n\n  const capitalizedWord = word => {\n    return word.substring(0, 1).toUpperCase() + word.substring(1);\n  };\n\n  const dispatch = useDispatch();\n\n  const deleteExercise = _id => {\n    dispatch(deleteExercisesDiary(_id));\n  };\n  const data = useSelector(state => state.diary);\n  console.log(data);\n\n  return (\n    <>\n      <ul className={css.diaryMainList}>\n        {exercises.map(\n          ({\n            _id,\n            burnedCalories,\n            duration,\n            exerciseId: { equipment, name, target, bodyPart },\n          }) => {\n            const handleDelete = e => {\n              e.target.closest('li').style.display = 'none';\n              deleteExercise(_id);\n            };\n            return (\n              <li key={_id} className={css.diaryMainItem}>\n                <table className={css.table}>\n                  <tbody className={css.bodyTable}>\n                    <tr className={css.element}>\n                      <th className={css.nameCategory}>Body Part</th>\n                      <td className={css.nameValue}>\n                        {capitalizedWord(bodyPart)}\n                      </td>\n                    </tr>\n                    <tr className={css.element}>\n                      <th className={css.nameCategory}>Equipment</th>\n                      <td className={css.nameValue}>\n                        {capitalizedWord(equipment)}\n                      </td>\n                    </tr>\n                    <tr className={css.element}>\n                      <th className={css.nameCategory}>Name</th>\n                      <td className={css.nameValue}>{capitalizedWord(name)}</td>\n                    </tr>\n                  </tbody>\n                  <tbody className={css.elementWrap}>\n                    <tr className={css.element}>\n                      <th className={css.nameCategory}>Target</th>\n                      <td className={css.nameValue}>\n                        {capitalizedWord(target)}\n                      </td>\n                    </tr>\n                    <tr className={css.element}>\n                      <th className={css.nameCategory}>Burned Calories</th>\n                      <td className={css.nameValue}>{burnedCalories}</td>\n                    </tr>\n                    <tr className={css.element}>\n                      <th className={css.nameCategory}>Time</th>\n                      <td className={css.nameValue}>{duration}</td>\n                    </tr>\n                    <tr className={css.element}>\n                      <th className={`${css.nameCategory} ${css.nameTrash}`}>\n                        Trash\n                      </th>\n                      <td\n                        className={css.iconCentr}\n                        onClick={handleDelete}\n                      >\n                        <svg\n                          className={css.iconTresh}\n                          width=\"20px\"\n                          height=\"20px\"\n                        >\n                          <use href={`${sprite}#icon-trash`}></use>\n                        </svg>\n                      </td>\n                    </tr>\n                  </tbody>\n                </table>\n              </li>\n            );\n          }\n        )}\n      </ul>\n    </>\n  );\n};\n\n/*ExercisesTable.propTypes = {\n  exercises: PropTypes.array.isRequired,\n};\n\n*/\n\nexport default ExercisesTable;\n","import css from \"./DayExercises.module.css\";\nimport { Link } from 'react-router-dom';\n\nimport ExercisesTable from \"./exercisesTable/ExercisesTable\";\nimport EmList from '../emList/EmList.jsx';\n\nimport sprite from '../../img/sprite/symbol-defs.svg';\nimport { selectDiaryExercises } from '../../redux/diary/diarySelectors';\nimport { useSelector } from \"react-redux\";\n\n\n\nconst DayExercises = ({ selectedDate }) => {\n  const exercisesInDiary = useSelector(selectDiaryExercises);\n\n  return (\n    <>\n      <div className={css.dayExecrcises}>\n        <div className={css.dayScroll}>\n          <div className={css.dayNav}>\n            <h3 className={css.dayZag}>Execrcises</h3>\n            <Link to=\"/exercises\" className={css.Butt} state={selectedDate}>\n              Add exercises\n              <svg className={css.iconStrilka} width=\"16px\" height=\"16px\">\n                <use href={`${sprite}#icon-next-arrow`}></use>\n              </svg>\n            </Link>\n          </div>\n          {exercisesInDiary.length === 0 ? (\n            <EmList itemName={'exercises'} />\n          ) : (\n            <ExercisesTable exercises={exercisesInDiary} />\n          )}{' '}\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default DayExercises;\n\n","import css from './Diary.module.css';\nimport { useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport formatDate from '../function/formatData';\n\nimport TitlePage from '../components/TitlePage/TitlePage';\nimport DaySwitch from '../components/daySwitch/DaySwitch';\nimport DayDashboard from '../components/dayDashboard/DayDashboard';\nimport DayProducts from '../components/dayProducts/DayProducts';\nimport DayExercises from '../components/dayExercises/DayExercises';\nimport { Container } from '../components/Container/Container';\n\nimport { fetchAllDiary } from '../redux/diary/diaryOperations';\n// import { selectDiaryExercises, selectDiaryProducts } from '../redux/diary/diarySelectors';\n\n\nexport default function Diary() {\n  const dispatch = useDispatch();\n\n  // const productsInDiary = useSelector(selectDiaryProducts);\n  // const excersisesInDiary = useSelector(selectDiaryExercises);\n\n  const [dateExport, setDateExport] = useState(null);\n  \n  useEffect(() => {\n    const formatted = formatDate(new Date())\n    setDateExport(formatted);\n    dispatch(fetchAllDiary(formatted));\n}, [dateExport, dispatch]);\n\n  \n  const handleDate = date => {\n  const formatedDate = formatDate(date);\n    return formatedDate;\n  };\n\n  console.log(\"dateExport >>\", dateExport)\n  \n  return (\n    <div className={css.diary}>\n      <Container>\n        <div className={css.calendarCont}>\n          <TitlePage children=\"Diary\" />\n\n          <div className={css.calendar}>\n            <DaySwitch handleDate={handleDate} selectedDate={dateExport} />\n          </div>\n        </div>\n        <div className={css.sectionCont}>\n          <DayDashboard />\n          <div>\n            <DayProducts selectedDate={dateExport} />\n            <DayExercises selectedDate={dateExport}/>\n          </div>\n        </div>\n      </Container>\n    </div>\n  );\n}\n","export const selectDiaryProducts = state => state.diary.productsInDiary;\nexport const selectDiaryExercises = state => state.diary.exercisesInDiary;\n\nexport const selectBurnedCaloriesByDate = state => state.diary.burnedCaloriesByDate;\nexport const selectConsumedCaloriesByDate = state => state.diary.consumedCaloriesByDate;\nexport const selectSportsRemaining = state => state.diary.sportsRemaining;\n\n\nexport const selectDiaryIsLoading = state => state.diary.IsLoading;\nexport const selectDiaryError = state => state.diary.error;\n\n","export const selectProducts = state => state.products.products.items;\n// export const selectIsLoading = state => state.products.isLoading;\nexport const selectError = state => state.products.products.error;\nexport const selectFilter = state => state.products.filter;\nexport const selectSuccess = state => state.products.products.success;\n","// extracted by mini-css-extract-plugin\nexport default {\"formContainer\":\"UserForm_formContainer__UR0Yw\",\"sectionTitle\":\"UserForm_sectionTitle__UD9P1\",\"wrInput\":\"UserForm_wrInput__vG0i4\",\"input\":\"UserForm_input__krz-3\",\"wrapperInputField\":\"UserForm_wrapperInputField__8+JwJ\",\"wrapperFields\":\"UserForm_wrapperFields__HOEXF\",\"inputField\":\"UserForm_inputField__oR+hK\",\"label\":\"UserForm_label__panU-\",\"labelForRadio\":\"UserForm_labelForRadio__6dtEh\",\"forRadio\":\"UserForm_forRadio__XOhzt\",\"forRadioBtn\":\"UserForm_forRadioBtn__1hLkM\",\"wrapperRadio\":\"UserForm_wrapperRadio__vfL8d\",\"forLevelAct\":\"UserForm_forLevelAct__HQ8Yk\",\"button\":\"UserForm_button__v70Qd\",\"wrapperLevel\":\"UserForm_wrapperLevel__OZHYS\",\"wrappInput\":\"UserForm_wrappInput__1juhL\",\"forForm\":\"UserForm_forForm__yylEP\",\"calendar\":\"UserForm_calendar__UfVui\"};"],"names":["_ref","children","_jsx","className","css","Calendar","selectedDate","setSelectedDate","display","_jsxs","_Fragment","style","position","width","height","href","concat","sprite","DatePicker","selected","onChange","date","customInput","cursor","dateFormat","calendarStartDay","formatWeekDay","day","substring","String","getDate","padStart","month","getMonth","year","getFullYear","OwnIconCalendar","handleDate","dispatch","useDispatch","_useState","useState","Date","_useState2","_slicedToArray","_useState3","_useState4","formSelectedDate","setFormSelectedDate","console","log","useEffect","formatted","formatDate","fetchAllDiary","_useState5","setDate","dateRegistration","CustomInput","forwardRef","_ref2","ref","value","onClick","format","substr","minDate","iconId","statisticsName","statisticsIcon","statisticsValue","statisticPrimary","_ref$fulfilledNorm","fulfilledNorm","Icon","selectUserBmr","state","auth","user","bmr","calories","setCalories","daily","setDaily","_useState6","burned","setBurned","consumedCaloriesByDate","useSelector","selectConsumedCaloriesByDate","burnedCaloriesByDate","selectBurnedCaloriesByDate","sportsRemaining","selectSportsRemaining","dailyCalorieIntake","caloriesRemaining","isCaloriesRemaining","isSportsRemaining","StatisticsItem","productsInDiary","products","selectProducts","userBlood","blood","capitalizedWord","word","toUpperCase","map","_id","grams","_ref2$productId","productId","category","title","svg","e","target","closest","deleteProductDiary","deleteProduct","itemName","selectDiaryProducts","Link","to","length","EmList","ProductsTable","exercises","data","diary","burnedCalories","duration","_ref2$exerciseId","exerciseId","equipment","name","bodyPart","deleteExercisesDiary","deleteExercise","exercisesInDiary","selectDiaryExercises","ExercisesTable","Diary","dateExport","setDateExport","Container","TitlePage","DaySwitch","DayDashboard","DayProducts","DayExercises","selectDiaryError","error","items","selectError","selectFilter","filter","selectSuccess","success"],"sourceRoot":""}