{"version":3,"file":"static/js/220.8fdcf48b.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/btn/AuthButton/auth-button.module.css?196a","btn/AuthButton/AuthButton.jsx","webpack://react-homework-template/./src/components/InfoBlock/info-block.module.css?48e8","components/InfoBlock/InfoBlock.jsx","webpack://react-homework-template/./src/components/RemainderComponent/remainder-component.module.css?9e7d","components/RemainderComponent/RemainderComponent.jsx","webpack://react-homework-template/./src/components/TitlePage/title-page.module.css?6643","components/TitlePage/TitlePage.jsx","webpack://react-homework-template/./src/pages/SignUpPage/sign-up-page.module.css?7f5b","webpack://react-homework-template/./src/components/SignUpForm/sign-up-form.module.css?db87","components/SignUpForm/SignUpForm.jsx","pages/SignUpPage/SignUpPage.jsx","schemas/auth/auth-schemas.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"btn\":\"auth-button_btn__VaPm9\"};","import css from  \"./auth-button.module.css\";\n\nconst AuthButton = ({children})=>{\n    return(\n        <>\n        <button className={css.btn} type=\"submit\">{children}</button>\n        </>\n    )\n}\nexport default AuthButton;","// extracted by mini-css-extract-plugin\nexport default {\"tutorialsWrapper\":\"info-block_tutorialsWrapper__FdJAR\",\"videoTutorial\":\"info-block_videoTutorial__n8pjV\",\"videoPlayer\":\"info-block_videoPlayer__-ZIDW\",\"playButton\":\"info-block_playButton__C-qYX\",\"text\":\"info-block_text__xrxrz\",\"number\":\"info-block_number__uJr04\",\"textWrapper\":\"info-block_textWrapper__4hHTZ\",\"runningTutorial\":\"info-block_runningTutorial__ylKbQ\",\"iconWrapper\":\"info-block_iconWrapper__cb9lX\",\"runningMan\":\"info-block_runningMan__+ZuiT\",\"numberCal\":\"info-block_numberCal__zYD3W\",\"textCal\":\"info-block_textCal__S6Tbm\",\"textCalWrapper\":\"info-block_textCalWrapper__VPSu9\"};","import css from './info-block.module.css';\nimport sprite from '../../img/sprite/symbol-defs.svg';\nconst InfoBlock = () => {\n  return (\n    <div className={css.tutorialsWrapper}>\n      <div className={css.videoTutorial}>\n        <button type=\"button\" className={css.playButton}>\n          <svg className={css.videoPlayer}>\n            <use href={`${sprite}#icon-play`}></use>\n          </svg>\n        </button>\n        <div className={css.textWrapper}>\n          <span className={css.number}>350+</span>\n          <span className={css.text}>Video tutorial</span>\n        </div>\n      </div>\n\n      <div className={css.runningTutorial}>\n        <div className={css.iconWrapper}>\n          <svg className={css.runningMan}>\n            <use href={`${sprite}#icon-runningMan`}></use>\n          </svg>\n        </div>\n\n        <div className={css.textCalWrapper}>\n          <span className={css.numberCal}>500</span>\n          <span className={css.textCal}>cal</span>\n        </div>\n      </div>\n    </div>\n  );\n};\nexport default InfoBlock;\n","// extracted by mini-css-extract-plugin\nexport default {\"textRemainder\":\"remainder-component_textRemainder__4IE66\"};","import css from \"./remainder-component.module.css\";\nconst RemainderComponent = ({children,path})=>{\n    return (\n        <p className={css.textRemainder}>{children}</p>\n       )\n}\nexport default RemainderComponent;","// extracted by mini-css-extract-plugin\nexport default {\"titlePage\":\"title-page_titlePage__ZBar5\"};","import css from \"./title-page.module.css\";\n const TitlePage=({children})=>{\nreturn(\n    <h2 className={css.titlePage}>{children}</h2>\n)\n}\nexport default TitlePage;","// extracted by mini-css-extract-plugin\nexport default {\"heroContainer\":\"sign-up-page_heroContainer__bOpzf\",\"rightSide\":\"sign-up-page_rightSide__lHknm\",\"text\":\"sign-up-page_text__ofMSv\",\"link\":\"sign-up-page_link__GtB3D\",\"leftSide\":\"sign-up-page_leftSide__44I1H\"};","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"sign-up-form_form__tlpwI\",\"inputWrapper\":\"sign-up-form_inputWrapper__9t0t1\",\"input\":\"sign-up-form_input__3zlXk\",\"success\":\"sign-up-form_success__bD2U4\",\"error\":\"sign-up-form_error__ydkH9\",\"iconSuccess\":\"sign-up-form_iconSuccess__XDNXi\",\"iconError\":\"sign-up-form_iconError__-HBb4\",\"eyeContainer\":\"sign-up-form_eyeContainer__pCBIb\",\"iconEye\":\"sign-up-form_iconEye__r6hQb\",\"textError\":\"sign-up-form_textError__Qprym\",\"textSuccess\":\"sign-up-form_textSuccess__+ByMd\",\"messageWrapper\":\"sign-up-form_messageWrapper__p5cVi\",\"label\":\"sign-up-form_label__Q6-6w\",\"inputContainer\":\"sign-up-form_inputContainer__Hl2q6\"};","import css from './sign-up-form.module.css';\nimport { useDispatch } from 'react-redux';\nimport { useState } from 'react';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport AuthButton from '../../btn/AuthButton/AuthButton';\nimport { signUpSchema } from '../../schemas/auth/auth-schemas';\nimport { register } from '../../redux/auth/auth-operations';\nimport sprite from '../../img/sprite/symbol-defs.svg';\nimport toast from 'react-hot-toast';\n\n\n\nconst SignUpForm = () => {\n  const dispatch = useDispatch();\n  const [showPassword, setShowPassword] = useState(false);\n \n  const initialValues = {\n    name: '',\n    email: '',\n    password: '',\n  };\n\n  const handleSubmit = async (\n    values,\n    { setSubmitting, resetForm, setError }\n  ) => {\n    \n    try{\n      await dispatch(register(values));\n    setTimeout(() => {\n      toast.success('Register successful!', { position: 'top-right' });\n      setSubmitting(false);\n      resetForm();\n    }, 1000); \n    \n    } catch (error) {\n      toast.error('Register failed. Please, try again.', {\n        position: 'top-center',\n      });\n      setSubmitting(false);\n    }\n  };\n\n  return (\n    <>\n      <Formik\n        initialValues={initialValues}\n        onSubmit={handleSubmit}\n        validationSchema={signUpSchema}\n      >\n        {({ errors, touched }) => (\n          <Form className={css.form}>\n            <div className={css.inputWrapper}>\n              <div className={css.label}>\n                <Field\n                  type=\"text\"\n                  name=\"name\"\n                  placeholder=\"Name\"\n                  className={`${css.input} ${\n                    errors.name && touched.name ? css.error : ''\n                  }\n                ${touched.name && !errors.name ? css.success : ''}`}\n                />\n                {errors.name && touched.name && (\n                  <div className={css.messageWrapper}>\n                    <svg className={css.iconError}>\n                      <use href={`${sprite}#icon-circle-red`}></use>\n                    </svg>\n                    <ErrorMessage\n                      component=\"p\"\n                      className={css.textError}\n                      name=\"name\"\n                    />\n                  </div>\n                )}\n                {!errors.email && touched.email && (\n                  <div className={css.messageWrapper}>\n                    <svg className={css.iconSuccess}>\n                      <use href={`${sprite}#icon-circle-green`}></use>\n                    </svg>\n                    <p className={css.textSuccess}>Success name</p>\n                  </div>\n                )}\n              </div>\n\n              <div className={css.label}>\n                <Field\n                  type=\"email\"\n                  name=\"email\"\n                  placeholder=\"Email\"\n                  className={`${css.input} ${\n                    errors.name && touched.name ? css.error : ''\n                  }\n                  ${touched.name && !errors.name ? css.success : ''}`}\n                />\n                {errors.email && touched.email && (\n                  <div className={css.messageWrapper}>\n                    <svg className={css.iconError}>\n                      <use href={`${sprite}#icon-circle-red`}></use>\n                    </svg>\n                    <ErrorMessage\n                      component=\"p\"\n                      className={css.textError}\n                      name=\"email\"\n                    />\n                  </div>\n                )}\n                {!errors.email && touched.email && (\n                  <div className={css.messageWrapper}>\n                    <svg className={css.iconSuccess}>\n                      <use href={`${sprite}#icon-circle-green`}></use>\n                    </svg>\n                    <p className={css.textSuccess}>Success email</p>\n                  </div>\n                )}\n              </div>\n              <div className={css.label}>\n                <div className={css.eyeContainer}>\n                  <Field\n                    type={showPassword ? 'text' : 'password'}\n                    name=\"password\"\n                    placeholder=\"Password\"\n                    className={`${css.input} ${\n                      errors.password && touched.password ? css.error : ''\n                    }\n              ${touched.name && !errors.name ? css.success : ''}`}\n                    required\n                  />\n\n                  {showPassword ? (\n                    <svg\n                      className={css.iconEye}\n                      onClick={() => setShowPassword(!showPassword)}\n                    >\n                      <use href={`${sprite}#icon-eye-open`}></use>\n                    </svg>\n                  ) : (\n                    <svg\n                      className={css.iconEye}\n                      onClick={() => setShowPassword(!showPassword)}\n                    >\n                      <use href={`${sprite}#icon-eye-off`}></use>\n                    </svg>\n                  )}\n                </div>\n\n                {errors.password && touched.password && (\n                  <div className={css.messageWrapper}>\n                    <svg className={css.iconError}>\n                      <use href={`${sprite}#icon-circle-red`}></use>\n                    </svg>\n                    <ErrorMessage\n                      component=\"p\"\n                      className={css.textError}\n                      name=\"password\"\n                    />\n                  </div>\n                )}\n                {!errors.password && touched.password && (\n                  <div className={css.messageWrapper}>\n                    <svg className={css.iconSuccess}>\n                      <use href={`${sprite}#icon-circle-green`}></use>\n                    </svg>\n                    <p className={css.textSuccess}>Success password</p>\n                  </div>\n                )}\n              </div>\n              <AuthButton children=\"Sign Up\" />\n            </div>\n          </Form>\n        )}\n      </Formik>\n    </>\n  );\n};\n\nexport default SignUpForm;\n","import css from './sign-up-page.module.css';\nimport { NavLink } from 'react-router-dom';\n\nimport SignUpForm from '../../components/SignUpForm/SignUpForm';\nimport TitlePage from '../../components/TitlePage/TitlePage';\nimport RemainderComponent from 'components/RemainderComponent/RemainderComponent';\nimport InfoBlock from \"../../components/InfoBlock/InfoBlock\";\n\n\nconst SignUpPage = ({ onSubmit }) => {\n  return (\n    <div className={css.heroContainer}>\n    <div className={css.leftSide}>\n     <TitlePage children=\"Sign Up\" />\n      <p className={css.text}>\n        Thank you for your interest in our platform. To complete the\n        registration process, please provide us with the following information.\n      </p>\n      <SignUpForm />\n      <RemainderComponent children=\"Already have an account? \" />\n      <NavLink to=\"/signin\" className={css.link}>\n        Sign In\n      </NavLink>\n      </div>\n      <div className={css.rightSide}>\n      <InfoBlock />\n      </div>\n    </div>\n    \n  );\n};\nexport default SignUpPage;\n","import * as Yup from 'yup';\n\nexport  const signUpSchema = Yup.object().shape({\n    name: Yup.string()\n      .required('Required')\n      .min(2, 'Name must be at least 2 characters')\n      .max(10, 'Name must be no more than 10 characters'),\n  \n      email: Yup.string().email('Error email').matches(/^\\w+@[a-zA-Z]+?\\.[a-zA-Z]{2,3}$/).required('Required'),\n\n  \n    password: Yup.string()\n      .min(6, 'Password must be at least 6 characters')\n     .required('Required'),\n  });\n  export  const signInSchema = Yup.object().shape({\n    email: Yup.string().email('Error email').matches(/^\\w+@[a-zA-Z]+?\\.[a-zA-Z]{2,3}$/).required('Required'),\n\n    password: Yup.string()\n      .min(6, 'Password must be at least 6 characters')\n      .required('Required'),\n  });"],"names":["_ref","children","_jsx","_Fragment","className","css","type","_jsxs","href","concat","sprite","path","dispatch","useDispatch","_useState","useState","_useState2","_slicedToArray","showPassword","setShowPassword","handleSubmit","_ref2","_asyncToGenerator","_regeneratorRuntime","_callee","values","setSubmitting","resetForm","_context","prev","next","setError","register","setTimeout","toast","position","t0","stop","_x","_x2","apply","arguments","Formik","initialValues","name","email","password","onSubmit","validationSchema","signUpSchema","_ref3","errors","touched","Form","Field","placeholder","ErrorMessage","component","required","onClick","AuthButton","TitlePage","SignUpForm","RemainderComponent","NavLink","to","InfoBlock","Yup","shape","min","max","matches","signInSchema"],"sourceRoot":""}