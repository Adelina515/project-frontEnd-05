{"version":3,"file":"static/js/468.845b36c2.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/TitlePage/title-page.module.css?6643","components/TitlePage/TitlePage.jsx","function/formatData.js","webpack://react-homework-template/./src/modal/basicModalWindow/BasicModalWindow.module.css?9441","modal/basicModalWindow/BasicModalWindow.jsx","webpack://react-homework-template/./src/pages/Exercises.module.css?a48d","components/exercise/ExerciseHead.js","components/exercise/ExerciseCategoriesItem.js","components/exercise/ExerciseCategoriesList.js","webpack://react-homework-template/./src/components/exercise/ExerciseList/ExerciseList.module.css?13ad","components/exercise/ExerciseList/ExerciseItem.js","components/exercise/ExerciseList/ExerciseList.js","webpack://react-homework-template/./src/components/exercise/Modal/style.module.css?7b13","components/exercise/Modal/ModalStat.js","components/exercise/Modal/ExerciseModal.js","pages/Exercises.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"titlePage\":\"title-page_titlePage__ZBar5\"};","import css from \"./title-page.module.css\";\n const TitlePage=({children})=>{\nreturn(\n    <h2 className={css.titlePage}>{children}</h2>\n)\n}\nexport default TitlePage;","const formatDate = (date) => {\n  const day = String(date.getDate()).padStart(2, '0');\n  const month = String(date.getMonth() + 1).padStart(2, '0');\n  const year = date.getFullYear();\n  return `${year}-${month}-${day}`;\n};\n\n\nexport default formatDate;\n  \n\n","// extracted by mini-css-extract-plugin\nexport default {\"backdrop\":\"BasicModalWindow_backdrop__S-RX6\",\"modal\":\"BasicModalWindow_modal__bxnFf\",\"modalCloseBtn\":\"BasicModalWindow_modalCloseBtn__PzRfu\",\"svgclose\":\"BasicModalWindow_svgclose__hfpF1\"};","import svg from '../../img/sprite/symbol-defs.svg';\nimport css from './BasicModalWindow.module.css';\nexport const BasicModalWindow = ({ isOpen, onClose, children }) => {\n  if (!isOpen) return null;\n  const handleEscapeKey = event => {\n    if (event.code === 'Escape') {\n      console.log('Escape');\n      onClose();\n      return document.removeEventListener('keydown', handleEscapeKey);\n    }\n  };\n  isOpen && document.addEventListener('keydown', handleEscapeKey);\n  const handleClose = e => {\n    if (\n      e.target.dataset.type === 'backdrop' ||\n      e.target.dataset.type === 'close-modal'\n    ) {\n      onClose();\n    }\n  };\n  return (\n    <div className={css.backdrop} onClick={handleClose} data-type=\"backdrop\">\n      <div className={css.modal}>\n        <button\n          className={css.modalCloseBtn}\n          type=\"button\"\n          onClick={handleClose}\n          data-type=\"close-modal\"\n        >\n          <svg className={css.svgclose}>\n            <use href={`${svg}#icon-close-modal`}></use>\n          </svg>\n        </button>\n        {children}\n      </div>\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"exerciseCategoryContainer\":\"Exercises_exerciseCategoryContainer__cXTxL\",\"activeCat\":\"Exercises_activeCat__C0nC+\",\"cat\":\"Exercises_cat__15D9M\",\"arrCont\":\"Exercises_arrCont__gAKAe\",\"arrElCont\":\"Exercises_arrElCont__YWwZx\"};","import React from 'react';\nimport TitlePage from 'components/TitlePage/TitlePage';\n\nimport css from '../../pages/Exercises.module.css';\n\nfunction ExerciseHead({exCat, setExCat}) {\n    const handleChangeCat=(e)=>{\n        setExCat(e.target.innerText.trim())\n    }\n    return (\n        <div>\n             <TitlePage children={\"Exercises\"}/>\n            <div className={css.exerciseCategoryContainer}>\n                <div onClick={handleChangeCat} className={exCat===\"Body parts\" ? css.activeCat:css.cat}>Body parts</div>\n                <div onClick={handleChangeCat} className={exCat===\"Muscles\" ? css.activeCat:css.cat}>Muscles</div>\n                <div onClick={handleChangeCat} className={exCat===\"Equipment\" ? css.activeCat:css.cat}>Equipment</div>\n            </div>\n        </div>\n    );\n}\n\nexport default ExerciseHead;","import React from 'react';\n\nimport css from '../../pages/Exercises.module.css';\n\nfunction ExerciseCategoriesItem({ item, setSpec }) {\n  return (\n    <div\n      className={css.arrElCont}\n      onClick={e => {\n        setSpec(item);\n      }}\n    >\n      <img src={item.imgURL} alt=\"exercise_image\" />\n      <div className={css.arrElContText}>\n        <h2>{item.name.toUpperCase()[0] + item.name.substring(1)}</h2>\n        <br />\n        <p>{item.filter}</p>\n      </div>\n    </div>\n  );\n}\n\nexport default ExerciseCategoriesItem;\n","import React from 'react';\nimport { nanoid } from '@reduxjs/toolkit';\n\nimport css from '../../pages/Exercises.module.css';\nimport ExerciseCategoriesItem from './ExerciseCategoriesItem';\nfunction ExerciseCategoriesList({ arr, setSpec }) {\n  try{\n    return (\n      <div className={css.arrCont}>\n        {arr.map(v => (\n          <ExerciseCategoriesItem item={v} key={nanoid()} setSpec={setSpec}/>\n        ))}\n      </div>\n    );\n  }catch{\n    return <></>\n  }\n\n}\n\nexport default ExerciseCategoriesList;\n","// extracted by mini-css-extract-plugin\nexport default {\"exerciseListContainer\":\"ExerciseList_exerciseListContainer__FqpZ6\",\"exerciseItemContainer\":\"ExerciseList_exerciseItemContainer__UUNG7\",\"startBtn\":\"ExerciseList_startBtn__lc1HN\",\"exerciseStatsContainer\":\"ExerciseList_exerciseStatsContainer__-H-FZ\"};","import React from 'react';\n\nimport svg from 'img/sprite/symbol-defs.svg';\nimport css from './ExerciseList.module.css';\n\nfunction ExerciseItem({ exercise, setSelected }) {\n  const capitalize = str => (str ? str[0].toUpperCase() + str.slice(1) : '');\n  return (\n    <div className={css.exerciseItemContainer}>\n      <h3>\n        <svg className={css.svgTitle}>\n          <use href={`${svg}#icon-runningMan`}></use>\n        </svg>\n        {capitalize(exercise.name)}\n      </h3>\n      <div className={css.exerciseStatsContainer}>\n        <p>\n          Burned calories <span>{exercise.burnedCalories}</span>\n        </p>\n        <p>\n          Body part <span>{capitalize(exercise.bodyPart)}</span>\n        </p>\n        <p>\n          Target <span>{capitalize(exercise.target)}</span>\n        </p>\n      \n      </div>\n      <button className={css.startBtn} onClick={() => setSelected(exercise)}>\n        Start\n        <svg>\n          <use href={`${svg}#icon-next-arrow`}></use>\n        </svg>\n      </button>\n    </div>\n  );\n}\n\nexport default ExerciseItem;\n","import React, { useState } from 'react';\nimport { useEffect } from 'react';\nimport instance from 'instance/instance';\nimport ExerciseItem from './ExerciseItem';\nimport { nanoid } from '@reduxjs/toolkit';\n\nimport css from './ExerciseList.module.css';\n\nfunction ExerciseList({ name, filter, setSelected }) {\n  const [arr, setArr] = useState([]);\n  useEffect(() => {\n    if (filter && name) {\n      instance.get(`exercises/filter?category=${filter}&specific=${name}&page=1$perPage=8`).then(v => {\n        setArr(v.data.result);\n      });\n    }\n  }, [setArr, name, filter]);\n\n  return (\n    <div className={css.exerciseListContainer}>\n      {arr.map(v => (\n        <ExerciseItem key={nanoid()} exercise={v} setSelected={setSelected}/>\n      ))}\n    </div>\n  );\n}\n\nexport default ExerciseList;\n","// extracted by mini-css-extract-plugin\nexport default {\"modalContainer\":\"style_modalContainer__yQozi\",\"modalAnimation\":\"style_modalAnimation__VL0eW\",\"modalTime\":\"style_modalTime__seuca\",\"time\":\"style_time__5dkMr\",\"pauseSvg\":\"style_pauseSvg__tsFB1\",\"pauseBtn\":\"style_pauseBtn__URUfM\",\"progressBar\":\"style_progressBar__H8dZJ\",\"dotContainer\":\"style_dotContainer__BFghM\",\"spin\":\"style_spin__-qfD6\",\"dot\":\"style_dot__eKUiR\",\"exerciseChars\":\"style_exerciseChars__0hZob\",\"modalStat\":\"style_modalStat__Ochir\",\"focus\":\"style_focus__K8-BB\",\"addBtn\":\"style_addBtn__1eZzl\",\"thumb\":\"style_thumb__O-z-Q\",\"finalStats\":\"style_finalStats__NvXFl\",\"toDiary\":\"style_toDiary__BunZ2\"};","import React from 'react';\nimport css from './style.module.css';\n\n\nfunction ModalStat({ name, val }) {\n  return (\n    <div className={css.modalStat}>\n      {name}\n      <p>{(val.toUpperCase()[0]+val.slice(1))}</p>\n    </div>\n  );\n}\n\nexport default ModalStat;\n","import React, { useEffect, useState } from 'react';\nimport css from './style.module.css';\nimport svg from '../../../img/sprite/symbol-defs.svg';\nimport ModalStat from './ModalStat';\nimport { useDispatch } from 'react-redux';\nimport { addExercisesDiary } from '../../../redux/diary/diaryOperations';\nimport formatDate from 'function/formatData';\nimport { BasicModalWindow } from 'modal/basicModalWindow/BasicModalWindow';\nimport { NavLink } from 'react-router-dom';\n\nfunction ExerciseModal({ ex, setEx }) {\n  const [seconds, setSeconds] = useState(0);\n  const [paused, setPaused] = useState(false);\n  const [open, setOpen] = useState(false);\n  const [finished, setFinished] = useState(false);\n  const dispatch = useDispatch();\n\n  const percentTimeLeft = (1 - seconds / (ex.time * 60)) * 100;\n  const caloriesBurned = ((ex.burnedCalories * percentTimeLeft) / 100).toFixed(\n    2\n  );\n  useEffect(() => {\n    if (ex) {\n      setOpen(true);\n      setSeconds(ex.time * 60);\n      setFinished(false);\n    }\n  }, [ex]);\n  const onClose = () => {\n    if (finished) {\n      setOpen(false);\n      setEx(undefined);\n    } else {\n      const data = {\n        exerciseId: ex._id,\n        duration: (seconds / 60).toFixed(2),\n        burnedCalories: caloriesBurned,\n        date: formatDate(new Date()),\n      };\n      dispatch(addExercisesDiary(data));\n      setFinished(true);\n    }\n  };\n  useEffect(() => {\n    if (!paused && !finished && seconds > 0) {\n      setTimeout(() => {\n        if (seconds === 1) {\n          setFinished(true);\n          setSeconds(0);\n        } else {\n          setSeconds(seconds - 1);\n        }\n      }, 1000);\n    }\n  }, [seconds, paused, finished]);\n\n  const convertTime = sec => {\n    const min = Math.floor(sec / 60);\n    sec = sec % 60;\n    if (sec < 10) {\n      sec = '0' + sec;\n    }\n    if (min < 10) {\n      return '0' + min + ':' + sec;\n    }\n    return min + ':' + sec;\n  };\n  if (!finished) {\n    return (\n      <BasicModalWindow isOpen={open} onClose={onClose}>\n        <div className={css.modalContainer}>\n          <img\n            className={css.modalAnimation}\n            alt=\"exercise tutorial\"\n            src={ex.gifUrl}\n          />\n          <div className={css.modalTime}>\n            <p>Time</p>\n            <div\n              className={css.progressBar}\n              style={{\n                background: `radial-gradient(closest-side, #10100f 90%, transparent 90% 100%), conic-gradient(var( --decorate-color) ${percentTimeLeft}%, transparent ${percentTimeLeft}%)`,\n              }}\n            >\n              <div\n                className={css.dotContainer}\n                style={{ animationPlayState: paused ? 'paused' : 'running' }}\n              >\n                <div className={css.dot} />\n              </div>\n              <div className={css.time}>{convertTime(seconds)}</div>\n            </div>\n\n            <button className={css.pauseBtn} onClick={() => setPaused(!paused)}>\n              <svg className={css.pauseSvg}>\n                {paused ? (\n                  <use href={`${svg}#icon-play-square`} />\n                ) : (\n                  <use href={`${svg}#icon-pause-square`} />\n                )}\n              </svg>\n            </button>\n            <p>\n              Burned calories:{' '}\n              <span className={css.focus}>{caloriesBurned}</span>\n            </p>\n            <div className={css.exerciseChars}>\n              <ModalStat name={'Name'} val={ex.name} />\n              <ModalStat name={'Target'} val={ex.target} />\n              <ModalStat name={'Body Part'} val={ex.bodyPart} />\n              <ModalStat name={'Equipment'} val={ex.equipment} />\n            </div>\n          </div>\n          <button\n            className={css.addBtn}\n            onClick={() => {\n              setFinished(true);\n            }}\n          >\n            Add to diary\n          </button>\n        </div>\n      </BasicModalWindow>\n    );\n  } else {\n    return (\n      <BasicModalWindow isOpen={open} onClose={onClose}>\n        <div className={css.modalContainer}>\n          <div className={css.thumbContainer}>\n            <img\n              className={css.thumb}\n              src=\"https://s3-alpha-sig.figma.com/img/59d5/2b65/a6a2c8aec4a3496c837c9b0a87d5c044?Expires=1707091200&Key-Pair-Id=APKAQ4GOSFWCVNEHN3O4&Signature=HWANRVCWxA5doH3IckHWRjdihxZuoDiPb8gjXjgqC1af~NIWaZ5B62XnAWJMy9EOtTNQQ1-U5K2RT2u5lrO6pX79GxkJdX3vR0PfwNb~tvIJlL4V2z4WJOojCtrZdyP8piYXvDrFAzZ~HOv9oze~1t9CQ9TkQGjxr4DmmkA4j5MI9p2Whqbch-tAaZMNc~RTRPrIMR9wGNtWu7p8tNLOjvbfPX-5hXqt-lr~AqNSd7Uo~o5I7mM0Pa7HFxI~e0yIwZuVUK5NxMWqe162kV8z31b0ZA~sraruDDCslFBhg6sdESXDNN6-9VoAI-H9UAxVCP1rxIGK75rSxwlOBG5etA__\"\n              alt=\"arm\"\n            />\n          </div>\n          <h1>Well done</h1>\n          <div className={css.finalStats}>\n            <p>\n              Your time:{' '}\n              <span className={css.focus}>\n                {(seconds / 60).toFixed(2)} minutes\n              </span>\n            </p>\n            <p>\n              Burned calories:{' '}\n              <span className={css.focus}>{caloriesBurned}</span>\n            </p>\n          </div>\n\n          <button\n            onClick={() => {\n              setOpen(false);\n            }}\n          >\n            To next product\n          </button>\n          <br />\n          <NavLink to={'/diary'} onClick={onClose} className={css.toDiary}>\n            To the diary\n          </NavLink>\n        </div>\n      </BasicModalWindow>\n    );\n  }\n}\n\nexport default ExerciseModal;\n","import React, { useEffect, useState } from 'react';\nimport ExerciseHead from '../components/exercise/ExerciseHead';\n\nimport instance from 'instance/instance';\nimport ExerciseCategoriesList from '../components/exercise/ExerciseCategoriesList';\nimport ExerciseList from '../components/exercise/ExerciseList/ExerciseList';\nimport ExerciseModal from 'components/exercise/Modal/ExerciseModal';\n\nfunction Exercises(props) {\n  const [exCat, setExCat] = useState('Body parts');\n  const [arr, setArr] = useState({ totalPages: 1, currentPage: 1, result: [] });\n  const [loading, setLoading] = useState(false);\n  const [selectedEx, setSelectedEx] = useState(undefined);\n\n  const [specific, setSpecific] = useState({\n    name: undefined,\n    filter: undefined,\n  });\n\n  useEffect(() => {\n    console.log('skskks');\n    setArr([]);\n    setLoading(true);\n    instance\n      .get('exercises?filter=' + exCat)\n      .then(v => {\n        setArr(v.data);\n      })\n      .finally(() => setLoading(false));\n    setSpecific({});\n    setSelectedEx(undefined);\n  }, [setArr, exCat]);\n\n  if (!specific.name || !specific.filter) {\n    return (\n      <div>\n        <ExerciseHead exCat={exCat} setExCat={setExCat} />\n        {loading ? (\n          <div>Loading...</div>\n        ) : (\n          <ExerciseCategoriesList arr={arr.result} setSpec={setSpecific} />\n        )}\n      </div>\n    );\n  } else {\n    return (\n      <div>\n        <ExerciseHead exCat={exCat} setExCat={setExCat} />\n        <ExerciseList\n          name={specific.name}\n          filter={specific.filter}\n          setSelected={setSelectedEx}\n        />\n        {selectedEx ? <ExerciseModal ex={selectedEx} setEx={setSelectedEx} /> : <></>}\n      </div>\n    );\n  }\n}\n\nexport default Exercises;\n"],"names":["_ref","children","_jsx","className","css","date","day","String","getDate","padStart","month","getMonth","year","getFullYear","concat","BasicModalWindow","isOpen","onClose","document","addEventListener","handleEscapeKey","event","code","console","log","removeEventListener","handleClose","e","target","dataset","type","onClick","_jsxs","href","svg","exCat","setExCat","handleChangeCat","innerText","trim","TitlePage","item","setSpec","src","imgURL","alt","name","toUpperCase","substring","filter","arr","map","v","ExerciseCategoriesItem","nanoid","_unused","_Fragment","exercise","setSelected","capitalize","str","slice","burnedCalories","bodyPart","_useState","useState","_useState2","_slicedToArray","setArr","useEffect","instance","then","data","result","ExerciseItem","val","ex","setEx","seconds","setSeconds","_useState3","_useState4","paused","setPaused","_useState5","_useState6","open","setOpen","_useState7","_useState8","finished","setFinished","dispatch","useDispatch","percentTimeLeft","time","caloriesBurned","toFixed","undefined","exerciseId","_id","duration","formatDate","Date","addExercisesDiary","setTimeout","NavLink","to","gifUrl","style","background","animationPlayState","sec","min","Math","floor","convertTime","ModalStat","equipment","props","totalPages","currentPage","loading","setLoading","selectedEx","setSelectedEx","_useState9","_useState10","specific","setSpecific","finally","ExerciseHead","ExerciseList","ExerciseModal","ExerciseCategoriesList"],"sourceRoot":""}